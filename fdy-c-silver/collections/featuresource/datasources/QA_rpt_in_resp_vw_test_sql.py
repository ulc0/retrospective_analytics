# Databricks notebook source
# MAGIC %md
# MAGIC ### This notebook is designed to facilitate the rpt_in_resp_vw query with:
# MAGIC 1) Quality Assurance Process
# MAGIC 2) Decompse and simplify sql statements: Please present in recommendations
# MAGIC 4) Explore design options: Please present in recommendations
# MAGIC 3) Enhance the performance: Please present in recommendations
# MAGIC
# MAGIC ### Feedback from jb/CDC to kp/BAH
# MAGIC
# MAGIC * Please store this notebook with our other notebooks located here: /home/developer/projects/cdh-lava-core/premier_respiratory/utility - in cdh-lava-core
# MAGIC * Please create  your own branch with dev-xxxx for your alias and first update there
# MAGIC * Individual SQL statements for the 10 queries have been provided in both SQL and PySpark formats -
# MAGIC   * /home/developer/projects/cdh-lava-core/premier_respiratory/autogenerated/python - in cdh-lava-core
# MAGIC   * /home/developer/projects/cdh-lava-core/premier_respiratory/autogenerated/sql - in cdh-lava-core
# MAGIC
# MAGIC * Generally, I advocate for the use of Databricks SQL queries, which are maintained in the architecture and shared, as opposed to the notebook approach for newcomers.
# MAGIC * Experienced developers like yourself may choose any tools with which you are comfortable.
# MAGIC Please share any recommendations in the section below.
# MAGIC
# MAGIC ### Recommendations from kp/BAH to jb/CDC
# MAGIC
# MAGIC #### SQL Statement Simplification Recommendations
# MAGIC
# MAGIC * Please add
# MAGIC
# MAGIC #### Design Option Recommendations
# MAGIC
# MAGIC * Following our morning discussion, the initial test case should focus on COVID-19 data from January 23, segmented by age group, specifically for ages 4 and under, with metrics on hospitalization (inpatient) counts.
# MAGIC   * jb: The first test case should directly query `cdh_premier_v2`.
# MAGIC * Based on our morning discussion, the long-term idea of developing an exploratory granular detail semantic model/cube is promising.
# MAGIC   * jb: The effort to create this model is less than a day if the facts and dimensions are already established.
# MAGIC   * jb: The return on investment could be significant within the first week or two of testing.
# MAGIC

# COMMAND ----------

# MAGIC %md
# MAGIC from pyspark.sql import SparkSession
# MAGIC from pyspark.sql.functions import col
# MAGIC from pyspark.sql import functions as F

# COMMAND ----------

dbutils.widgets.text('catalog','edav_prd_cdh','cdh_premier_ra')
schema_options =['cdh_premier_v2','cdh_premier_ra',] 
dbutils.widgets.dropdown('source database','cdh_premier_v2',schema_options)
dbutils.widgets.dropdown('target database','cdh_premier_ra',schema_options)

# COMMAND ----------

catalog=dbutils.widgets.get('catalog')
srcDatabase=dbutils.widgets.get('source database')
targetDatabase=dbutils.widgets.get('target database')

# COMMAND ----------

# Create a temporary view last_admit_date
query ="""
Select
      MAX(admit_date) AS last_admit_date,
    DATE_ADD(
      DATE_TRUNC('MONTH', MAX(admit_date)),
      -1
    ) as first_day_last_admit_date_prior_month
  FROM
    """+catalog+"""."""+srcDatabase+""".patdemo"""

print(query)
#df = spark.sql(query)
#df.createOrReplaceTempView("last_admit_date")
#display(df)

# COMMAND ----------

# Create a temporary view first_admit_date
query ="""
 Select
      lower_bound_value admit_date_lower_bound
    from
      """+catalog+"""."""+targetDatabase+""".code_date_range_admit_date_vw
    limit 1"""
print(query)
#df = spark.sql(query)
#df.createOrReplaceTempView("first_admit_date")
#display(df)

# COMMAND ----------

# Create a temporary view paticd
query ="""
Select
      pat_key,
      min(icd_pri_sec) min_icd_pri_sec,
      max(icd_code) icd_code,
      max(ac.icd_covid_code) icd_covid_code,
      max(ac.icd_covid_parent) icd_covid_parent,
      max(af.icd_flu_code) icd_flu_code,
      max(af.icd_flu_parent) icd_flu_parent,
      max(ar.icd_rsv_code) icd_rsv_code,
      max(ar.icd_rsv_parent) icd_rsv_parent
    from 
      """+catalog+"""."""+srcDatabase+""".paticd_diag b
      inner join """+catalog+"""."""+targetDatabase+""".code_icd_pri_sec_only_vw AS bp ON b.icd_pri_sec = bp.icd_pri_sec_only_code
      left join """+catalog+"""."""+targetDatabase+""".code_icd_covid_vw AS ac ON b.icd_code = ac.icd_covid_code
      left join """+catalog+"""."""+targetDatabase+""".code_icd_flu_vw AS af ON b.icd_code = af.icd_flu_code
      left join """+catalog+"""."""+targetDatabase+""".code_icd_rsv_vw AS ar ON b.icd_code = ar.icd_rsv_code
    group by pat_key"""
print(query)

#df = spark.sql(query)
#df.createOrReplaceTempView("paticd")
#display(df)

# COMMAND ----------

# Create a temporary view select_code_range_agecat_8bin_vw
query ="""
    Select
      trim(meta_yyyy) meta_yyyy,
      trim(meta_mm) meta_mm,
      trim(range_agecat_8bin) range_agecat_8bin,
      trim(range_agecat_8bin_code) range_agecat_8bin_code,
      range_agecat_8bin_sort,
      lower_bound_value,
      upper_bound_value
    from
      """+catalog+"""."""+targetDatabase+""".code_range_agecat_8bin_vw
    """
print(query)

#df = spark.sql(query)
#df.createOrReplaceTempView("select_code_range_agecat_8bin_vw")
#display(df)

# COMMAND ----------

# Create a temporary view select_code_range_agecat_5bin_vw
query ="""
Select
      trim(meta_yyyy) meta_yyyy,
      trim(meta_mm) meta_mm,
      trim(range_agecat_5bin) range_agecat_5bin,
      trim(range_agecat_5bin_code) range_agecat_5bin_code,
      range_agecat_5bin_sort,
      lower_bound_value,
      upper_bound_value
    from
      """+catalog+"""."""+targetDatabase+""".code_range_agecat_5bin_vw
    """
print(query)

#df = spark.sql(query)
#df.createOrReplaceTempView("select_code_range_agecat_5bin_vw")
#display(df)

# COMMAND ----------

# Create a temporary view select_code_range_agecat_4bin_vw
query ="""
Select
      trim(meta_yyyy) meta_yyyy,
      trim(meta_mm) meta_mm,
      trim(range_agecat_4bin) range_agecat_4bin,
      trim(range_agecat_4bin_code) range_agecat_4bin_code,
      range_agecat_4bin_sort,
      lower_bound_value,
      upper_bound_value
    from
      """+catalog+"""."""+targetDatabase+""".code_range_agecat_4bin_vw
    """
print(query)

#df = spark.sql(query)
#df.createOrReplaceTempView("select_code_range_agecat_4bin_vw")
#display(df)

# COMMAND ----------

#QA1

query ="""
SELECT count(*)
from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
     inner join paticd AS b ON a.pat_key = b.pat_key
     inner join last_admit_date bnd on a.admit_date <= bnd.first_day_last_admit_date_prior_month
     inner join first_admit_date  on a.admit_date >= admit_date_lower_bound
     """
print(query)

#df = spark.sql(query)
#df.show()

# COMMAND ----------

#QA2

query ="""
SELECT count(*)
from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
     inner join paticd AS b ON a.pat_key = b.pat_key
     inner join last_admit_date bnd on a.admit_date <= bnd.first_day_last_admit_date_prior_month
     inner join first_admit_date  on a.admit_date >= admit_date_lower_bound
     left join """+catalog+"""."""+targetDatabase+""".code_pat_type_inpatient_vw AS ap ON a.pat_type = ap.pat_type_inpatient_code"""
    # left join """+catalog+"""."""+targetDatabase+""".code_i_o_ind_inpatient_vw AS ai ON a.i_o_ind = ai.i_o_ind_inpatient_code
    # left join """+catalog+"""."""+srcDatabase+""".patbill as p on a.pat_key = p.pat_key
    # left join """+catalog+"""."""+srcDatabase+""".hospchg h on p.hosp_chg_id = h.hosp_chg_id
    # left join """+catalog+"""."""+srcDatabase+""".chgmstr as g on p.std_chg_code = g.std_chg_code
    # left join """+catalog+"""."""+srcDatabase+""".providers as c on a.prov_id = c.prov_id
    # left join """+catalog+"""."""+srcDatabase+""".disstat as d on a.disc_status = d.disc_status
    # left join """+catalog+"""."""+srcDatabase+""".pat_sdoh as sd on a.pat_key = sd.pat_key
    # left join select_code_range_agecat_8bin_vw ac8 on (
    #    decimal(a.age) >= decimal(ac8.lower_bound_value)
    #    and decimal(a.age) < decimal(ac8.upper_bound_value)
    #    and ac8.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #    decimal(a.age) >= decimal(ac8.lower_bound_value)
    #    and ac8.upper_bound_value is null
    #    and ac8.lower_bound_value is not null
    #    and a.age is not null
    #    )
    # left join select_code_range_agecat_5bin_vw ac5 on (
    #    decimal(a.age) >= decimal(ac5.lower_bound_value)
    #    and decimal(a.age) < decimal(ac5.upper_bound_value)
    #    and ac5.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #        decimal(a.age) >= decimal(ac5.lower_bound_value)
    #        and ac5.upper_bound_value is null
    #        and ac5.lower_bound_value is not null
    #        and a.age is not null
    #    )
    # left join select_code_range_agecat_4bin_vw ac4 on (
    #    decimal(a.age) >= decimal(ac4.lower_bound_value)
    #    and decimal(a.age) < decimal(ac4.upper_bound_value)
    #    and ac4.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #    decimal(a.age) >= decimal(ac4.lower_bound_value)
    #    and ac4.upper_bound_value is null
    #    and ac4.lower_bound_value is not null
    #    and a.age is not null
    #    )
    # left join """+catalog+"""."""+targetDatabase+""".code_disc_status_expired_vw AS ae ON a.disc_status = ae.disc_status_expired_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_sum_icu_vw AS au ON g.clin_sum_code = au.clin_sum_icu_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_dtl_vent_vw AS av ON g.clin_dtl_code = av.clin_dtl_vent_code
    # left join """+catalog+"""."""+targetDatabase+""".code_sex_vw AS sx ON a.gender = sx.sex_code --coalesce(icd_covid_code, icd_flu_code, icd_rsv_code) is not null
    # """
print(query)

#df = spark.sql(query)
#df.show()

# COMMAND ----------

#QA3

query ="""
SELECT count(*)
from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
     inner join paticd AS b ON a.pat_key = b.pat_key
     inner join last_admit_date bnd on a.admit_date <= bnd.first_day_last_admit_date_prior_month
     inner join first_admit_date  on a.admit_date >= admit_date_lower_bound
     left join """+catalog+"""."""+targetDatabase+""".code_pat_type_inpatient_vw AS ap ON a.pat_type = ap.pat_type_inpatient_code
     left join """+catalog+"""."""+targetDatabase+""".code_i_o_ind_inpatient_vw AS ai ON a.i_o_ind = ai.i_o_ind_inpatient_code"""
    # left join """+catalog+"""."""+srcDatabase+""".patbill as p on a.pat_key = p.pat_key
    # left join """+catalog+"""."""+srcDatabase+""".hospchg h on p.hosp_chg_id = h.hosp_chg_id
    # left join """+catalog+"""."""+srcDatabase+""".chgmstr as g on p.std_chg_code = g.std_chg_code
    # left join """+catalog+"""."""+srcDatabase+""".providers as c on a.prov_id = c.prov_id
    # left join """+catalog+"""."""+srcDatabase+""".disstat as d on a.disc_status = d.disc_status
    # left join """+catalog+"""."""+srcDatabase+""".pat_sdoh as sd on a.pat_key = sd.pat_key
    # left join select_code_range_agecat_8bin_vw ac8 on (
    #    decimal(a.age) >= decimal(ac8.lower_bound_value)
    #    and decimal(a.age) < decimal(ac8.upper_bound_value)
    #    and ac8.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #    decimal(a.age) >= decimal(ac8.lower_bound_value)
    #    and ac8.upper_bound_value is null
    #    and ac8.lower_bound_value is not null
    #    and a.age is not null
    #    )
    # left join select_code_range_agecat_5bin_vw ac5 on (
    #    decimal(a.age) >= decimal(ac5.lower_bound_value)
    #    and decimal(a.age) < decimal(ac5.upper_bound_value)
    #    and ac5.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #        decimal(a.age) >= decimal(ac5.lower_bound_value)
    #        and ac5.upper_bound_value is null
    #        and ac5.lower_bound_value is not null
    #        and a.age is not null
    #    )
    # left join select_code_range_agecat_4bin_vw ac4 on (
    #    decimal(a.age) >= decimal(ac4.lower_bound_value)
    #    and decimal(a.age) < decimal(ac4.upper_bound_value)
    #    and ac4.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #    decimal(a.age) >= decimal(ac4.lower_bound_value)
    #    and ac4.upper_bound_value is null
    #    and ac4.lower_bound_value is not null
    #    and a.age is not null
    #    )
    # left join """+catalog+"""."""+targetDatabase+""".code_disc_status_expired_vw AS ae ON a.disc_status = ae.disc_status_expired_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_sum_icu_vw AS au ON g.clin_sum_code = au.clin_sum_icu_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_dtl_vent_vw AS av ON g.clin_dtl_code = av.clin_dtl_vent_code
    # left join """+catalog+"""."""+targetDatabase+""".code_sex_vw AS sx ON a.gender = sx.sex_code --coalesce(icd_covid_code, icd_flu_code, icd_rsv_code) is not null
    # """
print(query)

#df = spark.sql(query)
#df.show()

# COMMAND ----------

#QA4

query ="""
SELECT count(*)
from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
     inner join paticd AS b ON a.pat_key = b.pat_key
     inner join last_admit_date bnd on a.admit_date <= bnd.first_day_last_admit_date_prior_month
     inner join first_admit_date  on a.admit_date >= admit_date_lower_bound
     left join """+catalog+"""."""+targetDatabase+""".code_pat_type_inpatient_vw AS ap ON a.pat_type = ap.pat_type_inpatient_code
     left join """+catalog+"""."""+targetDatabase+""".code_i_o_ind_inpatient_vw AS ai ON a.i_o_ind = ai.i_o_ind_inpatient_code
     left join """+catalog+"""."""+srcDatabase+""".patbill as p on a.pat_key = p.pat_key"""
    # left join """+catalog+"""."""+srcDatabase+""".hospchg h on p.hosp_chg_id = h.hosp_chg_id
    # left join """+catalog+"""."""+srcDatabase+""".chgmstr as g on p.std_chg_code = g.std_chg_code
    # left join """+catalog+"""."""+srcDatabase+""".providers as c on a.prov_id = c.prov_id
    # left join """+catalog+"""."""+srcDatabase+""".disstat as d on a.disc_status = d.disc_status
    # left join """+catalog+"""."""+srcDatabase+""".pat_sdoh as sd on a.pat_key = sd.pat_key
    # left join select_code_range_agecat_8bin_vw ac8 on (
    #    decimal(a.age) >= decimal(ac8.lower_bound_value)
    #    and decimal(a.age) < decimal(ac8.upper_bound_value)
    #    and ac8.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #    decimal(a.age) >= decimal(ac8.lower_bound_value)
    #    and ac8.upper_bound_value is null
    #    and ac8.lower_bound_value is not null
    #    and a.age is not null
    #    )
    # left join select_code_range_agecat_5bin_vw ac5 on (
    #    decimal(a.age) >= decimal(ac5.lower_bound_value)
    #    and decimal(a.age) < decimal(ac5.upper_bound_value)
    #    and ac5.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #        decimal(a.age) >= decimal(ac5.lower_bound_value)
    #        and ac5.upper_bound_value is null
    #        and ac5.lower_bound_value is not null
    #        and a.age is not null
    #    )
    # left join select_code_range_agecat_4bin_vw ac4 on (
    #    decimal(a.age) >= decimal(ac4.lower_bound_value)
    #    and decimal(a.age) < decimal(ac4.upper_bound_value)
    #    and ac4.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #    decimal(a.age) >= decimal(ac4.lower_bound_value)
    #    and ac4.upper_bound_value is null
    #    and ac4.lower_bound_value is not null
    #    and a.age is not null
    #    )
    # left join """+catalog+"""."""+targetDatabase+""".code_disc_status_expired_vw AS ae ON a.disc_status = ae.disc_status_expired_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_sum_icu_vw AS au ON g.clin_sum_code = au.clin_sum_icu_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_dtl_vent_vw AS av ON g.clin_dtl_code = av.clin_dtl_vent_code
    # left join """+catalog+"""."""+targetDatabase+""".code_sex_vw AS sx ON a.gender = sx.sex_code --coalesce(icd_covid_code, icd_flu_code, icd_rsv_code) is not null
    # """
print(query)

#df = spark.sql(query)
#df.show()

# COMMAND ----------

#QA5

query ="""
SELECT count(*)
from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
     inner join paticd AS b ON a.pat_key = b.pat_key
     inner join last_admit_date bnd on a.admit_date <= bnd.first_day_last_admit_date_prior_month
     inner join first_admit_date  on a.admit_date >= admit_date_lower_bound
     left join """+catalog+"""."""+targetDatabase+""".code_pat_type_inpatient_vw AS ap ON a.pat_type = ap.pat_type_inpatient_code
     left join """+catalog+"""."""+targetDatabase+""".code_i_o_ind_inpatient_vw AS ai ON a.i_o_ind = ai.i_o_ind_inpatient_code
     left join """+catalog+"""."""+srcDatabase+""".patbill as p on a.pat_key = p.pat_key
     left join """+catalog+"""."""+srcDatabase+""".hospchg h on p.hosp_chg_id = h.hosp_chg_id"""
    # left join """+catalog+"""."""+srcDatabase+""".chgmstr as g on p.std_chg_code = g.std_chg_code
    # left join """+catalog+"""."""+srcDatabase+""".providers as c on a.prov_id = c.prov_id
    # left join """+catalog+"""."""+srcDatabase+""".disstat as d on a.disc_status = d.disc_status
    # left join """+catalog+"""."""+srcDatabase+""".pat_sdoh as sd on a.pat_key = sd.pat_key
    # left join select_code_range_agecat_8bin_vw ac8 on (
    #    decimal(a.age) >= decimal(ac8.lower_bound_value)
    #    and decimal(a.age) < decimal(ac8.upper_bound_value)
    #    and ac8.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #    decimal(a.age) >= decimal(ac8.lower_bound_value)
    #    and ac8.upper_bound_value is null
    #    and ac8.lower_bound_value is not null
    #    and a.age is not null
    #    )
    # left join select_code_range_agecat_5bin_vw ac5 on (
    #    decimal(a.age) >= decimal(ac5.lower_bound_value)
    #    and decimal(a.age) < decimal(ac5.upper_bound_value)
    #    and ac5.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #        decimal(a.age) >= decimal(ac5.lower_bound_value)
    #        and ac5.upper_bound_value is null
    #        and ac5.lower_bound_value is not null
    #        and a.age is not null
    #    )
    # left join select_code_range_agecat_4bin_vw ac4 on (
    #    decimal(a.age) >= decimal(ac4.lower_bound_value)
    #    and decimal(a.age) < decimal(ac4.upper_bound_value)
    #    and ac4.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #    decimal(a.age) >= decimal(ac4.lower_bound_value)
    #    and ac4.upper_bound_value is null
    #    and ac4.lower_bound_value is not null
    #    and a.age is not null
    #    )
    # left join """+catalog+"""."""+targetDatabase+""".code_disc_status_expired_vw AS ae ON a.disc_status = ae.disc_status_expired_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_sum_icu_vw AS au ON g.clin_sum_code = au.clin_sum_icu_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_dtl_vent_vw AS av ON g.clin_dtl_code = av.clin_dtl_vent_code
    # left join """+catalog+"""."""+targetDatabase+""".code_sex_vw AS sx ON a.gender = sx.sex_code --coalesce(icd_covid_code, icd_flu_code, icd_rsv_code) is not null
    # """
print(query)

#df = spark.sql(query)
#df.show()

# COMMAND ----------

#QA6

query ="""
SELECT count(*)
from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
     inner join paticd AS b ON a.pat_key = b.pat_key
     inner join last_admit_date bnd on a.admit_date <= bnd.first_day_last_admit_date_prior_month
     inner join first_admit_date  on a.admit_date >= admit_date_lower_bound
     left join """+catalog+"""."""+targetDatabase+""".code_pat_type_inpatient_vw AS ap ON a.pat_type = ap.pat_type_inpatient_code
     left join """+catalog+"""."""+targetDatabase+""".code_i_o_ind_inpatient_vw AS ai ON a.i_o_ind = ai.i_o_ind_inpatient_code
     left join """+catalog+"""."""+srcDatabase+""".patbill as p on a.pat_key = p.pat_key
     left join """+catalog+"""."""+srcDatabase+""".hospchg h on p.hosp_chg_id = h.hosp_chg_id
     left join """+catalog+"""."""+srcDatabase+""".chgmstr as g on p.std_chg_code = g.std_chg_code"""
    # left join """+catalog+"""."""+srcDatabase+""".providers as c on a.prov_id = c.prov_id
    # left join """+catalog+"""."""+srcDatabase+""".disstat as d on a.disc_status = d.disc_status
    # left join """+catalog+"""."""+srcDatabase+""".pat_sdoh as sd on a.pat_key = sd.pat_key
    # left join select_code_range_agecat_8bin_vw ac8 on (
    #    decimal(a.age) >= decimal(ac8.lower_bound_value)
    #    and decimal(a.age) < decimal(ac8.upper_bound_value)
    #    and ac8.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #    decimal(a.age) >= decimal(ac8.lower_bound_value)
    #    and ac8.upper_bound_value is null
    #    and ac8.lower_bound_value is not null
    #    and a.age is not null
    #    )
    # left join select_code_range_agecat_5bin_vw ac5 on (
    #    decimal(a.age) >= decimal(ac5.lower_bound_value)
    #    and decimal(a.age) < decimal(ac5.upper_bound_value)
    #    and ac5.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #        decimal(a.age) >= decimal(ac5.lower_bound_value)
    #        and ac5.upper_bound_value is null
    #        and ac5.lower_bound_value is not null
    #        and a.age is not null
    #    )
    # left join select_code_range_agecat_4bin_vw ac4 on (
    #    decimal(a.age) >= decimal(ac4.lower_bound_value)
    #    and decimal(a.age) < decimal(ac4.upper_bound_value)
    #    and ac4.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #    decimal(a.age) >= decimal(ac4.lower_bound_value)
    #    and ac4.upper_bound_value is null
    #    and ac4.lower_bound_value is not null
    #    and a.age is not null
    #    )
    # left join """+catalog+"""."""+targetDatabase+""".code_disc_status_expired_vw AS ae ON a.disc_status = ae.disc_status_expired_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_sum_icu_vw AS au ON g.clin_sum_code = au.clin_sum_icu_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_dtl_vent_vw AS av ON g.clin_dtl_code = av.clin_dtl_vent_code
    # left join """+catalog+"""."""+targetDatabase+""".code_sex_vw AS sx ON a.gender = sx.sex_code --coalesce(icd_covid_code, icd_flu_code, icd_rsv_code) is not null
    # """
print(query)

#df = spark.sql(query)
#df.show()

# COMMAND ----------

#QA7

query ="""
SELECT count(*)
from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
     inner join paticd AS b ON a.pat_key = b.pat_key
     inner join last_admit_date bnd on a.admit_date <= bnd.first_day_last_admit_date_prior_month
     inner join first_admit_date  on a.admit_date >= admit_date_lower_bound
     left join """+catalog+"""."""+targetDatabase+""".code_pat_type_inpatient_vw AS ap ON a.pat_type = ap.pat_type_inpatient_code
     left join """+catalog+"""."""+targetDatabase+""".code_i_o_ind_inpatient_vw AS ai ON a.i_o_ind = ai.i_o_ind_inpatient_code
     left join """+catalog+"""."""+srcDatabase+""".patbill as p on a.pat_key = p.pat_key
     left join """+catalog+"""."""+srcDatabase+""".hospchg h on p.hosp_chg_id = h.hosp_chg_id
     left join """+catalog+"""."""+srcDatabase+""".chgmstr as g on p.std_chg_code = g.std_chg_code
     left join """+catalog+"""."""+srcDatabase+""".providers as c on a.prov_id = c.prov_id"""
    # left join """+catalog+"""."""+srcDatabase+""".disstat as d on a.disc_status = d.disc_status
    # left join """+catalog+"""."""+srcDatabase+""".pat_sdoh as sd on a.pat_key = sd.pat_key
    # left join select_code_range_agecat_8bin_vw ac8 on (
    #    decimal(a.age) >= decimal(ac8.lower_bound_value)
    #    and decimal(a.age) < decimal(ac8.upper_bound_value)
    #    and ac8.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #    decimal(a.age) >= decimal(ac8.lower_bound_value)
    #    and ac8.upper_bound_value is null
    #    and ac8.lower_bound_value is not null
    #    and a.age is not null
    #    )
    # left join select_code_range_agecat_5bin_vw ac5 on (
    #    decimal(a.age) >= decimal(ac5.lower_bound_value)
    #    and decimal(a.age) < decimal(ac5.upper_bound_value)
    #    and ac5.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #        decimal(a.age) >= decimal(ac5.lower_bound_value)
    #        and ac5.upper_bound_value is null
    #        and ac5.lower_bound_value is not null
    #        and a.age is not null
    #    )
    # left join select_code_range_agecat_4bin_vw ac4 on (
    #    decimal(a.age) >= decimal(ac4.lower_bound_value)
    #    and decimal(a.age) < decimal(ac4.upper_bound_value)
    #    and ac4.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #    decimal(a.age) >= decimal(ac4.lower_bound_value)
    #    and ac4.upper_bound_value is null
    #    and ac4.lower_bound_value is not null
    #    and a.age is not null
    #    )
    # left join """+catalog+"""."""+targetDatabase+""".code_disc_status_expired_vw AS ae ON a.disc_status = ae.disc_status_expired_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_sum_icu_vw AS au ON g.clin_sum_code = au.clin_sum_icu_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_dtl_vent_vw AS av ON g.clin_dtl_code = av.clin_dtl_vent_code
    # left join """+catalog+"""."""+targetDatabase+""".code_sex_vw AS sx ON a.gender = sx.sex_code --coalesce(icd_covid_code, icd_flu_code, icd_rsv_code) is not null
    # """
print(query)

#df = spark.sql(query)
#df.show()

# COMMAND ----------

#QA8

query ="""
SELECT count(*)
from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
     inner join paticd AS b ON a.pat_key = b.pat_key
     inner join last_admit_date bnd on a.admit_date <= bnd.first_day_last_admit_date_prior_month
     inner join first_admit_date  on a.admit_date >= admit_date_lower_bound
     left join """+catalog+"""."""+targetDatabase+""".code_pat_type_inpatient_vw AS ap ON a.pat_type = ap.pat_type_inpatient_code
     left join """+catalog+"""."""+targetDatabase+""".code_i_o_ind_inpatient_vw AS ai ON a.i_o_ind = ai.i_o_ind_inpatient_code
     left join """+catalog+"""."""+srcDatabase+""".patbill as p on a.pat_key = p.pat_key
     left join """+catalog+"""."""+srcDatabase+""".hospchg h on p.hosp_chg_id = h.hosp_chg_id
     left join """+catalog+"""."""+srcDatabase+""".chgmstr as g on p.std_chg_code = g.std_chg_code
     left join """+catalog+"""."""+srcDatabase+""".providers as c on a.prov_id = c.prov_id
     left join """+catalog+"""."""+srcDatabase+""".disstat as d on a.disc_status = d.disc_status"""
    # left join """+catalog+"""."""+srcDatabase+""".pat_sdoh as sd on a.pat_key = sd.pat_key
    # left join select_code_range_agecat_8bin_vw ac8 on (
    #    decimal(a.age) >= decimal(ac8.lower_bound_value)
    #    and decimal(a.age) < decimal(ac8.upper_bound_value)
    #    and ac8.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #    decimal(a.age) >= decimal(ac8.lower_bound_value)
    #    and ac8.upper_bound_value is null
    #    and ac8.lower_bound_value is not null
    #    and a.age is not null
    #    )
    # left join select_code_range_agecat_5bin_vw ac5 on (
    #    decimal(a.age) >= decimal(ac5.lower_bound_value)
    #    and decimal(a.age) < decimal(ac5.upper_bound_value)
    #    and ac5.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #        decimal(a.age) >= decimal(ac5.lower_bound_value)
    #        and ac5.upper_bound_value is null
    #        and ac5.lower_bound_value is not null
    #        and a.age is not null
    #    )
    # left join select_code_range_agecat_4bin_vw ac4 on (
    #    decimal(a.age) >= decimal(ac4.lower_bound_value)
    #    and decimal(a.age) < decimal(ac4.upper_bound_value)
    #    and ac4.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #    decimal(a.age) >= decimal(ac4.lower_bound_value)
    #    and ac4.upper_bound_value is null
    #    and ac4.lower_bound_value is not null
    #    and a.age is not null
    #    )
    # left join """+catalog+"""."""+targetDatabase+""".code_disc_status_expired_vw AS ae ON a.disc_status = ae.disc_status_expired_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_sum_icu_vw AS au ON g.clin_sum_code = au.clin_sum_icu_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_dtl_vent_vw AS av ON g.clin_dtl_code = av.clin_dtl_vent_code
    # left join """+catalog+"""."""+targetDatabase+""".code_sex_vw AS sx ON a.gender = sx.sex_code --coalesce(icd_covid_code, icd_flu_code, icd_rsv_code) is not null
    # """
print(query)

#df = spark.sql(query)
#df.show()

# COMMAND ----------

#QA9

query ="""
SELECT count(*)
from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
     inner join paticd AS b ON a.pat_key = b.pat_key
     inner join last_admit_date bnd on a.admit_date <= bnd.first_day_last_admit_date_prior_month
     inner join first_admit_date  on a.admit_date >= admit_date_lower_bound
     left join """+catalog+"""."""+targetDatabase+""".code_pat_type_inpatient_vw AS ap ON a.pat_type = ap.pat_type_inpatient_code
     left join """+catalog+"""."""+targetDatabase+""".code_i_o_ind_inpatient_vw AS ai ON a.i_o_ind = ai.i_o_ind_inpatient_code
     left join """+catalog+"""."""+srcDatabase+""".patbill as p on a.pat_key = p.pat_key
     left join """+catalog+"""."""+srcDatabase+""".hospchg h on p.hosp_chg_id = h.hosp_chg_id
     left join """+catalog+"""."""+srcDatabase+""".chgmstr as g on p.std_chg_code = g.std_chg_code
     left join """+catalog+"""."""+srcDatabase+""".providers as c on a.prov_id = c.prov_id
     left join """+catalog+"""."""+srcDatabase+""".disstat as d on a.disc_status = d.disc_status
     left join """+catalog+"""."""+srcDatabase+""".pat_sdoh as sd on a.pat_key = sd.pat_key"""
    # left join select_code_range_agecat_8bin_vw ac8 on (
    #    decimal(a.age) >= decimal(ac8.lower_bound_value)
    #    and decimal(a.age) < decimal(ac8.upper_bound_value)
    #    and ac8.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #    decimal(a.age) >= decimal(ac8.lower_bound_value)
    #    and ac8.upper_bound_value is null
    #    and ac8.lower_bound_value is not null
    #    and a.age is not null
    #    )
    # left join select_code_range_agecat_5bin_vw ac5 on (
    #    decimal(a.age) >= decimal(ac5.lower_bound_value)
    #    and decimal(a.age) < decimal(ac5.upper_bound_value)
    #    and ac5.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #        decimal(a.age) >= decimal(ac5.lower_bound_value)
    #        and ac5.upper_bound_value is null
    #        and ac5.lower_bound_value is not null
    #        and a.age is not null
    #    )
    # left join select_code_range_agecat_4bin_vw ac4 on (
    #    decimal(a.age) >= decimal(ac4.lower_bound_value)
    #    and decimal(a.age) < decimal(ac4.upper_bound_value)
    #    and ac4.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #    decimal(a.age) >= decimal(ac4.lower_bound_value)
    #    and ac4.upper_bound_value is null
    #    and ac4.lower_bound_value is not null
    #    and a.age is not null
    #    )
    # left join """+catalog+"""."""+targetDatabase+""".code_disc_status_expired_vw AS ae ON a.disc_status = ae.disc_status_expired_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_sum_icu_vw AS au ON g.clin_sum_code = au.clin_sum_icu_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_dtl_vent_vw AS av ON g.clin_dtl_code = av.clin_dtl_vent_code
    # left join """+catalog+"""."""+targetDatabase+""".code_sex_vw AS sx ON a.gender = sx.sex_code --coalesce(icd_covid_code, icd_flu_code, icd_rsv_code) is not null
    # """
print(query)

#df = spark.sql(query)
#df.show()

# COMMAND ----------

#QA10

query ="""
SELECT count(*)
from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
     inner join paticd AS b ON a.pat_key = b.pat_key
     inner join last_admit_date bnd on a.admit_date <= bnd.first_day_last_admit_date_prior_month
     inner join first_admit_date  on a.admit_date >= admit_date_lower_bound
     left join """+catalog+"""."""+targetDatabase+""".code_pat_type_inpatient_vw AS ap ON a.pat_type = ap.pat_type_inpatient_code
     left join """+catalog+"""."""+targetDatabase+""".code_i_o_ind_inpatient_vw AS ai ON a.i_o_ind = ai.i_o_ind_inpatient_code
     left join """+catalog+"""."""+srcDatabase+""".patbill as p on a.pat_key = p.pat_key
     left join """+catalog+"""."""+srcDatabase+""".hospchg h on p.hosp_chg_id = h.hosp_chg_id
     left join """+catalog+"""."""+srcDatabase+""".chgmstr as g on p.std_chg_code = g.std_chg_code
     left join """+catalog+"""."""+srcDatabase+""".providers as c on a.prov_id = c.prov_id
     left join """+catalog+"""."""+srcDatabase+""".disstat as d on a.disc_status = d.disc_status
     left join """+catalog+"""."""+srcDatabase+""".pat_sdoh as sd on a.pat_key = sd.pat_key
     left join select_code_range_agecat_8bin_vw ac8 on (
        decimal(a.age) >= decimal(ac8.lower_bound_value)
        and decimal(a.age) < decimal(ac8.upper_bound_value)
        and ac8.lower_bound_value is not null
        and a.age is not null
        )
        or (
        decimal(a.age) >= decimal(ac8.lower_bound_value)
        and ac8.upper_bound_value is null
        and ac8.lower_bound_value is not null
        and a.age is not null
        )"""
    # left join select_code_range_agecat_5bin_vw ac5 on (
    #    decimal(a.age) >= decimal(ac5.lower_bound_value)
    #    and decimal(a.age) < decimal(ac5.upper_bound_value)
    #    and ac5.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #        decimal(a.age) >= decimal(ac5.lower_bound_value)
    #        and ac5.upper_bound_value is null
    #        and ac5.lower_bound_value is not null
    #        and a.age is not null
    #    )
    # left join select_code_range_agecat_4bin_vw ac4 on (
    #    decimal(a.age) >= decimal(ac4.lower_bound_value)
    #    and decimal(a.age) < decimal(ac4.upper_bound_value)
    #    and ac4.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #    decimal(a.age) >= decimal(ac4.lower_bound_value)
    #    and ac4.upper_bound_value is null
    #    and ac4.lower_bound_value is not null
    #    and a.age is not null
    #    )
    # left join """+catalog+"""."""+targetDatabase+""".code_disc_status_expired_vw AS ae ON a.disc_status = ae.disc_status_expired_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_sum_icu_vw AS au ON g.clin_sum_code = au.clin_sum_icu_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_dtl_vent_vw AS av ON g.clin_dtl_code = av.clin_dtl_vent_code
    # left join """+catalog+"""."""+targetDatabase+""".code_sex_vw AS sx ON a.gender = sx.sex_code --coalesce(icd_covid_code, icd_flu_code, icd_rsv_code) is not null
    # """
print(query)

#df = spark.sql(query)
#df.show()

# COMMAND ----------

#QA11

query ="""
SELECT count(*)
from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
     inner join paticd AS b ON a.pat_key = b.pat_key
     inner join last_admit_date bnd on a.admit_date <= bnd.first_day_last_admit_date_prior_month
     inner join first_admit_date  on a.admit_date >= admit_date_lower_bound
     left join """+catalog+"""."""+targetDatabase+""".code_pat_type_inpatient_vw AS ap ON a.pat_type = ap.pat_type_inpatient_code
     left join """+catalog+"""."""+targetDatabase+""".code_i_o_ind_inpatient_vw AS ai ON a.i_o_ind = ai.i_o_ind_inpatient_code
     left join """+catalog+"""."""+srcDatabase+""".patbill as p on a.pat_key = p.pat_key
     left join """+catalog+"""."""+srcDatabase+""".hospchg h on p.hosp_chg_id = h.hosp_chg_id
     left join """+catalog+"""."""+srcDatabase+""".chgmstr as g on p.std_chg_code = g.std_chg_code
     left join """+catalog+"""."""+srcDatabase+""".providers as c on a.prov_id = c.prov_id
     left join """+catalog+"""."""+srcDatabase+""".disstat as d on a.disc_status = d.disc_status
     left join """+catalog+"""."""+srcDatabase+""".pat_sdoh as sd on a.pat_key = sd.pat_key
     left join select_code_range_agecat_8bin_vw ac8 on (
        decimal(a.age) >= decimal(ac8.lower_bound_value)
        and decimal(a.age) < decimal(ac8.upper_bound_value)
        and ac8.lower_bound_value is not null
        and a.age is not null
        )
        or (
        decimal(a.age) >= decimal(ac8.lower_bound_value)
        and ac8.upper_bound_value is null
        and ac8.lower_bound_value is not null
        and a.age is not null
        )
     left join select_code_range_agecat_5bin_vw ac5 on (
        decimal(a.age) >= decimal(ac5.lower_bound_value)
        and decimal(a.age) < decimal(ac5.upper_bound_value)
        and ac5.lower_bound_value is not null
        and a.age is not null
        )
        or (
            decimal(a.age) >= decimal(ac5.lower_bound_value)
            and ac5.upper_bound_value is null
            and ac5.lower_bound_value is not null
            and a.age is not null
        )"""
    # left join select_code_range_agecat_4bin_vw ac4 on (
    #    decimal(a.age) >= decimal(ac4.lower_bound_value)
    #    and decimal(a.age) < decimal(ac4.upper_bound_value)
    #    and ac4.lower_bound_value is not null
    #    and a.age is not null
    #    )
    #    or (
    #    decimal(a.age) >= decimal(ac4.lower_bound_value)
    #    and ac4.upper_bound_value is null
    #    and ac4.lower_bound_value is not null
    #    and a.age is not null
    #    )
    # left join """+catalog+"""."""+targetDatabase+""".code_disc_status_expired_vw AS ae ON a.disc_status = ae.disc_status_expired_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_sum_icu_vw AS au ON g.clin_sum_code = au.clin_sum_icu_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_dtl_vent_vw AS av ON g.clin_dtl_code = av.clin_dtl_vent_code
    # left join """+catalog+"""."""+targetDatabase+""".code_sex_vw AS sx ON a.gender = sx.sex_code --coalesce(icd_covid_code, icd_flu_code, icd_rsv_code) is not null
    # """
print(query)

#df = spark.sql(query)
#df.show()

# COMMAND ----------

#QA12

query ="""
SELECT count(*)
from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
     inner join paticd AS b ON a.pat_key = b.pat_key
     inner join last_admit_date bnd on a.admit_date <= bnd.first_day_last_admit_date_prior_month
     inner join first_admit_date  on a.admit_date >= admit_date_lower_bound
     left join """+catalog+"""."""+targetDatabase+""".code_pat_type_inpatient_vw AS ap ON a.pat_type = ap.pat_type_inpatient_code
     left join """+catalog+"""."""+targetDatabase+""".code_i_o_ind_inpatient_vw AS ai ON a.i_o_ind = ai.i_o_ind_inpatient_code
     left join """+catalog+"""."""+srcDatabase+""".patbill as p on a.pat_key = p.pat_key
     left join """+catalog+"""."""+srcDatabase+""".hospchg h on p.hosp_chg_id = h.hosp_chg_id
     left join """+catalog+"""."""+srcDatabase+""".chgmstr as g on p.std_chg_code = g.std_chg_code
     left join """+catalog+"""."""+srcDatabase+""".providers as c on a.prov_id = c.prov_id
     left join """+catalog+"""."""+srcDatabase+""".disstat as d on a.disc_status = d.disc_status
     left join """+catalog+"""."""+srcDatabase+""".pat_sdoh as sd on a.pat_key = sd.pat_key
     left join select_code_range_agecat_8bin_vw ac8 on (
        decimal(a.age) >= decimal(ac8.lower_bound_value)
        and decimal(a.age) < decimal(ac8.upper_bound_value)
        and ac8.lower_bound_value is not null
        and a.age is not null
        )
        or (
        decimal(a.age) >= decimal(ac8.lower_bound_value)
        and ac8.upper_bound_value is null
        and ac8.lower_bound_value is not null
        and a.age is not null
        )
     left join select_code_range_agecat_5bin_vw ac5 on (
        decimal(a.age) >= decimal(ac5.lower_bound_value)
        and decimal(a.age) < decimal(ac5.upper_bound_value)
        and ac5.lower_bound_value is not null
        and a.age is not null
        )
        or (
            decimal(a.age) >= decimal(ac5.lower_bound_value)
            and ac5.upper_bound_value is null
            and ac5.lower_bound_value is not null
            and a.age is not null
        )
     left join select_code_range_agecat_4bin_vw ac4 on (
        decimal(a.age) >= decimal(ac4.lower_bound_value)
        and decimal(a.age) < decimal(ac4.upper_bound_value)
        and ac4.lower_bound_value is not null
        and a.age is not null
        )
        or (
        decimal(a.age) >= decimal(ac4.lower_bound_value)
        and ac4.upper_bound_value is null
        and ac4.lower_bound_value is not null
        and a.age is not null
        )"""
    # left join """+catalog+"""."""+targetDatabase+""".code_disc_status_expired_vw AS ae ON a.disc_status = ae.disc_status_expired_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_sum_icu_vw AS au ON g.clin_sum_code = au.clin_sum_icu_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_dtl_vent_vw AS av ON g.clin_dtl_code = av.clin_dtl_vent_code
    # left join """+catalog+"""."""+targetDatabase+""".code_sex_vw AS sx ON a.gender = sx.sex_code --coalesce(icd_covid_code, icd_flu_code, icd_rsv_code) is not null
    # """
print(query)

#df = spark.sql(query)
#df.show()

# COMMAND ----------

#QA13

query ="""
SELECT count(*)
from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
     inner join paticd AS b ON a.pat_key = b.pat_key
     inner join last_admit_date bnd on a.admit_date <= bnd.first_day_last_admit_date_prior_month
     inner join first_admit_date  on a.admit_date >= admit_date_lower_bound
     left join """+catalog+"""."""+targetDatabase+""".code_pat_type_inpatient_vw AS ap ON a.pat_type = ap.pat_type_inpatient_code
     left join """+catalog+"""."""+targetDatabase+""".code_i_o_ind_inpatient_vw AS ai ON a.i_o_ind = ai.i_o_ind_inpatient_code
     left join """+catalog+"""."""+srcDatabase+""".patbill as p on a.pat_key = p.pat_key
     left join """+catalog+"""."""+srcDatabase+""".hospchg h on p.hosp_chg_id = h.hosp_chg_id
     left join """+catalog+"""."""+srcDatabase+""".chgmstr as g on p.std_chg_code = g.std_chg_code
     left join """+catalog+"""."""+srcDatabase+""".providers as c on a.prov_id = c.prov_id
     left join """+catalog+"""."""+srcDatabase+""".disstat as d on a.disc_status = d.disc_status
     left join """+catalog+"""."""+srcDatabase+""".pat_sdoh as sd on a.pat_key = sd.pat_key
     left join select_code_range_agecat_8bin_vw ac8 on (
        decimal(a.age) >= decimal(ac8.lower_bound_value)
        and decimal(a.age) < decimal(ac8.upper_bound_value)
        and ac8.lower_bound_value is not null
        and a.age is not null
        )
        or (
        decimal(a.age) >= decimal(ac8.lower_bound_value)
        and ac8.upper_bound_value is null
        and ac8.lower_bound_value is not null
        and a.age is not null
        )
     left join select_code_range_agecat_5bin_vw ac5 on (
        decimal(a.age) >= decimal(ac5.lower_bound_value)
        and decimal(a.age) < decimal(ac5.upper_bound_value)
        and ac5.lower_bound_value is not null
        and a.age is not null
        )
        or (
            decimal(a.age) >= decimal(ac5.lower_bound_value)
            and ac5.upper_bound_value is null
            and ac5.lower_bound_value is not null
            and a.age is not null
        )
     left join select_code_range_agecat_4bin_vw ac4 on (
        decimal(a.age) >= decimal(ac4.lower_bound_value)
        and decimal(a.age) < decimal(ac4.upper_bound_value)
        and ac4.lower_bound_value is not null
        and a.age is not null
        )
        or (
        decimal(a.age) >= decimal(ac4.lower_bound_value)
        and ac4.upper_bound_value is null
        and ac4.lower_bound_value is not null
        and a.age is not null
        )
     left join """+catalog+"""."""+targetDatabase+""".code_disc_status_expired_vw AS ae ON a.disc_status = ae.disc_status_expired_code"""
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_sum_icu_vw AS au ON g.clin_sum_code = au.clin_sum_icu_code
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_dtl_vent_vw AS av ON g.clin_dtl_code = av.clin_dtl_vent_code
    # left join """+catalog+"""."""+targetDatabase+""".code_sex_vw AS sx ON a.gender = sx.sex_code --coalesce(icd_covid_code, icd_flu_code, icd_rsv_code) is not null
    # """
print(query)

#df = spark.sql(query)
#df.show()

# COMMAND ----------

#QA14

query ="""
SELECT count(*)
from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
     inner join paticd AS b ON a.pat_key = b.pat_key
     inner join last_admit_date bnd on a.admit_date <= bnd.first_day_last_admit_date_prior_month
     inner join first_admit_date  on a.admit_date >= admit_date_lower_bound
     left join """+catalog+"""."""+targetDatabase+""".code_pat_type_inpatient_vw AS ap ON a.pat_type = ap.pat_type_inpatient_code
     left join """+catalog+"""."""+targetDatabase+""".code_i_o_ind_inpatient_vw AS ai ON a.i_o_ind = ai.i_o_ind_inpatient_code
     left join """+catalog+"""."""+srcDatabase+""".patbill as p on a.pat_key = p.pat_key
     left join """+catalog+"""."""+srcDatabase+""".hospchg h on p.hosp_chg_id = h.hosp_chg_id
     left join """+catalog+"""."""+srcDatabase+""".chgmstr as g on p.std_chg_code = g.std_chg_code
     left join """+catalog+"""."""+srcDatabase+""".providers as c on a.prov_id = c.prov_id
     left join """+catalog+"""."""+srcDatabase+""".disstat as d on a.disc_status = d.disc_status
     left join """+catalog+"""."""+srcDatabase+""".pat_sdoh as sd on a.pat_key = sd.pat_key
     left join select_code_range_agecat_8bin_vw ac8 on (
        decimal(a.age) >= decimal(ac8.lower_bound_value)
        and decimal(a.age) < decimal(ac8.upper_bound_value)
        and ac8.lower_bound_value is not null
        and a.age is not null
        )
        or (
        decimal(a.age) >= decimal(ac8.lower_bound_value)
        and ac8.upper_bound_value is null
        and ac8.lower_bound_value is not null
        and a.age is not null
        )
     left join select_code_range_agecat_5bin_vw ac5 on (
        decimal(a.age) >= decimal(ac5.lower_bound_value)
        and decimal(a.age) < decimal(ac5.upper_bound_value)
        and ac5.lower_bound_value is not null
        and a.age is not null
        )
        or (
            decimal(a.age) >= decimal(ac5.lower_bound_value)
            and ac5.upper_bound_value is null
            and ac5.lower_bound_value is not null
            and a.age is not null
        )
     left join select_code_range_agecat_4bin_vw ac4 on (
        decimal(a.age) >= decimal(ac4.lower_bound_value)
        and decimal(a.age) < decimal(ac4.upper_bound_value)
        and ac4.lower_bound_value is not null
        and a.age is not null
        )
        or (
        decimal(a.age) >= decimal(ac4.lower_bound_value)
        and ac4.upper_bound_value is null
        and ac4.lower_bound_value is not null
        and a.age is not null
        )
     left join """+catalog+"""."""+targetDatabase+""".code_disc_status_expired_vw AS ae ON a.disc_status = ae.disc_status_expired_code
     left join """+catalog+"""."""+targetDatabase+""".code_clin_sum_icu_vw AS au ON g.clin_sum_code = au.clin_sum_icu_code"""
    # left join """+catalog+"""."""+targetDatabase+""".code_clin_dtl_vent_vw AS av ON g.clin_dtl_code = av.clin_dtl_vent_code
    # left join """+catalog+"""."""+targetDatabase+""".code_sex_vw AS sx ON a.gender = sx.sex_code --coalesce(icd_covid_code, icd_flu_code, icd_rsv_code) is not null
    # """

print(query)

#df = spark.sql(query)
#df.show()

# COMMAND ----------

#QA15

query ="""
SELECT count(*)
from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
     inner join paticd AS b ON a.pat_key = b.pat_key
     inner join last_admit_date bnd on a.admit_date <= bnd.first_day_last_admit_date_prior_month
     inner join first_admit_date  on a.admit_date >= admit_date_lower_bound
     left join """+catalog+"""."""+targetDatabase+""".code_pat_type_inpatient_vw AS ap ON a.pat_type = ap.pat_type_inpatient_code
     left join """+catalog+"""."""+targetDatabase+""".code_i_o_ind_inpatient_vw AS ai ON a.i_o_ind = ai.i_o_ind_inpatient_code
     left join """+catalog+"""."""+srcDatabase+""".patbill as p on a.pat_key = p.pat_key
     left join """+catalog+"""."""+srcDatabase+""".hospchg h on p.hosp_chg_id = h.hosp_chg_id
     left join """+catalog+"""."""+srcDatabase+""".chgmstr as g on p.std_chg_code = g.std_chg_code
     left join """+catalog+"""."""+srcDatabase+""".providers as c on a.prov_id = c.prov_id
     left join """+catalog+"""."""+srcDatabase+""".disstat as d on a.disc_status = d.disc_status
     left join """+catalog+"""."""+srcDatabase+""".pat_sdoh as sd on a.pat_key = sd.pat_key
     left join select_code_range_agecat_8bin_vw ac8 on (
        decimal(a.age) >= decimal(ac8.lower_bound_value)
        and decimal(a.age) < decimal(ac8.upper_bound_value)
        and ac8.lower_bound_value is not null
        and a.age is not null
        )
        or (
        decimal(a.age) >= decimal(ac8.lower_bound_value)
        and ac8.upper_bound_value is null
        and ac8.lower_bound_value is not null
        and a.age is not null
        )
     left join select_code_range_agecat_5bin_vw ac5 on (
        decimal(a.age) >= decimal(ac5.lower_bound_value)
        and decimal(a.age) < decimal(ac5.upper_bound_value)
        and ac5.lower_bound_value is not null
        and a.age is not null
        )
        or (
            decimal(a.age) >= decimal(ac5.lower_bound_value)
            and ac5.upper_bound_value is null
            and ac5.lower_bound_value is not null
            and a.age is not null
        )
     left join select_code_range_agecat_4bin_vw ac4 on (
        decimal(a.age) >= decimal(ac4.lower_bound_value)
        and decimal(a.age) < decimal(ac4.upper_bound_value)
        and ac4.lower_bound_value is not null
        and a.age is not null
        )
        or (
        decimal(a.age) >= decimal(ac4.lower_bound_value)
        and ac4.upper_bound_value is null
        and ac4.lower_bound_value is not null
        and a.age is not null
        )
     left join """+catalog+"""."""+targetDatabase+""".code_disc_status_expired_vw AS ae ON a.disc_status = ae.disc_status_expired_code
     left join """+catalog+"""."""+targetDatabase+""".code_clin_sum_icu_vw AS au ON g.clin_sum_code = au.clin_sum_icu_code
     left join """+catalog+"""."""+targetDatabase+""".code_clin_dtl_vent_vw AS av ON g.clin_dtl_code = av.clin_dtl_vent_code"""
    # left join """+catalog+"""."""+targetDatabase+""".code_sex_vw AS sx ON a.gender = sx.sex_code --coalesce(icd_covid_code, icd_flu_code, icd_rsv_code) is not null
    # """
print(query)

#df = spark.sql(query)
#df.show()

# COMMAND ----------

#QA16

query ="""
SELECT count(*)
from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
     inner join paticd AS b ON a.pat_key = b.pat_key
     inner join last_admit_date bnd on a.admit_date <= bnd.first_day_last_admit_date_prior_month
     inner join first_admit_date  on a.admit_date >= admit_date_lower_bound
     left join """+catalog+"""."""+targetDatabase+""".code_pat_type_inpatient_vw AS ap ON a.pat_type = ap.pat_type_inpatient_code
     left join """+catalog+"""."""+targetDatabase+""".code_i_o_ind_inpatient_vw AS ai ON a.i_o_ind = ai.i_o_ind_inpatient_code
     left join """+catalog+"""."""+srcDatabase+""".patbill as p on a.pat_key = p.pat_key
     left join """+catalog+"""."""+srcDatabase+""".hospchg h on p.hosp_chg_id = h.hosp_chg_id
     left join """+catalog+"""."""+srcDatabase+""".chgmstr as g on p.std_chg_code = g.std_chg_code
     left join """+catalog+"""."""+srcDatabase+""".providers as c on a.prov_id = c.prov_id
     left join """+catalog+"""."""+srcDatabase+""".disstat as d on a.disc_status = d.disc_status
     left join """+catalog+"""."""+srcDatabase+""".pat_sdoh as sd on a.pat_key = sd.pat_key
     left join select_code_range_agecat_8bin_vw ac8 on (
        decimal(a.age) >= decimal(ac8.lower_bound_value)
        and decimal(a.age) < decimal(ac8.upper_bound_value)
        and ac8.lower_bound_value is not null
        and a.age is not null
        )
        or (
        decimal(a.age) >= decimal(ac8.lower_bound_value)
        and ac8.upper_bound_value is null
        and ac8.lower_bound_value is not null
        and a.age is not null
        )
     left join select_code_range_agecat_5bin_vw ac5 on (
        decimal(a.age) >= decimal(ac5.lower_bound_value)
        and decimal(a.age) < decimal(ac5.upper_bound_value)
        and ac5.lower_bound_value is not null
        and a.age is not null
        )
        or (
            decimal(a.age) >= decimal(ac5.lower_bound_value)
            and ac5.upper_bound_value is null
            and ac5.lower_bound_value is not null
            and a.age is not null
        )
     left join select_code_range_agecat_4bin_vw ac4 on (
        decimal(a.age) >= decimal(ac4.lower_bound_value)
        and decimal(a.age) < decimal(ac4.upper_bound_value)
        and ac4.lower_bound_value is not null
        and a.age is not null
        )
        or (
        decimal(a.age) >= decimal(ac4.lower_bound_value)
        and ac4.upper_bound_value is null
        and ac4.lower_bound_value is not null
        and a.age is not null
        )
     left join """+catalog+"""."""+targetDatabase+""".code_disc_status_expired_vw AS ae ON a.disc_status = ae.disc_status_expired_code
     left join """+catalog+"""."""+targetDatabase+""".code_clin_sum_icu_vw AS au ON g.clin_sum_code = au.clin_sum_icu_code
     left join """+catalog+"""."""+targetDatabase+""".code_clin_dtl_vent_vw AS av ON g.clin_dtl_code = av.clin_dtl_vent_code
     left join """+catalog+"""."""+targetDatabase+""".code_sex_vw AS sx ON a.gender = sx.sex_code --coalesce(icd_covid_code, icd_flu_code, icd_rsv_code) is not null
     """

#df = spark.sql(query)
#df.show()

# COMMAND ----------

#QA17

query ="""
SELECT count(*)
from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
     inner join paticd AS b ON a.pat_key = b.pat_key
     inner join last_admit_date bnd on a.admit_date <= bnd.first_day_last_admit_date_prior_month
     inner join first_admit_date  on a.admit_date >= admit_date_lower_bound
     left join """+catalog+"""."""+targetDatabase+""".code_pat_type_inpatient_vw AS ap ON a.pat_type = ap.pat_type_inpatient_code
     left join """+catalog+"""."""+targetDatabase+""".code_i_o_ind_inpatient_vw AS ai ON a.i_o_ind = ai.i_o_ind_inpatient_code
     left join """+catalog+"""."""+srcDatabase+""".patbill as p on a.pat_key = p.pat_key
     left join """+catalog+"""."""+srcDatabase+""".hospchg h on p.hosp_chg_id = h.hosp_chg_id
     left join """+catalog+"""."""+srcDatabase+""".chgmstr as g on p.std_chg_code = g.std_chg_code
     left join """+catalog+"""."""+srcDatabase+""".providers as c on a.prov_id = c.prov_id
     left join """+catalog+"""."""+srcDatabase+""".disstat as d on a.disc_status = d.disc_status
     left join """+catalog+"""."""+srcDatabase+""".pat_sdoh as sd on a.pat_key = sd.pat_key
     left join select_code_range_agecat_8bin_vw ac8 on (
        decimal(a.age) >= decimal(ac8.lower_bound_value)
        and decimal(a.age) < decimal(ac8.upper_bound_value)
        and ac8.lower_bound_value is not null
        and a.age is not null
        )
        or (
        decimal(a.age) >= decimal(ac8.lower_bound_value)
        and ac8.upper_bound_value is null
        and ac8.lower_bound_value is not null
        and a.age is not null
        )
     left join select_code_range_agecat_5bin_vw ac5 on (
        decimal(a.age) >= decimal(ac5.lower_bound_value)
        and decimal(a.age) < decimal(ac5.upper_bound_value)
        and ac5.lower_bound_value is not null
        and a.age is not null
        )
        or (
            decimal(a.age) >= decimal(ac5.lower_bound_value)
            and ac5.upper_bound_value is null
            and ac5.lower_bound_value is not null
            and a.age is not null
        )
     left join select_code_range_agecat_4bin_vw ac4 on (
        decimal(a.age) >= decimal(ac4.lower_bound_value)
        and decimal(a.age) < decimal(ac4.upper_bound_value)
        and ac4.lower_bound_value is not null
        and a.age is not null
        )
        or (
        decimal(a.age) >= decimal(ac4.lower_bound_value)
        and ac4.upper_bound_value is null
        and ac4.lower_bound_value is not null
        and a.age is not null
        )
     left join """+catalog+"""."""+targetDatabase+""".code_disc_status_expired_vw AS ae ON a.disc_status = ae.disc_status_expired_code
     left join """+catalog+"""."""+targetDatabase+""".code_clin_sum_icu_vw AS au ON g.clin_sum_code = au.clin_sum_icu_code
     left join """+catalog+"""."""+targetDatabase+""".code_clin_dtl_vent_vw AS av ON g.clin_dtl_code = av.clin_dtl_vent_code
     left join """+catalog+"""."""+targetDatabase+""".code_sex_vw AS sx ON a.gender = sx.sex_code --coalesce(icd_covid_code, icd_flu_code, icd_rsv_code) is not null
     GROUP BY
        coalesce(a.STD_PAYOR,'.'),
        a.pat_key,
        a.medrec_key,
        coalesce(
            b.icd_covid_parent,
            b.icd_flu_parent,
            b.icd_rsv_parent,
            'otherdiagnosis'
        ),
        b.min_icd_pri_sec,
        a.pat_type,
        pat_type_inpatient_parent,
        i_o_ind_inpatient_parent,
        a.age,
        ac4.range_agecat_4bin,
        ac4.range_agecat_4bin_code,
        ac4.range_agecat_4bin_sort,
        ac5.range_agecat_5bin,
        ac5.range_agecat_5bin_code,
        ac5.range_agecat_5bin_sort,
        ac8.range_agecat_8bin,
        ac8.range_agecat_8bin_code,
        ac8.range_agecat_8bin_sort,
        a.gender,
        sx.sex,
        a.hispanic_ind,
        a.race,
        case
            when a.hispanic_ind = 'Y' then "Hispanic"
            when a.hispanic_ind = 'U' then 'Unknown'
            when a.race = 'W'
            and a.hispanic_ind = 'N' then 'nH White'
            when a.race = 'B'
            and a.hispanic_ind = 'N' then 'nH Black'
            when a.race = 'A'
            and a.hispanic_ind = 'N' then 'nH Asian'
            when a.race = 'O'
            and a.hispanic_ind = 'N' then 'nH Other'
            when a.race = 'U'
            and a.hispanic_ind = 'N' then 'Unknown'
        end,
        a.year,
        a.admit_date,
        a.prov_id,
        a.discharge_date,
        a.disc_mon,
        a.i_o_ind,
        a.disc_status,
        case
            when icd_covid_code is NOT NULL then 1
            else 0
        end,
        case
            when icd_rsv_code is NOT NULL then 1
            else 0
        end,
        case
            when icd_flu_code is NOT NULL then 1
            else 0
        end,
        c.urban_rural,
        c.prov_region ,
        c.prov_division ,
        c.prov_id,
        coalesce(sd.ACS_AVG_HH_SIZE_CTGY,'.'),
        coalesce(sd.ACS_MEDIAN_HH_INCOME_CTGY,'.'),
        coalesce(sd.ACS_EDUCATION_WGT_CTGY,'.'),
        coalesce(sd.SVI_RPL_THEMES_ALL_CTGY,'.'),
        coalesce(sd.SVI_RPL_THEME1_SOCIECO_CTGY,'.'),
        coalesce(sd.SVI_RPL_THEME3_MINO_CTGY,'.'),
        coalesce(sd.SVI_RPL_THEME4_HH_TRANS_CTGY,'.')"""
print(query)

#df = spark.sql(query)
#df.show()

# COMMAND ----------

#QA18

query ="""
SELECT count(*)
from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
     inner join paticd AS b ON a.pat_key = b.pat_key
     inner join last_admit_date bnd on a.admit_date <= bnd.first_day_last_admit_date_prior_month
     inner join first_admit_date  on a.admit_date >= admit_date_lower_bound
     left join """+catalog+"""."""+targetDatabase+""".code_pat_type_inpatient_vw AS ap ON a.pat_type = ap.pat_type_inpatient_code
     left join """+catalog+"""."""+targetDatabase+""".code_i_o_ind_inpatient_vw AS ai ON a.i_o_ind = ai.i_o_ind_inpatient_code
     left join """+catalog+"""."""+srcDatabase+""".patbill as p on a.pat_key = p.pat_key
     left join """+catalog+"""."""+srcDatabase+""".hospchg h on p.hosp_chg_id = h.hosp_chg_id
     left join """+catalog+"""."""+srcDatabase+""".chgmstr as g on p.std_chg_code = g.std_chg_code
     left join """+catalog+"""."""+srcDatabase+""".providers as c on a.prov_id = c.prov_id
     left join """+catalog+"""."""+srcDatabase+""".disstat as d on a.disc_status = d.disc_status
     left join """+catalog+"""."""+srcDatabase+""".pat_sdoh as sd on a.pat_key = sd.pat_key
     left join select_code_range_agecat_8bin_vw ac8 on (
        decimal(a.age) >= decimal(ac8.lower_bound_value)
        and decimal(a.age) < decimal(ac8.upper_bound_value)
        and ac8.lower_bound_value is not null
        and a.age is not null
        )
        or (
        decimal(a.age) >= decimal(ac8.lower_bound_value)
        and ac8.upper_bound_value is null
        and ac8.lower_bound_value is not null
        and a.age is not null
        )
     left join select_code_range_agecat_5bin_vw ac5 on (
        decimal(a.age) >= decimal(ac5.lower_bound_value)
        and decimal(a.age) < decimal(ac5.upper_bound_value)
        and ac5.lower_bound_value is not null
        and a.age is not null
        )
        or (
            decimal(a.age) >= decimal(ac5.lower_bound_value)
            and ac5.upper_bound_value is null
            and ac5.lower_bound_value is not null
            and a.age is not null
        )
     left join select_code_range_agecat_4bin_vw ac4 on (
        decimal(a.age) >= decimal(ac4.lower_bound_value)
        and decimal(a.age) < decimal(ac4.upper_bound_value)
        and ac4.lower_bound_value is not null
        and a.age is not null
        )
        or (
        decimal(a.age) >= decimal(ac4.lower_bound_value)
        and ac4.upper_bound_value is null
        and ac4.lower_bound_value is not null
        and a.age is not null
        )
     left join """+catalog+"""."""+targetDatabase+""".code_disc_status_expired_vw AS ae ON a.disc_status = ae.disc_status_expired_code
     left join """+catalog+"""."""+targetDatabase+""".code_clin_sum_icu_vw AS au ON g.clin_sum_code = au.clin_sum_icu_code
     left join """+catalog+"""."""+targetDatabase+""".code_clin_dtl_vent_vw AS av ON g.clin_dtl_code = av.clin_dtl_vent_code
     left join """+catalog+"""."""+targetDatabase+""".code_sex_vw AS sx ON a.gender = sx.sex_code --coalesce(icd_covid_code, icd_flu_code, icd_rsv_code) is not null
     GROUP BY
        coalesce(a.STD_PAYOR,'.'),
        a.pat_key,
        a.medrec_key,
        coalesce(
            b.icd_covid_parent,
            b.icd_flu_parent,
            b.icd_rsv_parent,
            'otherdiagnosis'
        ),
        b.min_icd_pri_sec,
        a.pat_type,
        pat_type_inpatient_parent,
        i_o_ind_inpatient_parent,
        a.age,
        ac4.range_agecat_4bin,
        ac4.range_agecat_4bin_code,
        ac4.range_agecat_4bin_sort,
        ac5.range_agecat_5bin,
        ac5.range_agecat_5bin_code,
        ac5.range_agecat_5bin_sort,
        ac8.range_agecat_8bin,
        ac8.range_agecat_8bin_code,
        ac8.range_agecat_8bin_sort,
        a.gender,
        sx.sex,
        a.hispanic_ind,
        a.race,
        case
            when a.hispanic_ind = 'Y' then "Hispanic"
            when a.hispanic_ind = 'U' then 'Unknown'
            when a.race = 'W'
            and a.hispanic_ind = 'N' then 'nH White'
            when a.race = 'B'
            and a.hispanic_ind = 'N' then 'nH Black'
            when a.race = 'A'
            and a.hispanic_ind = 'N' then 'nH Asian'
            when a.race = 'O'
            and a.hispanic_ind = 'N' then 'nH Other'
            when a.race = 'U'
            and a.hispanic_ind = 'N' then 'Unknown'
        end,
        a.year,
        a.admit_date,
        a.prov_id,
        a.discharge_date,
        a.disc_mon,
        a.i_o_ind,
        a.disc_status,
        case
            when icd_covid_code is NOT NULL then 1
            else 0
        end,
        case
            when icd_rsv_code is NOT NULL then 1
            else 0
        end,
        case
            when icd_flu_code is NOT NULL then 1
            else 0
        end,
        c.urban_rural,
        c.prov_region ,
        c.prov_division ,
        c.prov_id,
        coalesce(sd.ACS_AVG_HH_SIZE_CTGY,'.'),
        coalesce(sd.ACS_MEDIAN_HH_INCOME_CTGY,'.'),
        coalesce(sd.ACS_EDUCATION_WGT_CTGY,'.'),
        coalesce(sd.SVI_RPL_THEMES_ALL_CTGY,'.'),
        coalesce(sd.SVI_RPL_THEME1_SOCIECO_CTGY,'.'),
        coalesce(sd.SVI_RPL_THEME3_MINO_CTGY,'.'),
        coalesce(sd.SVI_RPL_THEME4_HH_TRANS_CTGY,'.')
         Having  concat_ws('-',  coalesce(a.pat_key,'unknown'),  coalesce(
            icd_covid_parent,
            icd_flu_parent,
            icd_rsv_parent,
            'otherdiagnosis'
        ))  is not null;"""
print(query)

#df = spark.sql(query)
#df.show()

# COMMAND ----------

# The main query to create rpt_in_resp_base table 

query ="""
SELECT
  concat_ws('-',  coalesce(a.pat_key,'unknown'),  coalesce(
    icd_covid_parent,
    icd_flu_parent,
    icd_rsv_parent,
    'otherdiagnosis'
  )) in_resp_key,
  coalesce(
    i_o_ind_inpatient_parent,
    pat_type_inpatient_parent
  ) as inpatient_flag,
  a.pat_key,
  a.medrec_key patient_id,
  coalesce(
    icd_covid_parent,
    icd_flu_parent,
    icd_rsv_parent,
    'otherdiagnosis'
  ) as virus_type_code,
  a.pat_type,
  CAST(Year(TRUNC(a.admit_date, 'MM')) AS INT) report_year,
  a.admit_date,
  DATE(TRUNC(a.admit_date, 'MM')) report_date,
  a.age,
  'overall' as overall_grouping_code,
  a.gender sex_code,
  sx.sex,
  a.race,
  case
    when hispanic_ind = 'Y' then "Hispanic"
    when hispanic_ind = 'U' then 'Unknown'
    when race = 'W'
    and hispanic_ind = 'N' then 'nH White'
    when race = 'B'
    and hispanic_ind = 'N' then 'nH Black'
    when race = 'A'
    and hispanic_ind = 'N' then 'nH Asian'
    when race = 'O'
    and hispanic_ind = 'N' then 'nH Other'
    when race = 'U'
    and hispanic_ind = 'N' then 'Unknown'
  end as race_eth_code,
    case
    when hispanic_ind = 'Y' then "Hispanic"
    when hispanic_ind = 'U' then 'Unknown'
    when race = 'W'
    and hispanic_ind = 'N' then 'nH White'
    when race = 'B'
    and hispanic_ind = 'N' then 'nH Black'
    when race = 'A'
    and hispanic_ind = 'N' then 'nH Other'
    when race = 'O'
    and hispanic_ind = 'N' then 'nH Other'
    when race = 'U'
    and hispanic_ind = 'N' then 'Unknown'
  end as  race_eth_no_asian_code,
  a.prov_id,
  max(b.icd_code) max_icd_code,
  Max(
    case
      when icd_covid_code is NOT NULL then 1
      else 0
    end
  ) as covid_cnt,
  Max(
    case
      when coalesce(
        i_o_ind_inpatient_parent,
        pat_type_inpatient_parent
      ) IS NOT NULL
      and icd_covid_code is NOT NULL then 1
      else 0
    end
  ) as i_covid_cnt,
  case
    when icd_rsv_code is NOT NULL then 1
    else 0
  end as rsv_cnt,
  Max(
    case
      when coalesce(
        i_o_ind_inpatient_parent,
        pat_type_inpatient_parent
      ) IS NOT NULL
      and icd_rsv_code is NOT NULL then 1
      else 0
    end
  ) as i_rsv_cnt,
  Max(
    case
      when coalesce(
        i_o_ind_inpatient_parent,
        pat_type_inpatient_parent
      ) IS NOT NULL
      and icd_flu_code is NOT NULL then 1
      else 0
    end
  ) as flu_cnt,
  Max(
    case
      when icd_flu_code is NOT NULL then 1
      else 0
    end
  ) as i_flu_cnt,
  prov_region,
  prov_division,
  1 as encounter_cnt,
  MAX(
    case
      when coalesce(
        i_o_ind_inpatient_parent,
        pat_type_inpatient_parent
      ) IS NOT NULL then 1
      else 0
    end 
  ) as i_encounter_cnt,
  MAX(
    case
      when clin_dtl_vent_code IS NOT NULL then 1
      else 0
    end
  ) as vent_cnt,
  MAX(
    case
      when coalesce(
        i_o_ind_inpatient_parent,
        pat_type_inpatient_parent
      ) IS NOT NULL
      and clin_dtl_vent_code IS NOT NULL then 1
      else 0
    end
  ) as i_vent_cnt,
  MAX(
    case
      when clin_sum_icu_code is NOT NULL then 1
      else 0
    end
  ) as icu_cnt,
  MAX(
    case
      when coalesce(
        i_o_ind_inpatient_parent,
        pat_type_inpatient_parent
      ) IS NOT NULL
      and clin_sum_icu_code is NOT NULL then 1
      else 0
    end
  ) as i_icu_cnt,
  MAX(
    case
      when disc_status_expired_code is NOT NULL then 1
      else 0
    end
  ) as death_cnt,
  MAX(
    case
      when coalesce(
        i_o_ind_inpatient_parent,
        pat_type_inpatient_parent
      ) IS NOT NULL
      and disc_status_expired_code is NOT NULL then 1
      else 0
    end
  ) as i_death_cnt,
  MAX(g.std_chg_code) AS max_std_chg_code,
  MAX(g.clin_sum_code) AS max_clin_sum_code,
  MAX(g.clin_dtl_code) AS max_clin_dtl_code,
  MAX(p.hosp_chg_id) AS max_hosp_chg_id,
  range_agecat_4bin,
  range_agecat_4bin_code,
  range_agecat_4bin_sort,
  range_agecat_5bin,
  range_agecat_5bin_code,
  range_agecat_5bin_sort,
  range_agecat_8bin,
  range_agecat_8bin_code,
  range_agecat_8bin_sort,
  hispanic_ind,
  discharge_date,
  disc_mon,
  i_o_ind,
  a.disc_status,
  min_icd_pri_sec,
  MAX(h.hosp_chg_desc) max_hosp_chg_desc,
   MAX(case
      when coalesce(
        i_o_ind_inpatient_parent,
        pat_type_inpatient_parent
      ) IS NOT NULL
      and coalesce(
        icd_covid_parent,
        icd_flu_parent,
        icd_rsv_parent
      ) is not null
      and clin_dtl_vent_code IS NOT NULL then DATEDIFF(discharge_date, admit_date) 
      else NULL
    end) 
  as i_vent_length_of_stay,
  MAX(case
      when coalesce(
        i_o_ind_inpatient_parent,
        pat_type_inpatient_parent
      ) IS NOT NULL
      and clin_sum_icu_code is NOT NULL
      then  DATEDIFF(discharge_date, admit_date) 
      else 0
    end)
  as i_icu_length_of_stay,
  MAX(  case
      when coalesce(
        i_o_ind_inpatient_parent,
        pat_type_inpatient_parent
      ) IS NOT NULL
      and coalesce(
        icd_covid_parent,
        icd_flu_parent,
        icd_rsv_parent
      ) is not null
      and disc_status_expired_code is NOT NULL then  DATEDIFF(discharge_date, admit_date) 
      else 0
    end)
  as i_death_length_of_stay,
  MAX(case
      when coalesce(
        i_o_ind_inpatient_parent,
        pat_type_inpatient_parent
      ) IS NOT NULL
      and coalesce(
        icd_covid_parent,
        icd_flu_parent,
        icd_rsv_parent
      ) is not null
      and disc_status_expired_code is NOT NULL then  DATEDIFF(discharge_date, admit_date) 
      else 0
  end) i_length_of_stay,
  DATEDIFF(discharge_date, admit_date) AS length_of_stay,
  c.prov_region as prov_region_code,
  c.prov_division as prov_division_code,
  c.urban_rural as urban_rural_code,
  coalesce(sd.ACS_AVG_HH_SIZE_CTGY,'.') acs_hh_size_code,
  coalesce(sd.ACS_MEDIAN_HH_INCOME_CTGY,'.') acs_hh_income_code,
  coalesce(sd.ACS_EDUCATION_WGT_CTGY,'.') acs_education_code,
  CASE 
    WHEN coalesce(sd.SVI_RPL_THEMES_ALL_CTGY, '.') IN ('0-10%')  THEN '20'
    WHEN coalesce(sd.SVI_RPL_THEMES_ALL_CTGY, '.') IN ('11-20%') THEN '20'
    WHEN coalesce(sd.SVI_RPL_THEMES_ALL_CTGY, '.') IN ('21-30%') THEN '40'
    WHEN coalesce(sd.SVI_RPL_THEMES_ALL_CTGY, '.') IN ('31-40%') THEN '40'
    WHEN coalesce(sd.SVI_RPL_THEMES_ALL_CTGY, '.') IN ('41-50%') THEN '60'
    WHEN coalesce(sd.SVI_RPL_THEMES_ALL_CTGY, '.') IN ('51-60%') THEN '60'
    WHEN coalesce(sd.SVI_RPL_THEMES_ALL_CTGY, '.') IN ('61-70%') THEN '80'
    WHEN coalesce(sd.SVI_RPL_THEMES_ALL_CTGY, '.') IN ('71-80%') THEN '80'
    WHEN coalesce(sd.SVI_RPL_THEMES_ALL_CTGY, '.') IN ('81-90%') THEN '100'
    WHEN coalesce(sd.SVI_RPL_THEMES_ALL_CTGY, '.') IN ('91-100%') THEN '100'
    ELSE '100'
END AS svi_all_code,
  coalesce(sd.SVI_RPL_THEME3_MINO_CTGY,'.') svi_mino_code,
  coalesce(sd.SVI_RPL_THEME1_SOCIECO_CTGY,'.') svi_socioeco_code,
  coalesce(sd.SVI_RPL_THEME4_HH_TRANS_CTGY,'.') svi_hh_trans_code,
  CASE 
    WHEN coalesce(a.STD_PAYOR, '.') IN (300, 310, 320) THEN 'medicare'
    WHEN coalesce(a.STD_PAYOR, '.') IN (330, 340, 350) THEN 'medicaid'
    WHEN coalesce(a.STD_PAYOR, '.') IN (360, 370, 380) THEN 'managed'
    WHEN coalesce(a.STD_PAYOR, '.') IN (390, 400) THEN 'charity'
    WHEN coalesce(a.STD_PAYOR, '.') = 410 THEN 'self'
    WHEN coalesce(a.STD_PAYOR, '.') IN (420, 430, 440, 900) THEN 'other'
    ELSE '.' -- Changed from 'Other' to 'Unknown' to differentiate unspecified cases
  END AS std_payor_code 
FROM
  """+catalog+"""."""+srcDatabase+""".patdemo AS a
  inner join paticd AS b ON a.pat_key = b.pat_key
  inner join last_admit_date bnd on a.admit_date <= bnd.first_day_last_admit_date_prior_month
  inner join first_admit_date  on a.admit_date >= admit_date_lower_bound
  left join """+catalog+"""."""+targetDatabase+""".code_pat_type_inpatient_vw AS ap ON a.pat_type = ap.pat_type_inpatient_code
  left join """+catalog+"""."""+targetDatabase+""".code_i_o_ind_inpatient_vw AS ai ON a.i_o_ind = ai.i_o_ind_inpatient_code
  left join """+catalog+"""."""+srcDatabase+""".patbill as p on a.pat_key = p.pat_key
  left join """+catalog+"""."""+srcDatabase+""".hospchg h on p.hosp_chg_id = h.hosp_chg_id
  left join """+catalog+"""."""+srcDatabase+""".chgmstr as g on p.std_chg_code = g.std_chg_code
  left join """+catalog+"""."""+srcDatabase+""".providers as c on a.prov_id = c.prov_id
 left join """+catalog+"""."""+srcDatabase+""".disstat as d on a.disc_status = d.disc_status
 left join """+catalog+"""."""+srcDatabase+""".pat_sdoh as sd on a.pat_key = sd.pat_key
 left join """+catalog+"""."""+targetDatabase+""".code_agecat_8bin ac8 on     a.age = ac8.age
 left join """+catalog+"""."""+targetDatabase+""".code_agecat_5bin ac5 on a.age = ac5.age
 left join """+catalog+"""."""+targetDatabase+""".code_agecat_4bin ac4 on a.age = ac4.age
 left join """+catalog+"""."""+targetDatabase+""".code_disc_status_expired_vw AS ae ON a.disc_status = ae.disc_status_expired_code
 left join """+catalog+"""."""+targetDatabase+""".code_clin_sum_icu_vw AS au ON g.clin_sum_code = au.clin_sum_icu_code
 left join """+catalog+"""."""+targetDatabase+""".code_clin_dtl_vent_vw AS av ON g.clin_dtl_code = av.clin_dtl_vent_code
 left join """+catalog+"""."""+targetDatabase+""".code_sex_vw AS sx ON a.gender = sx.sex_code --coalesce(icd_covid_code, icd_flu_code, icd_rsv_code) is not null
GROUP BY
 coalesce(a.STD_PAYOR,'.'),
  a.pat_key,
  a.medrec_key,
  coalesce(
    b.icd_covid_parent,
    b.icd_flu_parent,
    b.icd_rsv_parent,
    'otherdiagnosis'
  ),
  b.min_icd_pri_sec,
  a.pat_type,
  pat_type_inpatient_parent,
  i_o_ind_inpatient_parent,
  a.age,
  ac4.range_agecat_4bin,
  ac4.range_agecat_4bin_code,
  ac4.range_agecat_4bin_sort,
  ac5.range_agecat_5bin,
  ac5.range_agecat_5bin_code,
  ac5.range_agecat_5bin_sort,
  ac8.range_agecat_8bin,
  ac8.range_agecat_8bin_code,
  ac8.range_agecat_8bin_sort,
  a.gender,
  sx.sex,
  a.hispanic_ind,
  a.race,
  case
    when a.hispanic_ind = 'Y' then "Hispanic"
    when a.hispanic_ind = 'U' then 'Unknown'
    when a.race = 'W'
    and a.hispanic_ind = 'N' then 'nH White'
    when a.race = 'B'
    and a.hispanic_ind = 'N' then 'nH Black'
    when a.race = 'A'
    and a.hispanic_ind = 'N' then 'nH Asian'
    when a.race = 'O'
    and a.hispanic_ind = 'N' then 'nH Other'
    when a.race = 'U'
    and a.hispanic_ind = 'N' then 'Unknown'
  end,
  a.year,
  a.admit_date,
  a.prov_id,
  a.discharge_date,
  a.disc_mon,
  a.i_o_ind,
  a.disc_status,
  case
    when icd_covid_code is NOT NULL then 1
    else 0
  end,
  case
    when icd_rsv_code is NOT NULL then 1
    else 0
  end,
  case
    when icd_flu_code is NOT NULL then 1
    else 0
  end,
  c.urban_rural,
  c.prov_region ,
  c.prov_division ,
  c.prov_id,
  coalesce(sd.ACS_AVG_HH_SIZE_CTGY,'.'),
  coalesce(sd.ACS_MEDIAN_HH_INCOME_CTGY,'.'),
  coalesce(sd.ACS_EDUCATION_WGT_CTGY,'.'),
  coalesce(sd.SVI_RPL_THEMES_ALL_CTGY,'.'),
  coalesce(sd.SVI_RPL_THEME1_SOCIECO_CTGY,'.'),
  coalesce(sd.SVI_RPL_THEME3_MINO_CTGY,'.'),
  coalesce(sd.SVI_RPL_THEME4_HH_TRANS_CTGY,'.')
Having  concat_ws('-',  coalesce(a.pat_key,'unknown'),  coalesce(
    icd_covid_parent,
    icd_flu_parent,
    icd_rsv_parent,
    'otherdiagnosis'
  ))  is not null;
  """
print(query)

#df_rpt_in_resp_base_tmp = spark.sql(query)
#df_rpt_in_resp_base_tmp.createOrReplaceTempView("rpt_in_resp_base_tmp")
#display(df_rpt_in_resp_base_tmp)

# COMMAND ----------

#display(df_rpt_in_resp_base_tmp)

# COMMAND ----------

#df1 = df_rpt_in_resp_base_tmp.filter(df_rpt_in_resp_base_tmp.report_date=='2023-01-01').filter(df_rpt_in_resp_base_tmp.i_covid_cnt==1).filter(df_rpt_in_resp_base_tmp.pat_type=='8').groupBy().agg(F.sum('i_covid_cnt').alias('sum_i_covid_cnt'))

# COMMAND ----------

#display(df1)

# COMMAND ----------

# MAGIC %md
# MAGIC
# MAGIC select count(*) from rpt_in_resp_base_tmp where i_covid_cnt=1 and pat_type='8' and report_date='2023-01-01' and age<=4

# COMMAND ----------

# MAGIC %md
# MAGIC select count(*)
# MAGIC     from  rpt_in_resp_base_tmp AS a
# MAGIC     where a.admit_date>='2023-01-01' and a.admit_date<'2023-02-01' and a.age<=4 and a.i_covid_cnt=1

# COMMAND ----------

# MAGIC %md
# MAGIC /*This maybe an issue and a.PAT_TYPE = '08' and a.I_O_IND = 'I'*/
# MAGIC select a.PAT_TYPE,count(a.PAT_TYPE)
# MAGIC     from  rpt_in_resp_base_tmp AS a
# MAGIC     where a.admit_date>='2023-01-01' and a.admit_date<'2023-02-01'   and a.age<=4 and a.i_covid_cnt=1
# MAGIC     group by a.PAT_TYPE

# COMMAND ----------

# MAGIC %md
# MAGIC select count(*) from paticd_diag_tmp

# COMMAND ----------

# MAGIC %md
# MAGIC display(df1)

# COMMAND ----------

# QA[list of patients]: Covid hospitalizations, age < 4, Jan 2023, joining patdemo and paticd_diag

query ="""
    select a.pat_key
    from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
    inner join """+catalog+"""."""+srcDatabase+""".paticd_diag AS b ON a.pat_key = b.pat_key
    where a.admit_date>='2023-01-01' and a.admit_date<'2023-02-01' and a.PAT_TYPE = '08' and a.I_O_IND = 'I' and a.age<=4
    and b.icd_code in ('U07.1', 'U07.2', 'J12.81') and b.ICD_PRI_SEC IN ('P', 'S')
    group by a.pat_key
"""
print(query)

#df_paticd_diag = spark.sql(query)
#df_paticd_diag.createOrReplaceTempView("paticd_diag_tmp")
#display(df_paticd_diag)

# COMMAND ----------

# Covid hospitalizations, age < 4, Jan 2023, from rpt_in_resp

query ="""
    select pat_key
    from  """+catalog+"""."""+targetDatabase+""".rpt_in_resp
    where admit_date>='2023-01-01' and admit_date<'2023-02-01' and age<=4 and i_covid_cnt=1 and i_encounter_cnt=1
    group by pat_key
"""
print(query)

#df_rep_jan = spark.sql(query)
#df_paticd_diag.createOrReplaceTempView("df_rep_jan")
#display(df_rep_jan)

# COMMAND ----------

# MAGIC %md
# MAGIC df_rep_jan_NOT_df_paticd_diag = df_rep_jan.join(df_paticd_diag, 'pat_key', 'left_anti')
# MAGIC

# COMMAND ----------

display(df_rep_jan_NOT_df_paticd_diag)

# COMMAND ----------

# QA[List of patients]: Covid hospitalizations, age < 4, Jan 2023, joining patdemo and paticd_diag

query ="""
    select a.pat_key
    from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
    inner join """+catalog+"""."""+srcDatabase+""".paticd_diag AS b ON a.pat_key = b.pat_key
    where a.admit_date>='2023-01-01' and a.admit_date<'2023-02-01' and a.PAT_TYPE = '08' and a.I_O_IND = 'I' and a.age<=4
    group by a.pat_key
"""
print(query)

#df_paticd_diag_all = spark.sql(query)
#df_paticd_diag_all.createOrReplaceTempView("paticd_diag_all_tmp")
#display(df_paticd_diag_all)

# COMMAND ----------

# MAGIC %md
# MAGIC df_rpt_in_resp_base_tmp_NOT_df_paticd_diag_all = df_rpt_in_resp_base_tmp.join(df_paticd_diag_all, 'pat_key', 'left_anti')
# MAGIC

# COMMAND ----------

# QA: Covid hospitalizations, age < 4, Jan 2023, joining patdemo and paticd_diag

query ="""
SELECT count(*) as numberCovidUptoAge4Jan2023 from 
(
    select a.pat_key
    from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
    inner join """+catalog+"""."""+srcDatabase+""".paticd_diag AS b ON a.pat_key = b.pat_key
    where a.admit_date>='2023-01-01' and a.admit_date<'2023-02-01' and a.PAT_TYPE = '08' and a.I_O_IND = 'I' and a.age<=4
    and b.icd_code in ('U07.1', 'U07.2', 'J12.81') and b.ICD_PRI_SEC IN ('P', 'S')
    group by a.pat_key
)
"""
print(query)

#numberCovidUptoAge4Jan2023 = spark.sql(query)
#numberCovidUptoAge4Jan2023.show()

# COMMAND ----------

# All hospitalizations, age < 4, Jan 2023, , joining patdemo and paticd_diag

query ="""
SELECT count(*) as numberHospUptoAge4Jan2023 from 
(   select a.pat_key
    from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
    inner join """+catalog+"""."""+srcDatabase+""".paticd_diag AS b ON a.pat_key = b.pat_key
    where a.admit_date>='2023-01-01' and a.admit_date<'2023-02-01' and a.PAT_TYPE = '08' and a.I_O_IND = 'I' and a.age<=4
    group by a.pat_key
)
"""
print(query)

#numberHospUptoAge4Jan2023 = spark.sql(query)
#numberHospUptoAge4Jan2023.show()

# COMMAND ----------

# MAGIC %md
# MAGIC #combining the results from numberCovidUptoAge4Jan2023, numberCFRuptoAge4Jan2023 and adding a column to calcute the percentage covid/(sum of covid,flue,resp) for patient <= 4 , january 2023 from premier_v2 database
# MAGIC
# MAGIC combinedAnalysis = numberCovidUptoAge4Jan2023.join(numberHospUptoAge4Jan2023)
# MAGIC premierUptoAge4Jan2023Analysis = combinedAnalysis.withColumn("PercentageCovidAge4Jan2023", col("numberCovidUptoAge4Jan2023") / col("numberHospUptoAge4Jan2023"))
# MAGIC premierUptoAge4Jan2023Analysis.show()

# COMMAND ----------

# Covid hospitalizations, age < 4, Jan 2023, from rpt_in_resp

query ="""
SELECT count(*) as numberCovidUptoAge4Jan2023_rpt_in_resp from 
(
    select pat_key
    from  """+catalog+"""."""+targetDatabase+""".rpt_in_resp
    where admit_date>='2023-01-01' and admit_date<'2023-02-01' and age<=4 and i_covid_cnt=1 and i_encounter_cnt=1
    group by pat_key
)
"""
print(query)
#numberCovidUptoAge4Jan2023_rpt_in_resp = spark.sql(query)
#numberCovidUptoAge4Jan2023_rpt_in_resp.show()

# COMMAND ----------

# All hospitalizations, age < 4, Jan 2023, from rpt_in_resp

query ="""
SELECT count(*) as numberHospUptoAge4Jan2023_rpt_in_resp from 
(
    select pat_key
    from  """+catalog+"""."""+targetDatabase+""".rpt_in_resp
    where admit_date>='2023-01-01' and admit_date<'2023-02-01' and age<=4 and i_encounter_cnt=1
    group by pat_key
)
"""
print(query)

#numberHospUptoAge4Jan2023_rpt_in_resp = spark.sql(query)
#numberHospUptoAge4Jan2023_rpt_in_resp.show()

# COMMAND ----------

# MAGIC %md
# MAGIC #combining the results from numberCovidUptoAge4Jan2023, numberCFRuptoAge4Jan2023 and adding a column to calcute the percentage covid/(sum of covid,flue,resp) for patient <= 4 , january 2023 from premier_v2 database
# MAGIC
# MAGIC combinedAnalysis = numberCovidUptoAge4Jan2023_rpt_in_resp.join(numberHospUptoAge4Jan2023_rpt_in_resp)
# MAGIC premierUptoAge4Jan2023Analysis_rpt_in_resp = combinedAnalysis.withColumn("PercentageCovidAge4Jan2023", col("numberCovidUptoAge4Jan2023_rpt_in_resp") / col("numberHospUptoAge4Jan2023_rpt_in_resp"))
# MAGIC premierUptoAge4Jan2023Analysis_rpt_in_resp.show()

# COMMAND ----------

# Covid hospitalizations, age < 4, Jan 2023, from rpt_in_resp_base
#from  """+catalog+"""."""+targetDatabase+""".rpt_in_resp_base
query ="""
SELECT count(*) as numberCovidUptoAge4Jan2023_rpt_in_resp_base from 
(
    select pat_key
    from  rpt_in_resp_base_tmp
    where admit_date>='2023-01-01' and admit_date<'2023-02-01' and age<=4 and i_covid_cnt=1 and i_encounter_cnt=1
    group by pat_key
)
"""
print(query)

#numberCovidUptoAge4Jan2023_rpt_in_resp_base = spark.sql(query)
#numberCovidUptoAge4Jan2023_rpt_in_resp_base.show()

# COMMAND ----------

# All hospitalizations, age < 4, Jan 2023, from rpt_in_resp_base
#from  """+catalog+"""."""+targetDatabase+""".rpt_in_resp_base
query ="""
SELECT count(*) as numberHospUptoAge4Jan2023_rpt_in_resp_base from 
(
    select pat_key
    from  rpt_in_resp_base_tmp
    where admit_date>='2023-01-01' and admit_date<'2023-02-01' and age<=4 and i_encounter_cnt=1
    group by pat_key
)
"""
print(query)

#numberHospUptoAge4Jan2023_rpt_in_resp_base = spark.sql(query)
#numberHospUptoAge4Jan2023_rpt_in_resp_base.show()

# COMMAND ----------

# MAGIC %md
# MAGIC #combining the results from numberCovidUptoAge4Jan2023, numberCFRuptoAge4Jan2023 and adding a column to calcute the percentage covid/(sum of covid,flue,resp) for patient <= 4 , january 2023 from premier_v2 database
# MAGIC
# MAGIC combinedAnalysis = numberCovidUptoAge4Jan2023_rpt_in_resp_base.join(numberHospUptoAge4Jan2023_rpt_in_resp_base)
# MAGIC premierUptoAge4Jan2023Analysis_rpt_in_resp_base = combinedAnalysis.withColumn("PercentageCovidAge4Jan2023Base", col("numberCovidUptoAge4Jan2023_rpt_in_resp_base") / col("numberHospUptoAge4Jan2023_rpt_in_resp_base"))
# MAGIC premierUptoAge4Jan2023Analysis_rpt_in_resp_base.show()

# COMMAND ----------

# All hospitalizations, age < 4, Jan 2023, , joining patdemo and paticd_diag

query ="""
select a.pat_key
    from  """+catalog+"""."""+srcDatabase+""".patdemo AS a
    inner join """+catalog+"""."""+srcDatabase+""".paticd_diag AS b ON a.pat_key = b.pat_key
    where a.admit_date>='2023-01-01' and a.admit_date<'2023-02-01' and a.PAT_TYPE = '08' and a.I_O_IND = 'I' and a.age<=4
    group by a.pat_key
)
"""
print(query)

#numberHospUptoAge4Jan2023 = spark.sql(query)
#numberHospUptoAge4Jan2023.show()
