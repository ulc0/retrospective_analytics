# Databricks notebook source
# MAGIC %md
# MAGIC ###COVID Rx UMC
# MAGIC
# MAGIC Author: Erica Okene (contractor, GAP solutions) ak21@cdc.gov
# MAGIC
# MAGIC COVID Population, Definitions, and Codesets generated by Heartley Egwuogu (contractor, GAP solutions) tog0@cdc.gov for LAVA Respiratory Virus Dashboard
# MAGIC
# MAGIC
# MAGIC FTE Support: Julia Raykin qiz8@cdc.gov
# MAGIC
# MAGIC Started on 12/20/2024

# COMMAND ----------

# DBTITLE 0,Importing  Section
from itertools import chain
from pyspark.sql.types import StructType,StructField, StringType, IntegerType
from pyspark.sql import SparkSession, functions as F, Row
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.dates as mdates
import seaborn as sns

# COMMAND ----------

# MAGIC %md
# MAGIC ### Covid Population Defined

# COMMAND ----------

# DBTITLE 1,Covid Codes
# covid is defined as having positive labs or covid diagnosis

coviddg=["U07.1"]

covidlab=["95521-1", "94510-5", "94311-8", "94312-6", "95522-9", "94644-2", "94511-3", "94646-7", "94645-9", "94745-7",  "94746-5", "94819-0", "94642-6","94643-4", "94313-4", "94509-7", "95423-0", "94760-6", "95409-9", "94533-7", "94756-4", "94757-2", "95425-5",  "94766-3", "94316-7", "94307-6","94308-4", "94559-2", "95824-9", "94639-2", "94534-5", "94314-2", "94565-9", "94759-8", "95406-5", "95608-6",  "94500-6", "95424-8", "94845-5","94822-4", "94660-8", "94309-2", "94640-0", "95609-4", "94767-1", "94641-8", "94764-8", "94310-0", "94758-0",  "95823-1", "94765-5","94315-9", "94502-2", "94647-5", "94532-9", "95970-0", "96091-4", "94306-8", "96120-1", "96121-9", "96122-7",  "96123-5", "96448-6", "96741-4","96751-3", "96752-1", "96763-8", "96764-6", "96765-3", "96766-1", "96797-6", "96829-7", "96894-1", "96895-8",   "96896-6", "96897-4","96898-2", "96899-0", "96900-6", "96957-6", "96958-4", "96986-5", "95826-4", "96094-8", "97098-8",  "98132-4",  "98494-8", "97104-4", "98131-6","98493-0", "98062-3", "96756-2", "96757-0",	"98080-5", "94531-1", "99314-7", "100156-9", "95209-3", "94558-4",	"96119-3", "97097-0", "94661-6", "95825-6", "94762-2", "94769-7", "94562-6", "94768-9", "95427-1", "94720-0",  "95125-1",	"94761-4",	"94563-4", "94507-1",	"95429-7", "94505-5", "94547-7", "95542-7",	"95416-4", "94564-2", "94508-9", "95428-9",	 "94506-3",	"95411-5",	"95410-7",	"96603-6",	"96742-2", "96118-5", "98733-9", "98069-8",	"98732-1", "98734-7", "94504-8", "94503-0",	 "99596-9", "99597-7",	"95971-8",	"95972-6", "95973-4", "96755-4", "98846-9", "98847-7",	"95974-2", "94763-0", "99771-8", "99774-2",  "99773-4", "99772-6"]

colc=StructType([StructField("conceptcode",StringType(),True)])
covid=list(chain(coviddg,covidlab))
coviddf = spark.createDataFrame(covid,colc).createOrReplaceTempView("conceptcodecovid_T")

# COMMAND ----------

# DBTITLE 1,Covid Medications
#define medications of interest by Conceptcodes: Paxlovid,Molnupiravir and Remdesivir

pax=["2587899", "2587898", "2587892", "2587897", "2587893", "2587896", "2587894", "2587895", "2599543", "00069108530", "00069108506", "00069034506", "00069034530", "00069110104", "00069110120", "00069208501", "00069208502"]

mol=["2587901", "2587906", "2587902", "2587905", "2587903", "2587904", "2603735", "2603736", "2603739", "2603740", "2603737", "2603738", "00006505507", "00006505506"]

rem=['2284718','2284957','2284958','2284959','2284960','2367757','2367758','2367759', '2395498','2395499','2395500','2395501','2395502','2395503','2395504','2395505','61958290101','61958290102','870600003','61958290101','61958290102','61958290201','61958290202','J0248','61958999899','61958999999','XW033E5','XW043E5']

# meddis=list(chain(pax,mol,rem))
col=StructType([StructField("conceptcode",StringType(),True)])
spark.createDataFrame(pax, col).createOrReplaceTempView("conceptcodemedpax_T")
spark.createDataFrame(mol, col).createOrReplaceTempView("conceptcodemedmol_T")
spark.createDataFrame(rem, col).createOrReplaceTempView("conceptcodemedrem_T")

#pax=paxlovid
#mol=molnupiravir
#rem=remdesivir

# COMMAND ----------

# DBTITLE 1,Additional conditions of interest
heart = ["I05.0","I05.1","I05.2","I05.8","I05.9","I06","I06.0","I06.1","I06.2","I06.8","I06.9","I07","I07.0","I07.1","I07.2","I07.8","I07.9","I08","I08.0","I08.1","I08.2","I08.3","I08.8","I08.9","I09","I09.0","I09.1","I09.2","I09.81","I09.89","I09.9","I20.0","I20.1","I20.8","I2081","I2089","I20.9","I21","I21.0","I21.01","I21.02","I21.09","I21.1","I21.11","I21.19","I21.2","I21.21","I21.29","I21.3","I21.4","I21.9","I21.A","I21.A1","I21.A9","I21.B","I22","I22.0","I22.1","I22.2","I22.8","I22.9","I23","I23.0","I23.1","I23.2","I23.3","I23.4","I23.5","I23.6","I23.7","I23.8","I24","I24.0","I24.1","I24.8","I2481","I2489","I24.9","I25","I25.1","I25.10","I25.11","I25.110","I25.111","I25.118","I25.119","I25.2","I25.3","I25.4","I25.41","I25.42","I25.5","I25.6","I25.7","I25.70","I25.700","I25.701","I25.708","I25.709","I25.71","I25.710","I25.711","I25.718","I25.719","I25.72","I25.720","I25.721","I25.728","I25.729","I25.73","I25.730","I25.731","I25.738","I25.739","I25.75","I25.750","I25.751","I25.758","I25.759","I25.76","I25.760","I25.761","I25.768","I25.769","I25.79","I25.790","I25.791","I25.798","I25.799","I25.8","I25.81","I25.810","I25.811","I25.812","I25.82","I25.83","I25.84","I25.89","I25.9","I42","I42.0","I42.1","I42.2","I42.3","I42.4","I42.5","I42.6","I42.7","I42.8","I42.9","I43","I47","I470","I471","I4710","I4711","I4719","I472","I4720","I4721","I4729","I479","I480","I4819","I4821","I483","I484","I4891","I4892","I49","I491","I492","I493","I4940","I4949","I495","I498","I499","R000","R001","R002","R008","R009","I50","I50.1","I50.2","I50.20","I50.21","I50.22","I50.23","I50.3","I50.30","I50.31","I50.32","I50.33","I50.4","I50.40","I50.41","I50.42","I50.43","I50.8","I50.81","I50.810","I50.811","I50.812","I50.813","I50.814","I50.82","I50.83","I50.84","I50.89","I50.9","I09.81","I11.0","I13.0","I13.2","P29","Z95","Z95.1","I34","I34.0","I34.1","I34.2","I34.8","I34.9","I35","I35.0","I35.1","I35.2","I35.8","I35.9","I36","I36.0","I36.1","I36.2","I36.8","I36.9","I37","I37.0","I37.1","I37.2","I37.8","I37.9","I30","I30.0","I30.1","I30.8","I30.9","I31","I31.0","I31.1","I31.2","I31.3","I31.4","I31.8","I31.9","I32","I33","I33.0","I33.9","I38","I39","I40","I40.0","I40.1","I40.8","I40.9","I41","I44","I44.0","I44.1","I44.2","I44.3","I44.30","I44.39","I44.4","I44.5","I44.6","I44.60","I44.69","I44.7","I45","I45.0","I45.1","I45.10","I45.19","I45.2","I45.3","I45.4","I45.5","I45.6","I45.8","I45.81","I45.89","I45.9","I46","I46.2","I46.8","I46.9","I48","I48.1","I48.11","I48.2","I48.20","I48.9","I49.0","I49.01","I49.02","I49.4","I5020","I5021","I5022","I5023","I503","I5030","I5031","I5032","I5033","I504","I5040","I5041","I5042","I5043","I508","I5081","I50810","I50811","I50812","I50813","I50814","I5082","I5083","I5084","I5089","I509","I51","I51.0","I51.1","I51.2","I51.3","I51.4","I51.5","I51.7","I52","J1082","J1182","O903"]
cad = ["I21.01","I21.02","I21.09","I21.11","I21.19","I21.21","I25.1","I25.10","I25.11","I25.110","I25.111","I25.118","I25.119","I25.4","I25.41","I25.42","I25.7","I25.70","I25.700","I25.701","I25.708","I25.709","I25.71","I25.710","I25.711","I25.718","I25.719","I25.72","I25.720","I25.721","I25.728","I25.729","I25.73","I25.730","I25.731","I25.738","I25.739","I25.75","I25.750","I25.751","I25.758","I25.759","I25.76","I25.760","I25.761","I25.768","I25.769","I25.79","I25.790","I25.791","I25.798","I25.799","I25.81","I25.810","I25.811","I25.812","I25.82","I25.83","I25.84"]
chf = ["I09.81","I50","I50.1","I50.2","I50.20","I50.21","I50.22","I50.23","I50.3","I50.30","I50.31","I50.32","I50.33","I50.4","I50.40","I50.41","I50.42","I50.43","I50.8","I50.81","I50.810","I50.811","I50.812","I50.813","I50.814","I50.82","I50.83","I50.84","I50.89","I50.9","I09.81","I11.0","I13.0","I13.2","P29","Z95","I5020","I5021","I5022","I5023","I503","I5030","I5031","I5032","I5033","I504","I5040","I5041","I5042","I5043","I508","I5081","I50810","I50811","I50812","I50813","I50814","I5082","I5083","I5084","I5089","I509"]
cardiomy = ["I25.5","I42","I42.0","I42.1","I42.2","I42.3","I42.4","I42.5","I42.6","I42.7","I42.8","I42.9","I43","O903"]

clung = ["J45","J45.2","J45.20","J45.21","J45.22","J45.3","J45.30","J45.31","J45.32","J45.4","J45.40","J45.41","J45.42","J45.5","J45.50","J45.51","J45.52","J45.9","J45.90","J45.901","J45.902","J45.909","J45.99","J45.990","J45.991","J45.998","J82.83","J47.0","J47.1","J47.9","J41.0","J41.1","J41.8","J42","J43.0","J43.1","J43.2","J43.8","J43.9","J44","J44.0","J44.1","J44.9","J40","J60","J61","J62","J62.0","J62.8","J63","J63.0","J63.1","J63.2","J63.3","J63.4","J63.5","J63.6","J64","J65","J66","J66.0","J66.1","J66.2","J66.8","J67","J67.0","J67.1","J67.2","J67.3","J67.4","J67.5","J67.6","J67.7","J67.8","J67.9","J68.4","J70.1","J70.3","J70.4","J84.0","J84.01","J84.02","J84.03","J84.04","J84.05","J85.06","J85.07","J85.08","J85.09","J84.1","J84.10","J84.11","J84.111","J84.112","J84.113","J84.114","J84.115","J84.116","J84.117","J84.2","J84.8","J84.81","J84.82","J84.83","J84.84","J84.841","J84.842","J84.843","J84.848","J84.89","J84.9","D86.0","D86.2","J82.81","M30.1","M31.0","M32.13","I26","I26.0","I26.01","I26.02","I26.09","I26.9","I26.90","I26.92","I26.93","I26.94","I26.99","I27.0","I27.2"]
asthma = ["J45","J45.2","J45.20","J45.21","J45.22","J45.3","J45.30","J45.31","J45.32","J45.4","J45.40","J45.41","J45.42","J45.5","J45.50","J45.51","J45.52","J45.9","J45.90","J45.901","J45.902","J45.909","J45.99","J45.990","J45.991","J45.998","J82.83"]
brect = ["J47.0","J47.1","J47.9"]
copd = ["J41.0","J41.1","J41.8","J42","J43.0","J43.1","J43.2","J43.8","J43.9","J44","J44.0","J44.1","J44.9","J40"]
ild = ["J60","J61","J62","J62.0","J62.8","J63","J63.0","J63.1","J63.2","J63.3","J63.4","J63.5","J63.6","J64","J65","J66","J66.0","J66.1","J66.2","J66.8","J67","J67.0","J67.1","J67.2","J67.3","J67.4","J67.5","J67.6","J67.7","J67.8","J67.9","J68.4","J70.1","J70.3","J70.4","J84.0","J84.01","J84.02","J84.03","J84.04","J84.05","J85.06","J85.07","J85.08","J85.09","J84.1","J84.10","J84.11","J84.111","J84.112","J84.113","J84.114","J84.115","J84.116","J84.117","J84.2","J84.8","J84.81","J84.82","J84.83","J84.84","J84.841","J84.842","J84.843","J84.848","J84.89","J84.9","D86.0","D86.2","J82.81","M30.1","M31.0","M32.13"]
pulmemb = ["I26","I26.0","I26.01","I26.02","I26.09","I26.9","I26.90","I26.92","I26.93","I26.94","I26.99"]
pulmhtn = ["I27.0","I27.2"]

ckd = ["D59.3","E08.2","E08.21","E08.22","E08.29","E09.2","E09.21","E09.22","E09.29","E10.2","E10.21","E10.22","E10.29","E11.2","E11.21","E11.22","E11.29","E13.2","E13.21","E13.22","E13.29","I12","I12.0","I12.9","I13","I13.0","I13.1","I13.10","I13.11","I13.2","K76.7","M10.3","M10.30","M10.31","M10.311","M10.312","M10.319","M10.32","M10.321","M10.322","M10.329","M10.33","M10.331","M10.332","M10.339","M10.34","M10.341","M10.342","M10.349","M10.35","M10.351","M10.352","M10.359","M10.36","M10.361","M10.362","M10.369","M10.37","M10.371","M10.372","M10.379","M10.38","M10.39","M32.14","M32.15","N02","N02.0","N02.1","N02.2","N02.3","N02.4","N02.5","N02.6","N02.7","N02.8","N02.9","N02.A","N03","N03.0","N03.1","N03.2","N03.3","N03.4","N03.5","N03.6","N03.7","N03.8","N03.9","N03.A","N04","N04.0","N04.1","N04.2","N04.3","N04.4","N04.5","N04.6","N04.7","N04.8","N04.9","N04.A","N05","N05.0","N05.1","N05.2","N05.3","N05.4","N05.5","N05.6","N05.7","N05.8","N05.9","N05.A","N06","N06.0","N06.1","N06.2","N06.3","N06.4","N06.5","N06.6","N06.7","N06.8","N06.9","N06.A","N07","N07.0","N07.1","N07.2","N07.3","N07.4","N07.5","N07.6","N07.7","N07.8","N07.9","N07.A","N08","N11","N11.0","N11.1","N11.8","N11.9","N12","N14","N14.0","N14.1","N14.2","N14.3","N14.4","N15","N15.0","N15.8","N15.9","N16","N18","N18.1","N18.2","N18.3","N18.30","N18.31","N18.32","N18.4","N18.5","N18.6","N18.9","N19","N25","N26.1","N26.9","O26.83","Q61.1","Q61.11","Q61.19","Q61.2","Q61.3","Q61.4","I70.1","I72.2","M35.04","N13.1","N13.2","N13.30","N13.39","N25.0","N25.1","N25.81","N25.89","N25.9","Q62.0","Q62.10","Q62.11","Q62.12","Q62.2","Q62.31","Q62.32","Q62.39","R94.4","P96.0","Z99.2"]

cliv = ["K70","K70.0","K70.1","K70.10","K70.11","K70.2","K70.3","K70.30","K70.31","K70.4","K70.40","K70.41","K70.9","K74","K74.0","K74.00","K74.01","K74.02","K74.1","K74.2","K74.3","K74.4","K74.5","K74.6","K74.60","K74.69","K75.4","K75.81","K76.0"]
cirrh = ["K70.3","K70.30","K70.31","K74","K74.3","K74.4","K74.5","K74.6","K74.60","K74.69"]
nafld = ["K75.81"]
alc_ld = ["K70","K70.0","K70.1","K70.10","K70.11","K70.2","K70.3","K70.30","K70.31","K70.4","K70.40","K70.41","K70.9"]
autoi_hep = ["K75.4"]

stroke = ["G46.3","G46.4","I60","I60.0","I60.00","I60.01","I60.02","I60.1","I60.10","I60.11","I60.12","I60.2","I60.20","I60.21","I60.22","I60.3","I60.30","I60.31","I60.32","I60.4","I60.5","I60.50","I60.51","I60.52","I60.6","I60.7","I60.8","I60.9","I61","I61.0","I61.1","I61.2","I61.3","I61.4","I61.5","I61.6","I61.8","I61.9","I62","I62.0","I62.00","I62.01","I62.02","I62.03","I62.1","I62.9","I63","I63.0","I63.00","I63.01","I63.011","I63.012","I63.013","I63.019","I63.02","I63.03","I63.031","I63.032","I63.033","I63.039","I63.09","I63.1","I63.10","I63.11","I63.111","I63.112","I63.113","I63.119","I63.12","I63.13","I63.131","I63.132","I63.133","I63.139","I63.19","I63.2","I63.20","I63.21","I63.211","I63.212","I63.213","I63.219","I63.22","I63.23","I63.231","I63.232","I63.233","I63.239","I63.29","I63.3","I63.30","I63.31","I63.311","I63.312","I63.313","I63.319","I63.32","I63.321","I63.322","I63.323","I63.329","I63.33","I63.331","I63.332","I63.333","I63.339","I63.34","I63.341","I63.342","I63.343","I63.349","I63.39","I63.4","I63.40","I63.41","I63.411","I63.412","I63.413","I63.419","I63.42","I63.421","I63.422","I63.423","I63.429","I63.43","I63.431","I63.432","I63.433","I63.439","I63.44","I63.441","I63.442","I63.443","I63.449","I63.49","I63.5","I63.50","I63.51","I63.511","I63.512","I63.513","I63.519","I63.52","I63.521","I63.522","I63.523","I63.529","I63.53","I63.531","I63.532","I63.533","I63.539","I63.54","I63.541","I63.542","I63.543","I63.549","I63.59"]

neuro_all=["E84","E84.0","E84.1","E84.11","E84.19","E84.8","E84.9","F01","F01.5","F01.50","F01.51","F01511","F01519","F0152","F0153","F0154","F02","F02.8","F02.80","F02.81","F02811","F02818","F0282","F0283","F0284","F02A0","F02A11","F02A18","F02A2","F02A3","F02A4","F02B0","F02B11","F02B18","F02B2","F02B3","F02B4","F02C0","F02C11","F02C18","F02C2","F02C3","F02C4","F03","F03.9","F03.90","F03.91","F03911","F03918","F0392","F0393","F0394","F03A0","F03A11","F03A18","F03A2","F03A3","F03A4","F03B0","F03B11","F03B18","F03B2","F03B3","F03B4","F03C0","F03C18","F03C2","F03C3","F03C4","G30","G30.0","G30.1","G30.8","G30.9","G31","G31.0","G31.01","G31.09","G311","G312","G319","G31.83"]
cf = ["E84","E84.0","E84.1","E84.11","E84.19","E84.8","E84.9"]
demen = ["F01","F01.5","F01.50","F01.51","F01511","F01519","F0152","F0153","F0154","F02","F02.8","F02.80","F02.81","F02811","F02818","F0282","F0283","F0284","F02A0","F02A11","F02A18","F02A2","F02A3","F02A4","F02B0","F02B11","F02B18","F02B2","F02B3","F02B4","F02C0","F02C11","F02C18","F02C2","F02C3","F02C4","F03","F03.9","F03.90","F03.91","F03911","F03918","F0392","F0393","F0394","F03A0","F03A11","F03A18","F03A2","F03A3","F03A4","F03B0","F03B11","F03B18","F03B2","F03B3","F03B4","F03C0","F03C18","F03C2","F03C3","F03C4","G31.0","G31.01","G31.09","G31.83"]
parkin = ["G20","G21"]

dm = ["E10","E10.1","E10.10","E10.11","E10.2","E10.21","E10.22","E10.29","E10.3","E10.31","E10.311","E10.319","E10.32","E10.321","E10.3211","E10.3212","E10.3213","E10.3219","E10.329","E10.3291","E10.3292","E10.3293","E10.3299","E10.33","E10.331","E10.3311","E10.3312","E10.3313","E10.3319","E10.339","E10.3391","E10.3392","E10.3393","E10.3399","E10.34","E10.341","E10.3411","E10.3412","E10.3413","E10.3419","E10.349","E10.3491","E10.3492","E10.3493","E10.3499","E10.35","E10.351","E10.3511","E10.3512","E10.3513","E10.3519","E10.352","E10.3521","E10.3522","E10.3523","E10.3529","E10.353","E10.3531","E10.3532","E10.3533","E10.3539","E10.354","E10.3541","E10.3542","E10.3543","E10.3549","E10.355","E10.3551","E10.3552","E10.3553","E10.3559","E10.359","E10.3591","E10.3592","E10.3593","E10.3599","E10.36","E10.37","E10.37X1","E10.37X2","E10.37X3","E10.37X9","E10.39","E10.4","E10.40","E10.41","E10.42","E10.43","E10.44","E10.49","E10.5","E10.51","E10.52","E10.59","E10.6","E10.61","E10.610","E10.618","E10.62","E10.620","E10.621","E10.622","E10.628","E10.63","E10.630","E10.638","E10.64","E10.641","E10.649","E10.65","E10.69","E10.8","E10.9","E11","E11.0","E11.00","E11.01","E11.1","E11.10","E11.11","E11.2","E11.21","E11.22","E11.29","E11.3","E11.31","E11.311","E11.319","E11.32","E11.321","E11.3211","E11.3212","E11.3213","E11.3219","E11.329","E11.3291","E11.3292","E11.3293","E11.3299","E11.33","E11.331","E11.3311","E11.3312","E11.3313","E11.3319","E11.339","E11.3391","E11.3392","E11.3393","E11.3399","E11.34","E11.341","E11.3411","E11.3412","E11.3413","E11.3419","E11.349","E11.3491","E11.3492","E11.3493","E11.3499","E11.35","E11.351","E11.3511","E11.3512","E11.3513","E11.3519","E11.352","E11.3521","E11.3522","E11.3523","E11.3529","E11.353","E11.3531","E11.3532","E11.3533","E11.3539","E11.354","E11.3541","E11.3542","E11.3543","E11.3549","E11.355","E11.3551","E11.3552","E11.3553","E11.3559","E11.359","E11.3591","E11.3592","E11.3593","E11.3599","E11.36","E11.37","E11.37X1","E11.37X2","E11.37X3","E11.37X9","E11.39","E11.4","E11.40","E11.41","E11.42","E11.43","E11.44","E11.49","E11.5","E11.51","E11.52","E11.59","E11.6","E11.61","E11.610","E11.618","E11.62","E11.620","E11.621","E11.622","E11.628","E11.63","E11.630","E11.638","E11.64","E11.641","E11.649","E11.65","E11.69","E11.8","E11.9","E13.01","E13.10","E13.11","E13.21","E13.21","E13.22","E13.22","E13.29","E13.29","E13.311","E13.319","E13.321","E13.3212","E13.3213","E13.3219","E13.329","E13.3291","E13.3292","E13.3293","E13.331","E13.3311","E13.3312","E13.3313","E13.3319","E13.339","E13.3391","E13.3393","E13.3399","E13.341","E13.3411","E13.3412","E13.3413","E13.3419","E13.3491","E13.3492","E13.3493","E13.3499","E13.351","E13.3511","E13.3512","E13.3519","E13.3521","E13.3522","E13.3523","E13.3529","E13.3531","E13.3532","E13.3539","E13.3541","E13.3542","E13.3543","E13.3549","E13.3551","E13.3552","E13.3559","E13.359","E13.3591","E13.3592","E13.3593","E13.3599","E13.36","E13.40","E13.41","E13.42","E13.43","E13.44","E13.49","E13.51","E13.52","E13.59","E13.618","E13.620","E13.621","E13.622","E13.628","E13.630","E13.638","E13.641","E13.65","E13.69","E13.8","E13.9"]

disab = ["Q00.0","Q00.1","Q00.2","Q01.0","Q01.1","Q01.2","Q01.8","Q01.9","Q02","Q03.0","Q03.1","Q03.8","Q03.9","Q04.0","Q04.1","Q04.2","Q04.3","Q04.4","Q04.5","Q04.6","Q04.8","Q04.9","Q05.0","Q05.1","Q05.2","Q05.3","Q05.4","Q05.5","Q05.6","Q05.7","Q05.8","Q05.9","Q06.0","Q06.1","Q06.2","Q06.3","Q06.4","Q06.8","Q06.9","Q07","Q07.0","Q07.00","Q07.01","Q07.02","Q07.03","Q07.8","Q07.9","Q10","Q10.0","Q10.1","Q10.2","Q10.3","Q10.4","Q10.6","Q10.7","Q11","Q11.0","Q11.1","Q11.2","Q11.3","Q12","Q12.0","Q12.1","Q12.2","Q12.3","Q12.4","Q12.8","Q12.9","Q13","Q13.0","Q13.1","Q13.2","Q13.3","Q13.4","Q13.8","Q13.81","Q13.89","Q13.9","Q14","Q14.0","Q14.1","Q14.2","Q14.3","Q14.8","Q14.9","Q15","Q15.0","Q15.8","Q15.9","Q16","Q16.0","Q16.1","Q16.2","Q16.3","Q16.4","Q16.5","Q16.9","Q17","Q17.0","Q17.1","Q17.2","Q17.3","Q17.4","Q17.8","Q17.9","Q18","Q18.0","Q18.2","Q18.4","Q18.5","Q18.8","Q18.9","Q20","Q20.0","Q20.1","Q20.2","Q20.3","Q20.4","Q20.5","Q20.6","Q20.8","Q20.9","Q21","Q21.0","Q21.1","Q21.2","Q21.3","Q21.4","Q21.8","Q21.9","Q22","Q22.0","Q22.1","Q22.3","Q22.4","Q22.5","Q22.6","Q22.8","Q22.9","Q23","Q23.0","Q23.2","Q23.4","Q23.8","Q23.9","Q24","Q24.0","Q24.2","Q24.3","Q24.4","Q24.5","Q24.6","Q24.8","Q24.9","Q25","Q25.0","Q25.1","Q25.2","Q25.21","Q25.29","Q25.3","Q25.4","Q25.40","Q25.41","Q25.42","Q25.43","Q25.44","Q25.45","Q25.46","Q25.47","Q25.48","Q25.49","Q25.5","Q25.6","Q25.7","Q25.71","Q25.72","Q25.79","Q25.8","Q25.9","Q26","Q26.0","Q26.1","Q26.2","Q26.3","Q26.4","Q26.5","Q26.6","Q26.8","Q26.9","Q27","Q27.1","Q27.2","Q27.3","Q27.30","Q27.31","Q27.32","Q27.33","Q27.34","Q27.39","Q27.4","Q27.8","Q27.9","Q28","Q28.0","Q28.1","Q28.2","Q28.3","Q28.8","Q28.9","Q30","Q30.0","Q30.1","Q30.2","Q30.3","Q30.8","Q30.9","Q31","Q31.0","Q31.1","Q31.2","Q31.3","Q31.8","Q31.9","Q32","Q32.1","Q32.2","Q32.3","Q32.4","Q33","Q33.0","Q33.1","Q33.2","Q33.3","Q33.4","Q33.5","Q33.6","Q33.8","Q33.9","Q34","Q34.0","Q34.1","Q34.8","Q34.9","Q35","Q35.1","Q35.3","Q35.5","Q35.7","Q35.9","Q36","Q36.0","Q36.1","Q36.9","Q37","Q37.0","Q37.1","Q37.2","Q37.3","Q37.4","Q37.5","Q37.8","Q37.9","Q38","Q38.0","Q38.2","Q38.3","Q38.4","Q38.5","Q38.6","Q38.7","Q38.8","Q39","Q39.0","Q39.1","Q39.2","Q39.3","Q39.4","Q39.5","Q39.6","Q39.8","Q39.9","Q40","Q40.0","Q40.1","Q40.2","Q40.3","Q40.8","Q40.9","Q41","Q41.0","Q41.1","Q41.2","Q41.8","Q41.9","Q42","Q42.0","Q42.1","Q42.2","Q42.3","Q42.8","Q42.9","Q43","Q43.1","Q43.2","Q43.3","Q43.4","Q43.5","Q43.6","Q43.7","Q43.8","Q43.9","Q44","Q44.0","Q44.1","Q44.2","Q44.3","Q44.4","Q44.5","Q44.6","Q44.7","Q45","Q45.0","Q45.1","Q45.2","Q45.3","Q45.8","Q45.9","Q50","Q50.0","Q50.01","Q50.02","Q50.1","Q50.2","Q50.3","Q50.31","Q50.32","Q50.39","Q50.4","Q50.5","Q50.6","Q51","Q51.0","Q51.1","Q51.10","Q51.11","Q51.2","Q51.21","Q51.22","Q51.28","Q51.3","Q51.4","Q51.5","Q51.6","Q51.7","Q51.8","Q51.81","Q51.810","Q51.811","Q51.818","Q51.82","Q51.820","Q51.821","Q51.828","Q51.9","Q52","Q52.0","Q52.1","Q52.10","Q52.11","Q52.12","Q52.120","Q52.121","Q52.122","Q52.123","Q52.124","Q52.129","Q52.2","Q52.4","Q52.5","Q52.6","Q52.7","Q52.70","Q52.71","Q52.79","Q52.8","Q52.9","Q53","Q53.0","Q53.00","Q53.01","Q53.02","Q53.1","Q53.10","Q53.11","Q53.111","Q53.112","Q53.12","Q53.13","Q53.2","Q53.20","Q53.21","Q53.211","Q53.212","Q53.22","Q53.23","Q53.9","Q54","Q54.0","Q54.1","Q54.2","Q54.3","Q54.4","Q54.8","Q54.9","Q55","Q55.0","Q55.1","Q55.2","Q55.20","Q55.21","Q55.22","Q55.23","Q55.29","Q55.3","Q55.4","Q55.5","Q55.6","Q55.61","Q55.62","Q55.63","Q55.64","Q55.69","Q55.7","Q55.8","Q55.9","Q56","Q56.0","Q56.1","Q56.2","Q56.3","Q56.4","Q60","Q60.0","Q60.1","Q60.2","Q60.3","Q60.4","Q60.5","Q60.6","Q61","Q61.0","Q61.00","Q61.01","Q61.02","Q61.1","Q61.11","Q61.19","Q61.2","Q61.3","Q61.4","Q61.5","Q61.8","Q61.9","Q62","Q62.0","Q62.1","Q62.10","Q62.11","Q62.12","Q62.2","Q62.3","Q62.31","Q62.32","Q62.39","Q62.4","Q62.5","Q62.6","Q62.60","Q62.61","Q62.62","Q62.63","Q62.69","Q62.7","Q62.8","Q63","Q63.0","Q63.1","Q63.2","Q63.3","Q63.8","Q63.9","Q64","Q64.0","Q64.1","Q64.10","Q64.11","Q64.12","Q64.19","Q64.2","Q64.3","Q64.31","Q64.32","Q64.33","Q64.39","Q64.4","Q64.5","Q64.6","Q64.7","Q64.70","Q64.71","Q64.72","Q64.73","Q64.74","Q64.75","Q64.79","Q64.8","Q64.9","Q65","Q65.0","Q65.00","Q65.01","Q65.02","Q65.1","Q65.2","Q65.3","Q65.30","Q65.31","Q65.32","Q65.4","Q65.5","Q65.6","Q65.8","Q65.81","Q65.82","Q65.89","Q65.9","Q66","Q66.0","Q66.00","Q66.01","Q66.02","Q66.1","Q66.10","Q66.11","Q66.12","Q66.2","Q66.3","Q66.30","Q66.31","Q66.32","Q66.4","Q66.40","Q66.41","Q66.42","Q66.5","Q66.50","Q66.51","Q66.52","Q66.6","Q66.7","Q66.70","Q66.71","Q66.72","Q66.8","Q66.80","Q66.81","Q66.82","Q66.89","Q66.9","Q66.90","Q66.91","Q66.92","Q67","Q67.0","Q67.1","Q67.2","Q67.3","Q67.4","Q67.5","Q67.6","Q67.7","Q67.8","Q68","Q68.0","Q68.1","Q68.2","Q68.3","Q68.4","Q68.5","Q68.6","Q68.8","Q69","Q69.0","Q69.1","Q69.2","Q69.9","Q70","Q70.0","Q70.00","Q70.01","Q70.02","Q70.03","Q70.1","Q70.10","Q70.11","Q70.12","Q70.13","Q70.2","Q70.20","Q70.21","Q70.22","Q70.23","Q70.3","Q70.30","Q70.31","Q70.32","Q70.33","Q70.4","Q70.9","Q71","Q71.0","Q71.00","Q71.01","Q71.02","Q71.03","Q71.1","Q71.10","Q71.11","Q71.12","Q71.13","Q71.2","Q71.20","Q71.21","Q71.22","Q71.23","Q71.3","Q71.30","Q71.31","Q71.32","Q71.33","Q71.4","Q71.40","Q71.41","Q71.42","Q71.43","Q71.5","Q71.50","Q71.51","Q71.52","Q71.53","Q71.6","Q71.60","Q71.61","Q71.62","Q71.63","Q71.8","Q71.81","Q71.811","Q71.812","Q71.813","Q71.819","Q71.89","Q71.891","Q71.892","Q71.893","Q71.899","Q71.9","Q71.90","Q71.91","Q71.92","Q71.93","Q72","Q72.0","Q72.00","Q72.01","Q72.02","Q72.03","Q72.1","Q72.10","Q72.11","Q72.12","Q72.13","Q72.2","Q72.20","Q72.21","Q72.22","Q72.23","Q72.3","Q72.30","Q72.31","Q72.32","Q72.33","Q72.4","Q72.40","Q72.41","Q72.42","Q72.43","Q72.5","Q72.50","Q72.51","Q72.52","Q72.53","Q72.6","Q72.60","Q72.61","Q72.62","Q72.63","Q72.8","Q72.81","Q72.811","Q72.812","Q72.813","Q72.819","Q72.89","Q72.891","Q72.892","Q72.893","Q72.899","Q72.9","Q72.90","Q72.91","Q72.92","Q72.93","Q73","Q73.1","Q73.8","Q74","Q74.0","Q74.1","Q74.2","Q74.3","Q74.8","Q74.9","Q75","Q75.0","Q75.1","Q75.2","Q75.3","Q75.4","Q75.5","Q75.8","Q75.9","Q76","Q76.0","Q76.1","Q76.2","Q76.3","Q76.4","Q76.41","Q76.411","Q76.412","Q76.413","Q76.414","Q76.415","Q76.419","Q76.42","Q76.425","Q76.426","Q76.427","Q76.428","Q76.429","Q76.49","Q76.6","Q76.7","Q76.8","Q76.9","Q77","Q77.0","Q77.1","Q77.2","Q77.3","Q77.4","Q77.5","Q77.6","Q77.7","Q77.8","Q77.9","Q78","Q78.0","Q78.1","Q78.2","Q78.3","Q78.4","Q78.5","Q78.6","Q78.8","Q78.9","Q79","Q79.0","Q79.1","Q79.2","Q79.3","Q79.4","Q79.5","Q79.51","Q79.59","Q79.6","Q79.60","Q79.61","Q79.62","Q79.63","Q79.69","Q79.8","Q79.9","Q80","Q80.0","Q80.1","Q80.2","Q80.3","Q80.4","Q80.8","Q80.9","Q81","Q81.0","Q81.1","Q81.2","Q81.8","Q81.9","Q82","Q82.0","Q82.1","Q82.2","Q82.3","Q82.4","Q82.5","Q82.8","Q82.9","Q83","Q83.0","Q83.1","Q83.2","Q83.8","Q83.9","Q84","Q84.0","Q84.1","Q84.2","Q84.3","Q84.4","Q84.5","Q84.6","Q84.8","Q84.9","Q85","Q85.0","Q85.00","Q85.01","Q85.02","Q85.03","Q85.09","Q85.1","Q85.8","Q85.9","Q86.0","Q86.1","Q86.2","Q86.8","Q87.0","Q87.1","Q87.11","Q87.19","Q87.2","Q87.3","Q87.4","Q87.40","Q87.41","Q87.410","Q87.418","Q87.42","Q87.43","Q87.5","Q87.81","Q87.82","Q87.89","Q89","Q89.0","Q89.01","Q89.09","Q89.1","Q89.2","Q89.3","Q89.4","Q89.7","Q89.8","Q89.9","Q61.5","Q90","Q90.0","Q90.1","Q90.2","Q90.9","Q91","Q91.0","Q91.1","Q91.2","Q91.3","Q91.4","Q91.5","Q91.6","Q91.7","Q92","Q92.0","Q92.1","Q92.2","Q92.5","Q96.6","Q92.61","Q92.62","Q92.7","Q92.8","Q92.9","Q93.0","Q93.1","Q93.2","Q93.3","Q93.4","Q93.5","Q93.51","Q93.59","Q93.7","Q93.8","Q93.81","Q93.88","Q93.89","Q93.9","Q95.2","Q95.3","Q95.5","Q95.8","Q95.9","Q96x","Q97x","Q98","Q99.2","Q99.0","Q99.1","Q99.8","Q99.9","F70","F71","F72","F73","F78","F78.A","F78.A1","F78.A9","F79","F80.0","F80.1","F80.2","F80.4","F80.81","F80.82","F80.89","F80.9","F81.0","F81.2","F81.81","F81.89","F81.9","F82","F84","F84.0","F84.2","F84.3","F84.5","F84.8","F84.9","F88","F89","F90.0","F90.1","F90.2","F90.8","F90.9","H93.25","R48.0","E78.71","E78.72","P04.3","G80.0","G80.1","G80.2","G80.3","G80.4","G80.8","G80.9","E13.69","E13.8","E75.22","E88.41","E88.42","E88.49","G23.1","G23.8","G31.82","G36.0","G71.11","G71.3","H47.22","M14.67","F95.2","Z99.3","G10","G12","G12.0","G12.1","G12.2","G12.20","G12.21","G12.22","G12.23","G12.24","G12.25","G12.29","G12.8","G12.9","G13","G13.0","G13.1","G13.2","G13.8","G70","G70.0","G70.00","G70.01","G70.1","G70.2","G70.8","G70.80","G70.81","G70.89","G70.9","G73","G73.1","G73.3","G73.7","Z73.6","Z74.0","Z74.01","Z74.09","Z74.1","Z74.2","Z74.3","Z74.8","Z74.9","G20","G21","G21.0","G21.1","G21.11","G21.19","G21.2","G21.3","G21.4","G21.8","G21.9","S14.0XXA","S14.0XXS","S14.101A","S14.102A","S14.103A","S14.104A","S14.105A","S14.106A","S14.107A","S14.108A","S14.109A","S14.111A","S14.112A","S14.113A","S14.114A","S14.115A","S14.116A","S14.117A","S14.118A","S14.119A","S14.121A","S14.122A","S14.123A","S14.124A","S14.125A","S14.126A","S14.127A","S14.128A","S14.129A","S14.131A","S14.132A","S14.133A","S14.134A","S14.135A","S14.136A","S14.137A","S14.138A","S14.139A","S14.141A","S14.142A","S14.143A","S14.144A","S14.145A","S14.146A","S14.147A","S14.148A","S14.149A","S14.111S","S14.112S","S14.113S","S14.114S","S14.115S","S14.116S","S14.117S","S14.118S","S14.119S","S14.121S","S14.122S","S14.123S","S14.124S","S14.125S","S14.126S","S14.127S","S14.128S","S14.129S","S14.131S","S14.132S","S14.133S","S14.134S","S14.135S","S14.136S","S14.137S","S14.138S","S14.139S","S14.141S","S14.142S","S14.143S","S14.144S","S14.145S","S14.146S","S14.147S","S14.148S","S14.149S","S24.0XXA","S24.101A","S24.102A","S24.103A","S24.104A","S24.109A","S24.111A","S24.112A","S24.113A","S24.114A","S24.119A","S24.131A","S24.132A","S24.133A","S24.134A","S24.139A","S24.141A","S24.142A","S24.143A","S24.144A","S24.149A","S24.0XXS","S24.101S","S24.102S","S24.103S","S24.104S","S24.109S","S24.111S","S24.112S","S24.113S","S24.114S","S24.119S","S24.131S","S24.132S","S24.133S","S24.134S","S24.139S","S24.141S","S24.142S","S24.143S","S24.144S","S24.149S","S34.01XA","S34.02XA","S34.101A","S34.102A","S34.103A","S34.104A","S34.105A","S34.109A","S34.111A","S34.112A","S34.113A","S34.114A","S34.115A","S34.119A","S34.121A","S34.122A","S34.123A","S34.124A","S34.125A","S34.129A","S34.131A","S34.132A","S34.139A","S34.3XXA","S34.01XS","S34.02XS","S34.101S","S34.102S","S34.103S","S34.104S","S34.105S","S34.109S","S34.111S","S34.112S","S34.113S","S34.114S","S34.115S","S34.119S","S34.121S","S34.122S","S34.123S","S34.124S","S34.125S","S34.129S","S34.131S","S34.132S","S34.139S","F07.0","F07.81","F07.89","F48.2","S06.0X0S","S06.0X1S","S06.0X2S","S06.0X3S","S06.0X4S","S06.0X5S","S06.0X6S","S06.0X9S","S06.1X0S","S06.1X1S","S06.1X2S","S06.1X3S","S06.1X4S","S06.1X5S","S06.1X6S","S06.1X9S","S06.2X0S","S06.2X1S","S06.2X2S","S06.2X3S","S06.2X4S","S06.2X5S","S06.2X6S","S06.2X9S","S06.300S","S06.301S","S06.302S","S06.303S","S06.304S","S06.305S","S06.306S","S06.309S","S06.310S","S06.311S","S06.312S","S06.313S","S06.314S","S06.315S","S06.316S","S06.319S","S06.320S","S06.321S","S06.322S","S06.323S","S06.324S","S06.325S","S06.326S","S06.329S","S06.330S","S06.331S","S06.332S","S06.333S","S06.334S","S06.335S","S06.339S","S06.340S","S06.341S","S06.342S","S06.343S","S06.344S","S06.345S","S06.346S","S06.349S","S06.350S","S06.351S","S06.352S","S06.353S","S06.354S","S06.355S","S06.356S","S06.359S","S06.360S","S06.361S","S06.362S","S06.363S","S06.364S","S06.365S","S06.366S","S06.369S","S06.370S","S06.371S","S06.372S","S06.373S","S06.374S","S06.375S","S06.376S","S06.379S","S06.380S","S06.381S","S06.382S","S06.383S","S06.384S","S06.384S","S06.385S","S06.386S","S06.389S","S06.4X0S","S06.4X1S","S06.4X2S","S06.4X3S","S06.4X4S","S06.4X5S","S06.4X6S","S06.4X9S","S06.5X0S","S06.5X1S","S06.5X2S","S06.5X3S","S06.5X4S","S06.5X5S","S06.5X6S","S06.5X9S","S06.6X0S","S06.6X1S","S06.6X2S","S06.6X3S","S06.6X4S","S06.6X5S","S06.6X6S","S06.6X9S","S06.810S","S06.811S","S06.812S","S06.813S","S06.814S","S06.815S","S06.816S","S06.819S","S06.820S","S06.821S","S06.822S","S06.823S","S06.824S","S06.825S","S06.826S","S06.829S","S06.890S","S06.891S","S06.892S","S06.893S","S06.894S","S06.895S","S06.896S","S06.899S","S06.9X0S","S06.9X1S","S06.9X2S","S06.9X3S","S06.9X4S","S06.9X5S","S06.9X6S","S06.9X9S","H54.0X33","H54.0X34","H54.0X35","H54.0X43","H54.0X44","H54.0X45","H54.0X53","H54.0X54","H54.0X55","H54.10","H54.11","H54.1131","H54.1132","H54.1141","H54.1142","H54.1151","H54.1152","H54.12","H54.1213","H54.1214","H54.1215","H54.1223","H54.1224","H54.1225","H54.2","H54.2X11","H54.2X12","H54.2X21","H54.2X22","H54.3","H54.8","H90.3","H90.41","H90.42","H90.5","H90.6","H90.71","H90.72","H90.8","H90.A21","H90.A22","H90.A31","H90.A32","H91.01","H91.02","H91.03","H91.09","H91.3","H91.8X1","H91.8X2","H91.8X3","H91.8X9","H91.90","H91.91","H91.92","H91.93"]

can = ["C00","C00.0","C00.1","C00.2","C00.3","C00.4","C00.5","C00.6","C00.8","C00.9","C01","C02","C02.0","C02.1","C02.2","C02.3","C02.4","C02.8","C02.9","C03","C03.0","C03.1","C03.9","C04","C04.0","C04.1","C04.8","C04.9","C05","C05.0","C05.1","C05.2","C05.8","C05.9","C06","C06.0","C06.1","C06.2","C06.8","C06.80","C06.89","C06.9","C07","C08","C08.0","C08.1","C08.9","C09","C09.0","C09.1","C09.8","C09.9","C10","C10.0","C10.1","C10.2","C10.3","C10.4","C10.8","C10.9","C11","C11.0","C11.1","C11.2","C11.3","C11.8","C11.9","C12","C13","C13.0","C13.1","C13.2","C14","C14.0","C14.2","C14.8","C15","C15.3","C15.4","C15.5","C15.8","C15.9","C16","C16.0","C16.1","C16.2","C16.3","C16.4","C16.5","C16.6","C16.8","C16.9","C17","C17.0","C17.1","C17.2","C17.3","C17.8","C17.9","C18","C18.0","C18.1","C18.2","C18.3","C18.4","C18.5","C18.6","C18.7","C18.8","C18.9","C19","C20","C21","C21.0","C21.1","C21.2","C21.8","C22","C22.0","C22.1","C22.2","C22.3","C22.4","C22.7","C22.8","C22.9","C23","C24","C24.0","C24.1","C24.8","C24.9","C25","C25.0","C25.1","C25.2","C25.3","C25.4","C25.7","C25.8","C25.9","C26","C26.0","C26.1","C26.9","C30","C30.0","C30.1","C31","C31.0","C31.1","C31.2","C31.3","C31.8","C31.9","C32","C32.0","C32.1","C32.2","C32.3","C32.8","C32.9","C33","C34","C34.0","C34.00","C34.01","C34.02","C34.1","C34.10","C34.11","C34.12","C34.2","C34.3","C34.30","C34.31","C34.32","C34.8","C34.80","C34.81","C34.82","C34.9","C34.90","C34.91","C34.92","C37","C38","C38.0","C38.1","C38.2","C38.3","C38.4","C38.8","C39","C39.0","C39.9","C40","C40.0","C40.00","C40.01","C40.02","C40.1","C40.10","C40.11","C40.12","C40.2","C40.20","C40.21","C40.22","C40.3","C40.30","C40.31","C40.32","C40.8","C40.80","C40.81","C40.82","C40.9","C40.90","C40.91","C40.92","C41","C41.0","C41.1","C41.2","C41.3","C41.4","C41.9","C43","C43.0","C43.1","C43.10","C43.11","C43.111","C43.112","C43.12","C43.121","C43.122","C43.2","C43.20","C43.21","C43.22","C43.3","C43.30","C43.31","C43.39","C43.4","C43.5","C43.51","C43.52","C43.59","C43.6","C43.60","C43.61","C43.62","C43.7","C43.70","C43.71","C43.72","C43.8","C43.9","C45","C45.0","C45.1","C45.2","C45.7","C45.9","C46","C46.0","C46.1","C46.2","C46.3","C46.4","C46.5","C46.50","C46.51","C46.52","C46.7","C46.9","C47","C47.0","C47.1","C47.10","C47.11","C47.12","C47.2","C47.20","C47.21","C47.22","C47.3","C47.4","C47.5","C47.6","C47.8","C47.9","C48","C48.0","C48.1","C48.2","C48.8","C49","C49.0","C49.1","C49.10","C49.11","C49.12","C49.2","C49.20","C49.21","C49.22","C49.3","C49.4","C49.5","C49.6","C49.8","C49.9","C49.A","C49.A0","C49.A1","C49.A2","C49.A3","C49.A4","C49.A5","C49.A9","C50","C50.0","C50.01","C50.011","C50.012","C50.019","C50.02","C50.021","C50.022","C50.029","C50.1","C50.11","C50.111","C50.112","C50.119","C50.12","C50.121","C50.122","C50.129","C50.2","C50.21","C50.211","C50.212","C50.219","C50.22","C50.221","C50.222","C50.229","C50.3","C50.31","C50.311","C50.312","C50.319","C50.32","C50.321","C50.322","C50.329","C50.4","C50.41","C50.411","C50.412","C50.419","C50.42","C50.421","C50.422","C50.429","C50.5","C50.51","C50.511","C50.512","C50.519","C50.52","C50.521","C50.522","C50.529","C50.6","C50.61","C50.611","C50.612","C50.619","C50.62","C50.621","C50.622","C50.629","C50.8","C50.81","C50.811","C50.812","C50.819","C50.82","C50.821","C50.822","C50.829","C50.9","C50.91","C50.911","C50.912","C50.919","C50.92","C50.921","C50.922","C50.929","C51","C51.0","C51.1","C51.2","C51.8","C51.9","C52","C53","C53.0","C53.1","C53.8","C53.9","C54","C54.0","C54.1","C54.2","C54.3","C54.8","C54.9","C55","C56","C56.1","C56.2","C56.9","C57","C57.0","C57.00","C57.01","C57.02","C57.1","C57.10","C57.11","C57.12","C57.2","C57.20","C57.21","C57.22","C57.3","C57.4","C57.7","C57.8","C57.9","C58","C60","C60.0","C60.1","C60.2","C60.8","C60.9","C61","C62","C62.0","C62.00","C62.01","C62.02","C62.1","C62.10","C62.11","C62.12","C62.9","C62.90","C62.91","C62.92","C63","C63.0","C63.00","C63.01","C63.02","C63.1","C63.10","C63.11","C63.12","C63.2","C63.7","C63.8","C63.9","C64","C64.1","C64.2","C64.9","C65","C65.1","C65.2","C65.9","C66","C66.1","C66.2","C66.9","C67","C67.0","C67.1","C67.2","C67.3","C67.4","C67.5","C67.6","C67.7","C67.8","C67.9","C68","C68.0","C68.1","C68.2","C68.8","C68.9","C69","C69.0","C69.00","C69.01","C69.02","C69.1","C69.10","C69.11","C69.12","C69.2","C69.20","C69.21","C69.22","C69.3","C69.30","C69.31","C69.32","C69.4","C69.40","C69.41","C69.42","C69.5","C69.50","C69.51","C69.52","C69.6","C69.60","C69.61","C69.62","C69.8","C69.80","C69.81","C69.82","C69.9","C69.90","C69.91","C69.92","C70","C70.0","C70.1","C70.9","C71","C71.0","C71.1","C71.2","C71.3","C71.4","C71.5","C71.6","C71.7","C71.8","C71.9","C72","C72.0","C72.1","C72.2","C72.20","C72.21","C72.22","C72.3","C72.30","C72.31","C72.32","C72.4","C72.40","C72.41","C72.42","C72.5","C72.50","C72.59","C72.9","C73","C74","C74.0","C74.00","C74.01","C74.02","C74.1","C74.10","C74.11","C74.12","C74.9","C74.90","C74.91","C74.92","C75","C75.0","C75.1","C75.2","C75.3","C75.4","C75.5","C75.8","C75.9","C76","C76.0","C76.1","C76.2","C76.3","C76.4","C76.40","C76.41","C76.42","C76.5","C76.50","C76.51","C76.52","C76.8","C80","C80.0","C80.1","C80.2","C7A","C7A.0","C7A.00","C7A.01","C7A.010","C7A.011","C7A.012","C7A.019","C7A.02","C7A.020","C7A.021","C7A.022","C7A.023","C7A.024","C7A.025","C7A.026","C7A.029","C7A.09","C7A.090","C7A.091","C7A.092","C7A.093","C7A.094","C7A.095","C7A.096","C7A.098","C7A.1","C7A.8","C7B.8","C81","C81.0","C81.00","C81.01","C81.02","C81.03","C81.04","C81.05","C81.06","C81.07","C81.08","C81.09","C81.1","C81.10","C81.11","C81.12","C81.13","C81.14","C81.15","C81.16","C81.17","C81.18","C81.19","C81.2","C81.20","C81.21","C81.22","C81.23","C81.24","C81.25","C81.26","C81.27","C81.28","C81.29","C81.3","C81.30","C81.31","C81.32","C81.33","C81.34","C81.35","C81.36","C81.37","C81.38","C81.39","C81.40","C81.41","C81.42","C81.43","C81.44","C81.45","C81.46","C81.47","C81.48","C81.49","C81.7","C81.70","C81.71","C81.72","C81.73","C81.74","C81.75","C81.76","C81.77","C81.78","C81.79","C81.9","C81.90","C81.91","C81.92","C81.93","C81.94","C81.95","C81.96","C81.97","C81.98","C81.99","C82","C82.0","C82.00","C82.01","C82.02","C82.03","C82.04","C82.05","C82.06","C82.07","C82.08","C82.09","C82.1","C82.10","C82.11","C82.12","C82.13","C82.14","C82.15","C82.16","C82.17","C82.18","C82.19","C82.2","C82.20","C82.21","C82.22","C82.23","C82.24","C82.25","C82.26","C82.27","C82.28","C82.29","C82.3","C82.30","C82.31","C82.32","C82.33","C82.34","C82.35","C82.36","C82.37","C82.38","C82.39","C82.4","C82.40","C82.41","C82.42","C82.43","C82.44","C82.45","C82.46","C82.47","C82.48","C82.49","C82.5","C82.50","C82.51","C82.52","C82.53","C82.54","C82.55","C82.56","C82.57","C82.58","C82.59","C82.6","C82.60","C82.61","C82.62","C82.63","C82.64","C82.65","C82.66","C82.67","C82.68","C82.69","C82.8","C82.80","C82.81","C82.82","C82.83","C82.84","C82.85","C82.86","C82.87","C82.88","C82.89","C82.9","C82.90","C82.91","C82.92","C82.93","C82.94","C82.95","C82.96","C82.97","C82.98","C82.99","C83","C83.0","C83.00","C83.01","C83.02","C83.03","C83.04","C83.05","C83.06","C83.07","C83.08","C83.09","C83.1","C83.10","C83.11","C83.12","C83.13","C83.14","C83.15","C83.16","C83.17","C83.18","C83.19","C83.3","C83.30","C83.31","C83.32","C83.33","C83.34","C83.35","C83.36","C83.37","C83.38","C83.39","C83.5","C83.50","C83.51","C83.52","C83.53","C83.54","C83.55","C83.56","C83.57","C83.58","C83.59","C83.7","C83.70","C83.71","C83.72","C83.73","C83.74","C83.75","C83.76","C83.77","C83.78","C83.79","C83.8","C83.80","C83.81","C38.82","C83.83","C83.84","C83.85","C83.86","C83.87","C83.88","C83.89","C83.9","C83.90","C83.91","C83.92","C83.93","C83.94","C83.95","C83.96","C83.97","C83.98","C83.99","C84","C84.0","C84.00","C84.01","C84.02","C84.03","C84.04","C84.05","C84.06","C84.07","C84.08","C84.09","C84.1","C84.10","C84.11","C84.12","C84.13","C84.14","C84.15","C84.16","C84.17","C84.18","C84.19","C84.4","C84.40","C84.41","C84.42","C84.43","C84.44","C84.45","C84.46","C84.47","C84.48","C84.49","C84.6","C84.60","C84.61","C84.62","C84.63","C84.64","C84.65","C84.66","C84.67","C84.68","C84.69","C84.7","C84.70","C84.71","C84.72","C84.73","C84.74","C84.75","C84.76","C84.77","C84.78","C84.79","C84.A","C84.A0","C84.A1","C84.A2","C84.A3","C84.A4","C84.A5","C84.A6","C84.A7","C84.A8","C84.A9","C84.Z","C84.Z0","C84.Z1","C84.Z2","C84.Z3","C84.Z4","C84.Z5","C84.Z6","C84.Z7","C84.Z8","C84.Z9","C84.9","C84.90","C84.91","C84.92","C84.93","C84.94","C84.95","C84.96","C84.97","C84.98","C84.99","C85","C85.1","C85.10","C85.11","C85.12","C85.13","C85.14","C85.15","C85.16","C85.17","C85.18","C85.19","C85.2","C85.20","C85.21","C85.22","C85.23","C85.24","C85.25","C85.26","C85.27","C85.28","C85.29","C85.8","C85.80","C85.81","C85.82","C85.83","C85.84","C85.85","C85.86","C85.87","C85.88","C85.89","C85.9","C85.90","C85.91","C85.92","C85.93","C85.94","C85.95","C85.96","C85.97","C85.98","C85.99","C86","C86.0","C86.1","C86.2","C86.3","C86.4","C86.5","C86.6","C88","C88.0","C88.2","C88.3","C88.4","C88.8","C88.9","C90","C90.0","C90.00","C90.01","C90.02","C90.1","C90.10","C90.11","C90.12","C90.2","C90.20","C90.21","C90.22","C90.3","C90.30","C90.31","C90.32","C91","C91.0","C91.00","C91.01","C91.02","C91.1","C91.10","C91.11","C91.12","C91.3","C91.30","C91.31","C91.32","C91.4","C91.40","C91.41","C91.42","C91.5","C91.50","C91.51","C91.52","C91.6","C91.60","C91.61","C91.62","C91.A","C91.A0","C91.A1","C91.A2","C91.Z","C91.Z0","C91.Z1","C91.Z2","C91.9","C91.90","C91.91","C91.92","C92","C92.0","C92.00","C92.01","C92.02","C92.1","C92.10","C92.11","C92.12","C92.2","C92.20","C92.21","C92.22","C92.3","C92.30","C92.31","C92.32","C92.4","C92.40","C92.41","C92.42","C92.5","C92.50","C92.51","C92.52","C92.6","C92.60","C92.61","C92.62","C92.A","C92.A0","C92.A1","C92.A2","C92.Z","C92.Z0","C92.Z1","C92.Z2","C92.9","C92.90","C92.91","C92.92","C93","C93.0","C93.00","C93.01","C93.02","C93.1","C93.10","C93.11","C93.12","C93.3","C93.30","C93.31","C93.32","C93.Z","C93.Z0","C93.Z1","C93.Z2","C93.9","C93.90","C93.91","C93.92","C94","C94.0","C94.00","C94.01","C94.02","C94.2","C94.20","C94.21","C94.22","C94.3","C94.30","C94.31","C94.32","C94.4","C94.40","C94.41","C94.42","C94.6","C94.8","C94.80","C94.81","C94.82","C95","C95.0","C95.00","C95.01","C95.02","C95.1","C95.10","C95.11","C95.12","C95.9","C95.90","C95.91","C95.92","C96","C96.0","C96.2","C96.20","C96.21","C96.22","C96.29","C96.4","C96.5","C96.6","C96.A","C96.Z","C96.9","D09.0","D45","C4A","C4A.0","C4A.1","C4A.2","C4A.3","C4A.4","C4A.5","C4A.6","C4A.7","C4A.8","C4A.9","C94.1"]
hemat_malig = ["C46.3","C81","C81.0","C81.00","C81.01","C81.02","C81.03","C81.04","C81.05","C81.06","C81.07","C81.08","C81.09","C81.1","C81.10","C81.11","C81.12","C81.13","C81.14","C81.15","C81.16","C81.17","C81.18","C81.19","C81.2","C81.20","C81.21","C81.22","C81.23","C81.24","C81.25","C81.26","C81.27","C81.28","C81.29","C81.3","C81.30","C81.31","C81.32","C81.33","C81.34","C81.35","C81.36","C81.37","C81.38","C81.39","C81.40","C81.41","C81.42","C81.43","C81.44","C81.45","C81.46","C81.47","C81.48","C81.49","C81.7","C81.70","C81.71","C81.72","C81.73","C81.74","C81.75","C81.76","C81.77","C81.78","C81.79","C81.9","C81.90","C81.91","C81.92","C81.93","C81.94","C81.95","C81.96","C81.97","C81.98","C81.99","C82","C82.0","C82.00","C82.01","C82.02","C82.03","C82.04","C82.05","C82.06","C82.07","C82.08","C82.09","C82.1","C82.10","C82.11","C82.12","C82.13","C82.14","C82.15","C82.16","C82.17","C82.18","C82.19","C82.2","C82.20","C82.21","C82.22","C82.23","C82.24","C82.25","C82.26","C82.27","C82.28","C82.29","C82.3","C82.30","C82.31","C82.32","C82.33","C82.34","C82.35","C82.36","C82.37","C82.38","C82.39","C82.4","C82.40","C82.41","C82.42","C82.43","C82.44","C82.45","C82.46","C82.47","C82.48","C82.49","C82.5","C82.50","C82.51","C82.52","C82.53","C82.54","C82.55","C82.56","C82.57","C82.58","C82.59","C82.6","C82.60","C82.61","C82.62","C82.63","C82.64","C82.65","C82.66","C82.67","C82.68","C82.69","C82.8","C82.80","C82.81","C82.82","C82.83","C82.84","C82.85","C82.86","C82.87","C82.88","C82.89","C82.9","C82.90","C82.91","C82.92","C82.93","C82.94","C82.95","C82.96","C82.97","C82.98","C82.99","C83","C83.0","C83.00","C83.01","C83.02","C83.03","C83.04","C83.05","C83.06","C83.07","C83.08","C83.09","C83.1","C83.10","C83.11","C83.12","C83.13","C83.14","C83.15","C83.16","C83.17","C83.18","C83.19","C83.3","C83.30","C83.31","C83.32","C83.33","C83.34","C83.35","C83.36","C83.37","C83.38","C83.39","C83.5","C83.50","C83.51","C83.52","C83.53","C83.54","C83.55","C83.56","C83.57","C83.58","C83.59","C83.7","C83.70","C83.71","C83.72","C83.73","C83.74","C83.75","C83.76","C83.77","C83.78","C83.79","C83.8","C83.80","C83.81","C38.82","C83.83","C83.84","C83.85","C83.86","C83.87","C83.88","C83.89","C83.9","C83.90","C83.91","C83.92","C83.93","C83.94","C83.95","C83.96","C83.97","C83.98","C83.99","C84","C84.0","C84.00","C84.01","C84.02","C84.03","C84.04","C84.05","C84.06","C84.07","C84.08","C84.09","C84.1","C84.10","C84.11","C84.12","C84.13","C84.14","C84.15","C84.16","C84.17","C84.18","C84.19","C84.4","C84.40","C84.41","C84.42","C84.43","C84.44","C84.45","C84.46","C84.47","C84.48","C84.49","C84.6","C84.60","C84.61","C84.62","C84.63","C84.64","C84.65","C84.66","C84.67","C84.68","C84.69","C84.7","C84.70","C84.71","C84.72","C84.73","C84.74","C84.75","C84.76","C84.77","C84.78","C84.79","C84.A","C84.A0","C84.A1","C84.A2","C84.A3","C84.A4","C84.A5","C84.A6","C84.A7","C84.A8","C84.A9","C84.Z","C84.Z0","C84.Z1","C84.Z2","C84.Z3","C84.Z4","C84.Z5","C84.Z6","C84.Z7","C84.Z8","C84.Z9","C84.9","C84.90","C84.91","C84.92","C84.93","C84.94","C84.95","C84.96","C84.97","C84.98","C84.99","C85","C85.1","C85.10","C85.11","C85.12","C85.13","C85.14","C85.15","C85.16","C85.17","C85.18","C85.19","C85.2","C85.20","C85.21","C85.22","C85.23","C85.24","C85.25","C85.26","C85.27","C85.28","C85.29","C85.8","C85.80","C85.81","C85.82","C85.83","C85.84","C85.85","C85.86","C85.87","C85.88","C85.89","C85.9","C85.90","C85.91","C85.92","C85.93","C85.94","C85.95","C85.96","C85.97","C85.98","C85.99","C86","C86.0","C86.1","C86.2","C86.3","C86.4","C86.5","C86.6","C88","C88.0","C88.2","C88.3","C88.4","C88.8","C88.9","C90","C90.0","C90.00","C90.01","C90.02","C90.1","C90.10","C90.11","C90.12","C90.2","C90.20","C90.21","C90.22","C90.3","C90.30","C90.31","C90.32","C91","C91.0","C91.00","C91.01","C91.02","C91.1","C91.10","C91.11","C91.12","C91.3","C91.30","C91.31","C91.32","C91.4","C91.40","C91.41","C91.42","C91.5","C91.50","C91.51","C91.52","C91.6","C91.60","C91.61","C91.62","C91.A","C91.A0","C91.A1","C91.A2","C91.Z","C91.Z0","C91.Z1","C91.Z2","C91.9","C91.90","C91.91","C91.92","C92","C92.0","C92.00","C92.01","C92.02","C92.1","C92.10","C92.11","C92.12","C92.2","C92.20","C92.21","C92.22","C92.3","C92.30","C92.31","C92.32","C92.4","C92.40","C92.41","C92.42","C92.5","C92.50","C92.51","C92.52","C92.6","C92.60","C92.61","C92.62","C92.A","C92.A0","C92.A1","C92.A2","C92.Z","C92.Z0","C92.Z1","C92.Z2","C92.9","C92.90","C92.91","C92.92","C93","C93.0","C93.00","C93.01","C93.02","C93.1","C93.10","C93.11","C93.12","C93.3","C93.30","C93.31","C93.32","C93.Z","C93.Z0","C93.Z1","C93.Z2","C93.9","C93.90","C93.91","C93.92","C94","C94.0","C94.00","C94.01","C94.02","C94.2","C94.20","C94.21","C94.22","C94.3","C94.30","C94.31","C94.32","C94.4","C94.40","C94.41","C94.42","C94.6","C94.8","C94.80","C94.81","C94.82","C95","C95.0","C95.00","C95.01","C95.02","C95.1","C95.10","C95.11","C95.12","C95.9","C95.90","C95.91","C95.92","C96","C96.0","C96.2","C96.20","C96.21","C96.22","C96.29","C96.4","C96.5","C96.6","C96.A","C96.Z","C96.9","D45"]

hiv = ["B20","B97.35","Z21","O98.7","O98.71","O98.72","O98.73"]

tb = ["A15","A15.0","A15.4","A15.5","A15.6","A15.7","A15.8","A15.9","A16","A16.0","A16.1","A16.2","A16.3","A16.4","A16.5","A16.7","A16.8","A16.9","A17","A17.0","A17.1","A17.8","A17.81","A17.82","A17.83","A17.89","A17.9","A18","A18.0","A18.01","A18.02","A18.03","A18.09","A18.1","A18.10","A18.11","A18.12","A18.13","A18.14","A18.15","A18.16","A18.17","A18.18","A18.2","A18.3","A18.31","A18.32","A18.39","A18.4","A18.5","A18.50","A18.51","A18.52","A18.53","A18.54","A18.59","A18.6","A18.7","A18.8","A18.81","A18.82","A18.83","A18.84","A18.85","A18.89","A19","A19.0","A19.1","A19.2","A19.8","A19.9","J65","P37.0","O98.01","O98.02","O98.03"]

obes = ["E66.0","E66.01","E66.09","E66.1","E66.2","E66.8","E66.9","Z68.30","Z68.31","Z68.32","Z68.33","Z68.34","Z68.35","Z68.36","Z68.37","Z68.38","Z68.39","Z68.4","Z68.41","Z68.43","Z68.44","Z68.45","Z68.54"]
nonsevobes = ["Z68.30","Z68.31","Z68.32","Z68.33","Z68.34","Z68.35","Z68.36","Z68.37","Z68.38","Z68.39"]
sevobes = ["E66.01","E66.2","Z68.4","Z68.41","Z68.43","Z68.44","Z68.45","Z68.54"]

smoker = ["F17","F17.2","F17.20","F17.200","F17.201","F17.203","F17.208","F17.209","F17.21","F17.210","F17.211","F17.213","F17.218","F17.219","Z72.0","Z87.891"]

immudx = ["D80","D80.0","D80.1","D80.2","D80.3","D80.4","D80.5","D80.6","D80.7","D80.8","D80.9","D81","D81.0","D81.1","D81.2","D81.3","D81.30","D81.31","D81.32","D81.39","D81.4","D81.5","D81.6","D81.7","D81.8","D81.81","D81.810","D81.818","D81.819","D81.89","D81.9","D82","D82.0","D82.1","D82.2","D82.3","D82.4","D82.8","D82.9","D83","D83.0","D83.1","D83.2","D83.8","D83.9","D84.0","D84.1","D89.0","D89.1","D89.2","D89.3","D89.82","D89.83","D89.831","D89.832","D89.833","D89.834","D89.835","D89.839","D89.89","D89.9","D70.0","D70.1","D70.2","D70.3","D70.4","D70.8","D70.9","D71","D61.81","D70","D72.0","D72.81","D75.81","D75.89","D75.9","D89","Z85","Z94","Z94.0","Z94.1","Z94.2","Z94.3","Z94.4","Z94.7","Z94.8","Z94.81","Z94.82","Z94.83","Z94.89","Z94.9","T86.1","T86.10","T86.11","T86.12","T86.13","T86.19","T86.2","T86.20","T86.21","T86.22","T86.23","T86.29","T86.290","T86.298","T86.3","T86.30","T86.31","T86.32","T86.33","T86.39","T86.4","T86.40","T86.41","T86.42","T86.43","T86.49","T86.8","T86.81","T86.810","T86.811","T86.812","T86.818","T86.819","T86.85","T86.850","T86.851","T86.852","T86.858","T86.859","T86.890","T86.891","T86.892","T86.898","T86.899","D47.Z1","Z48.2","Z94","Z94.0","Z94.1","Z94.2","Z94.3","Z94.4","Z94.6","Z94.8","Z94.82","Z94.83","Z94.89","Z94.9","Z98.85","238.77","996.81","996.82","996.83","996.84","996.87","V42.0","V42.1","V42.4","V42.6","V42.7","V42.83","V42.84","V42.89","V45.87","Z94.84","M31.11","38230","38214","D64.81","D61.810","D61.811","D61.818","D61.82","D61.89","D61.9","D84.8","D84.81","D84.82","D84.821","D84.822","D84.89","D84.9","D89.8","D89.81","D89.810","D89.811","D89.812","D89.813","D89.84"]
orgtransp = ["Z94","Z94.0","Z94.1","Z94.2","Z94.3","Z94.4","Z94.7","Z94.8","Z94.82","Z94.83","Z94.84","Z94.89","Z94.9","T86.1","T86.10","T86.11","T86.12","T86.13","T86.19","T86.2","T86.20","T86.21","T86.22","T86.23","T86.29","T86.290","T86.298","T86.3","T86.30","T86.31","T86.32","T86.33","T86.39","T86.4","T86.40","T86.41","T86.42","T86.43","T86.49","T86.8","T86.81","T86.810","T86.811","T86.812","T86.818","T86.819","T86.85","T86.850","T86.851","T86.852","T86.858","T86.859","T86.890","T86.891","T86.892","T86.898","T86.899","D47.Z1","Z48.2","Z94","Z94.0","Z94.1","Z94.2","Z94.3","Z94.4","Z94.6","Z94.8","Z94.82","Z94.83","Z94.89","Z94.9","Z98.85","238.77","996.81","996.82","996.83","996.84","996.87","V42.0","V42.1","V42.4","V42.6","V42.7","V42.83","V42.84","V42.89","V45.87"]
stemtransp = ["Z94.84","Z94.81","M31.11","38230","38214"]
primimm = ["D80","D80.0","D80.1","D80.2","D80.3","D80.4","D80.5","D80.6","D80.7","D80.8","D80.9","D81","D81.0","D81.1","D81.2","D81.3","D81.30","D81.31","D81.32","D81.39","D81.4","D81.5","D81.6","D81.7","D81.8","D81.81","D81.810","D81.818","D81.819","D81.89","D81.9","D82","D82.0","D82.1","D82.2","D82.3","D82.4","D82.8","D82.9","D83","D83.0","D83.1","D83.2","D83.8","D83.9","D84.0","D84.1"]

immurx = ["J3357","C9487","J3358","Q9989","C9261","C9029","J1628","J2323","Q4079","C9126","S0162","C9473","J2182","C9466","J0517","A9543","A9523","C1083","C1082","A9522","S8002","A9542","C9021","J9301","C9028","J9229","C9239","J9330","J7525","J7507","J7503","J7508","80197","C9006","C9106","J7520","C9020","80195","C9239","J9330","K0412","J7517","J7505","J8610","J9260","J9250","80204","S0108","J7527","J8561","80169","C9436","J7501","K0120","K0119","J7500","J0480","Q2019","J7516","K0122","J7515","C9438","J7502","80158","J7513","C9050","J9210","C9494","J2350","C9260","J9302","J2793","J9310","J9312","C9467","J9311","Q5119","Q5123","Q5115","M0250","M0249","Q0249","C9264","J3262","J0717","C9249","J0718","S0172","C9236","J1300","J1438","J1602","80193","C9230","J0129","J0135","80145","C9110","S0087","J9010","Q9979","J0202","C9286","J0485","J0490","Q2044","J0638","Z79.52","Z92.21","Z92.241","Z92.25","Z92.85","Z92.850","Z92.858","Z92.859","Z92.86"]

sterrx = ["Z79.52","Z92.21","Z92.241","Z92.25","Z92.85","Z92.850","Z92.858","Z92.859","Z92.86"]

vacc = ["207","208","210","211","212","213","217","218","219","221","225","226","227","228","229","230","300","301","302","308","309","310","311","312","313","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","2468235","2470234","2479835","2583743","2593847","2598700","2606078","2691172","2691181","2691189","2691196","2691200","2691212","2691219","59267007801","59267007804","59267100001","59267100002","59267100003","59267102501","59267102502","59267102503","59267102504","59267105501","59267105502","59267105504","59676058005","59676058015","80777027310","80777027315","80777027398","80777027399","91300","91301","91302","91303","91304","91305","91306","91307"]

#oldvax = ["2468235",  "2468230",  "2470234",  "2468231",  "2610319",  "2610328",  "2470232",  "2468234",  "2646112",  "2479835",  "2664841",  "2610321",  "2470233",  "2664811",  "2664817",  "2664846",  "2664837",  "2593847",  "2647726",  "2598700",  "2664822",  "2664819", "2610326",  "2610347",  "2606078",  "2583743",  "2610243",  "2603833",  "2468233",  "2479830",  "2664832",  "2664813",  "2479831",  "2621900",  "2606073",  "2666309",  "2688626",  "2659646",  "2664825",  "2647043",  "2664729",  "2606074",  "2660964",  "2660462", "2662539",  "2646219",  "2664725",  "2659610",  "2647414",  "2647501",  "2691168",  "2691192",  "2692307",  "2692308",  "2610324",  "2664738",  "2468232",  "2479833",  "2479834",  "2479832",  "2583742",  "2623376",  "2598699",  "2603832",  "2623380",  "2621899", "2666311",  "2666312",  "2655368",  "2656263",  "2662277",  "2648878",  "2601552",  "2623378",  "2691184",  "2691199",  "2692305",  "2692306",  "2664728",  "2664831",  "2593846",  "2601551",  "2601549",  "2593844",  "2606075",  "2606076",  "2606077",  "2666310", "2666313",  "2623382",  "2664829",  "2691217",  "2691187",  "2691170",  "2691171",  "2691194",  "2691195",  "2691204",  "2664801",  "2664820",  "2664727",  "2664739",  "2664827",  "2664828",  "2664836",  "2691210",  "2691179",  "2691169",  "2691193",  "2691198",  "2691203",  "2664745",  "2664815",  "2664726",  "2664826",  "2664830",  "2664835",  "2610346",  "2692309",  "2691196",  "2691188",  "2691218",  "2664821",  "2664845",  "2691215",  "2691185",  "2664843",  "2691200",  "2691180",  "2691211",  "2610327",  "2610318", "2664816",  "2664840",  "2623377",  "2623381",  "2621898",  "2691175",  "2691205",  "2691172",  "2691177",  "2691208",  "2664839",  "2691189",  "2691219",  "2691181",  "2691212",  "2610348",  "2664730",  "2664844",  "2692310",  "2664741",  "2664838",  "2691186", "2691201",  "2691216",  "2664833",  "2691173",  "2691206",  "2691190",  "2691220",  "2664823",  "2664847",  "2691182",  "2691213",  "2664818",  "2664842",  "91311",  "61434006101",  "80777010205",  "61434006100",  "00069312510",  "00069312501",  "59267007801", "80631010001",  "807770102",  "807770287",  "80777010297",  "000692362",  "000692392",  "000692377",  "592674315",  "592674331",  "807770283",  "80777028005",  "80777028205",  "61434004301",  "61434004300",  "59676058005",  "80777027705",  "61434004302", "614340043",  "807770100",  "80777010098",  "000692025",  "59267060901",  "80777028299",  "807770280",  "80777028099",  "807770282",  "00310122210",  "59267056501",  "59267030401",  "59267140401",  "00069202510",  "59267100002",  "80777027398",  "59267102501", "59267100001",  "59267100003",  "59267102502",  "59267102503",  "59267102504",  "59267105501",  "59267105502",  "59267105504",  "59676058015",  "80777027310",  "80777027315",  "80777027399",  "80777028399",  "59267075502",  "59267075501",  "80777028302", "80631010210",  "80631010501",  "00069100001",  "80631010201",  "80631010502",  "59267431501",  "59267431502",  "80777028707",  "59267433101",  "80777028792",  "59267433102",  "00069236201",  "00069236210",  "80777010295",  "80777010204",  "80777010296", "00069239210",  "00069237710",  "00069237701",  "00069239201",  "80777010201",  "80777010293",  "80777027505",  "80777027599",  "80777027905",  "80777027999",  "00069202501",  "00069100003",  "00069100002",  "00069202525",  "80777010011",  "80777010015", "80777010099",  "80631010301",  "80631010310",  "208",  "207",  "213", "217", "212",  "229",  "300",  "218",  "312",  "309",  "301", "219",  "211",  "210",  "302",  "230",  "502",  "521",  "511",  "510",  "507",  "500",  "509",  "501",  "503",  "504", "505",  "508",  "506",  "518",  "512",  "515",  "514",  "516",  "513",  "517",  "519",  "520",  "221",  "311",  "308",  "228",  "310",  "313",  "227",  "225",  "226",  "4040599",  "4040047",  "4041214",  "4041461",  "4041381",  "4041380",  "4041210",  "4041132", "4041314",  "4040411",  "4039851",  "4039857",  "4040948",  "4039944",  "0004A",  "0064A",  "91306",  "91305",  "0054A",  "91300",  "0001A",  "0002A",  "91307",  "0071A",  "0072A",  "0051A",  "0052A",  "0053A",  "91301",  "M0201",  "0011A",  "0012A",  "91303", "0031A",  "0003A",  "0013A",  "91308",  "0081A",  "0082A",  "0034A",  "0074A",  "0073A",  "91304",  "91311",  "91302",  "1036672",  "0042A",  "0041A",  "0111A",  "0112A",  "0113A",  "0022A",  "0021A",  "90480",  "91321",  "91322",  "91314",  "91316",  "91318", "91319",  "91320",  "91313",  "1036663",  "1037332",  "1037838",  "91312",  "1036660",  "1037166",  "0134A",  "0144A",  "1036682",  "0164A",  "0173A",  "0174A",  "91317",  "91315",  "1037175",  "1037228",  "1037171",  "0124A",  "1036666",  "0154A",  "91310", "91309",  "0094A",  "0104A",  "0083A",  "0093A",  "0091A",  "0092A" ]


# COMMAND ----------

# DBTITLE 1,Inclusion and Exclusion
#Positive and invalid labs
#By concepcodes identify and include patientts with positive labs while excluding erroneous invalid labs
i=spark.sql("""select conceptid from cdh_truveta.concept where conceptcode in ("1065667","1065692","260373001","720735008","10828004","52101004")""").createOrReplaceTempView("positivelab")

inv=spark.sql("""select conceptid from cdh_truveta.concept where conceptcode in ("1065712","1065714","1065719","1065717")""").createOrReplaceTempView("invalidlab")



# COMMAND ----------

# DBTITLE 1,Create Covid Population from CORE tables
#Covid Population
#Covid population: 
cp=spark.sql("""
  with conid as (select conceptid 
                 from cdh_truveta.concept 
                 where 1=1
                 and conceptcode in (select conceptcode from conceptcodecovid_t) --Generate Covid pop. using Diagnosis, Lab and Med. Exclude Med only
                 ),

         

   cond as (select personid,encounterid, recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

    medreq as (select personid,encounterid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,encounterid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid,"" as encounterid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,encounterid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,encounterid, recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid,encounterid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

                --Identify and union all patients found in core tables and select encounterid which will be used to 
                --join to encounter table in order to identify details of each patients encounter including start 
                --and end datetime,admission status(out,inp,ed) discharge status etc
                select distinct encounterid, 1 as covid
                from(select personid,encounterid,dt from cond union
                     select personid,encounterid,dt from medreq union --no inpact
                     select personid,encounterid,dt from medadm union  --no inpact
                     select personid,encounterid,dt from meddisp union  --no inpact
                     select personid,encounterid,dt from lab union
                     select personid,encounterid,dt from obs union
                     select personid,encounterid,dt from proc --no inpact
                 ) where encounterid is not null
           
""")
#cp.write.mode("overwrite").saveAsTable("cdh_truveta_exploratory.tog0_truveta_lavacovid")
#covid=1 are patients and thier encounters associated with covid diagnosis or covid positive labs

# COMMAND ----------

# MAGIC %md
# MAGIC #Conditions tables

# COMMAND ----------

# DBTITLE 1,CMC 1: Chronic Heart Disease All
heartc = spark.createDataFrame(heart,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("heart_T")

heart=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from heart_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'heart' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("heart")


# COMMAND ----------

# DBTITLE 1,CMC 1: Chronic Heart Diseases - coronary artery disease
cadc = spark.createDataFrame(cad,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("cad_T")

cadis=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from cad_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'cad' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("cad")


# COMMAND ----------

# DBTITLE 1,CMC 1: Chronic Heart Diseases - chronic heart failure
chfc = spark.createDataFrame(chf,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("chf_T")

chfail=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from chf_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'chf' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("chf")


# COMMAND ----------

# DBTITLE 1,CMC 1: Chronic Heart Diseases - cardiomyopathy
cardiomyc = spark.createDataFrame(cardiomy,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("cardiomy_T")

cardiomy=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from cardiomy_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'cardiomy' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("cardiomy")


# COMMAND ----------

lungc = spark.createDataFrame(clung,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("lung_T")

lung=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from lung_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'lung' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("lung")


# COMMAND ----------

# DBTITLE 1,CMC 2: Chronic Lung Diseases - asthma
asthmac = spark.createDataFrame(asthma,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("asthma_T")

asth=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from asthma_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'asthma' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("asthma")


# COMMAND ----------

# DBTITLE 1,CMC 2: Chronic Lung Diseases - bronchiectiasis
brectc = spark.createDataFrame(brect,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("brect_T")

brecta=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from brect_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'brect' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("brect")


# COMMAND ----------

# DBTITLE 1,CMC 2: Chronic Lung Diseases - copd
copdc = spark.createDataFrame(copd,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("copd_T")

copdis=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from copd_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'copd' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("copd")


# COMMAND ----------

# DBTITLE 1,CMC 2 Chronic Lung Diseases  - ILD
ildc = spark.createDataFrame(ild,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("ild_T")

ild=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from ild_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'ild' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("ild")


# COMMAND ----------

# DBTITLE 1,CMC 2 Chronic Lung Diseases - Pulm Emb
pulmembc = spark.createDataFrame(pulmemb,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("pulmemb_T")

pulmemb=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from pulmemb_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'pulmemb' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("pulmemb")


# COMMAND ----------

# DBTITLE 1,CMC 2 Chronic Lung Diseases - Pulmonary Hypertension
pulmhypc = spark.createDataFrame(pulmhtn,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("pulmhyp_T")

pulmhyp=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from pulmhyp_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'pulmhtn' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("pulmhyp")


# COMMAND ----------

# DBTITLE 1,CMC 3 Chronic Kidney Disease
ckdc = spark.createDataFrame(ckd,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("ckd_T")

ckd=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from ckd_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'ckd' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("ckd")


# COMMAND ----------

# DBTITLE 1,CMC 4: Chronic Liver Disease
clivc = spark.createDataFrame(cliv,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("cliv_T")

cliv=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from cliv_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'cliv' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("cliv")


# COMMAND ----------

# DBTITLE 1,CMC 4 Chronic Liver Diseases - cirrhosis
cirrhc = spark.createDataFrame(cirrh,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("cirrh_T")

cirrh=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from cirrh_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'cirrh' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("cirrh")


# COMMAND ----------

# DBTITLE 1,CMC 4 Chronic Liver Diseases - nonalcoholic fatty liver
nafldc = spark.createDataFrame(nafld,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("nafld_T")

nafld=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from nafld_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'nafld' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("nafld")


# COMMAND ----------

# DBTITLE 1,CMC 4 Chronic Liver Diseases - alcohol liver disease
alc_ldc = spark.createDataFrame(alc_ld,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("alc_ld_T")

alc_ld=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from alc_ld_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'alc_ld' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("alc_ld")


# COMMAND ----------

# DBTITLE 1,CMC 4 Chronic Liver Diseases - autoimmune hepatitis
autoi_hepc = spark.createDataFrame(autoi_hep,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("autoi_hep_T")

autoi_hep=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from autoi_hep_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'autoi_hep' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("autoi_hep")


# COMMAND ----------

# DBTITLE 1,CMC 5 Stroke
strokec = spark.createDataFrame(stroke,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("stroke_T")

stroke=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from stroke_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'stroke' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("stroke")


# COMMAND ----------

# DBTITLE 1,CMC 6 Neuro Disease - All
neuro_allc = spark.createDataFrame(neuro_all,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("neuro_all_T")

neuro_all=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from neuro_all_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'neuro_all' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("neuro_all")


# COMMAND ----------

# DBTITLE 1,CMC 6 Neurologic Disease - cystic fibrosis
cfc = spark.createDataFrame(cf,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("cf_T")

cf = spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from cf_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'cf' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("cf")


# COMMAND ----------

# DBTITLE 1,CMC 6 Neurologic Disease - dementia
cdemen = spark.createDataFrame(demen,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("dementia_T")


demen=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from dementia_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'demen' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("dementia")


# COMMAND ----------

# DBTITLE 1,CMC 6 Neurologic Disease - parkinsons
cparkins = spark.createDataFrame(parkin,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("parkins_T")

parkins=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from parkins_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'parkins' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("parkins")


# COMMAND ----------

# DBTITLE 1,CMC 7 Diabetes
cdiab = spark.createDataFrame(dm,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("diab_T")


diab=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from diab_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'dm' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("diab")


# COMMAND ----------

# DBTITLE 1,CMC 8 Disability
cdisab = spark.createDataFrame(can,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("disab_T")

disab=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from disab_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'disab' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("disab")


# COMMAND ----------

# DBTITLE 1,CMC 9 Cancer
ccanc = spark.createDataFrame(can,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("canc_T")

canc=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from canc_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'canc' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("canc")


# COMMAND ----------

chemat_malig = spark.createDataFrame(hemat_malig,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("hemat_malig_T")

hemat_malig=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from hemat_malig_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'hematmal' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("hemat_malig")


# COMMAND ----------

# DBTITLE 1,CMC 10 HIV
chiv = spark.createDataFrame(hiv,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("hiv_T")


hiv=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from hiv_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'hiv' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("hiv")


# COMMAND ----------

# DBTITLE 1,CMC 11 TB
ctb = spark.createDataFrame(tb,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("tb_T")

tb=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from tb_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'tb' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("tb")


# COMMAND ----------


cobes = spark.createDataFrame(obes,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("obes_T")


obes=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from obes_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'obes' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("obes")


# COMMAND ----------

# DBTITLE 1,CMC 12 Nonsevere Obesity

cnsobes = spark.createDataFrame(nonsevobes,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("nsobes_T")


nsobes=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from nsobes_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'nsobes' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("nsobes")


# COMMAND ----------

# DBTITLE 1,CMC 12 Severe Obesity

csevobes = spark.createDataFrame(sevobes,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("sevobes_T")

sevobes=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from sevobes_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'sevobes' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("sevobes")


# COMMAND ----------

# DBTITLE 1,CMC 13 Smoking

csmoker = spark.createDataFrame(smoker,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("smoker_T")

smoker=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from smoker_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'smoker' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("smoker")


# COMMAND ----------

# DBTITLE 1,CMC 14 Immunosuppressive Conditions All

cimmudx = spark.createDataFrame(immudx,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("immudx_T")

immudx=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from immudx_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'immudx' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("immudx")


# COMMAND ----------

# DBTITLE 1,CMC 14 Immunosuppressive Condition - solid organ transplant

corgtransp = spark.createDataFrame(orgtransp,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("orgtransp_T")

orgtransp=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from orgtransp_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'orgtransp' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("orgtransp")


# COMMAND ----------


cstemtransp = spark.createDataFrame(stemtransp,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("stemtransp_T")

stemtransp=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from stemtransp_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'stemtransp' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("stemtransp")


# COMMAND ----------


cprimimm = spark.createDataFrame(primimm,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("primimm_T")

primimm=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from primimm_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'primimm' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("primimm")


# COMMAND ----------

# DBTITLE 1,CMC 15  Immunosupressive Medications and Corticosteroids

cimmurx = spark.createDataFrame(immurx,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("immurx_T")

immurx=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from immurx_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'immurx' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("immurx")


# COMMAND ----------


csterrx = spark.createDataFrame(sterrx,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("sterrx_T")

sterrx=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from sterrx_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'sterrx' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("sterrx")


# COMMAND ----------

# DBTITLE 1,CMC Vaccination Status

cvax = spark.createDataFrame(vacc,col).withColumn('tp', F.lit('uni')).createOrReplaceTempView("vax_T")

vax=spark.sql("""
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('NDC','CPT','CVX','RxNorm','ICD10CM','ICD9') 
and conceptcode in (select conceptcode from vax_T)
  
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'vax' as umc, 'uni' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union
                     select personid,dt from medadm union  
                     select personid,dt from meddisp union  
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc 
                 ) where dt is not null

""").createOrReplaceTempView("vax")


# COMMAND ----------

# DBTITLE 1,All underlying conditions
c_chars=spark.sql("""
select * from heart union
select * from cad union
select * from chf union
select * from cardiomy union
select * from lung union
select * from asthma union
select * from brect union
select * from copd union
select * from ild union
select * from pulmemb union
select * from pulmhyp union
select * from ckd union
select * from cliv union
select * from cirrh union
select * from nafld union
select * from alc_ld union
select * from autoi_hep union
select * from cf union
select * from dementia union
select * from parkins union
select * from diab union
select * from disab union
select * from canc union
select * from hiv union
select * from tb union
select * from obes union
select * from nsobes union
select * from sevobes union
select * from smoker union
select * from immudx union
select * from orgtransp union
select * from stemtransp union
select * from primimm union
select * from immurx union
select * from sterrx union
select * from vax


""").write.mode("overwrite").saveAsTable("cdh_truveta_exploratory.ak21_truveta_MMWR_rx_cmc")

# COMMAND ----------

# MAGIC %sql
# MAGIC SELECT * from cdh_truveta_exploratory.ak21_truveta_MMWR_rx_cmc
# MAGIC order by umc

# COMMAND ----------

# MAGIC %sql
# MAGIC drop table if exists cdh_truveta_exploratory.ak21_truveta_MMWR_rx_clud

# COMMAND ----------

# MAGIC %sql
# MAGIC drop table if exists cdh_truveta_exploratory.ak21_truveta_MMWR_rx_chars

# COMMAND ----------

# MAGIC %sql
# MAGIC --drop table if exists cdh_truveta_exploratory.ak21_truveta_covid_targetpop
# MAGIC drop table if exists cdh_truveta_exploratory.ak21_truveta_covidtrtmntpop

# COMMAND ----------

# MAGIC %sql
# MAGIC drop table if exists cdh_truveta_exploratory.ak21_truveta_MMWR_rx_gen_pop
