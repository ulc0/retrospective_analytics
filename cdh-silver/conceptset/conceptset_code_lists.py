# Databricks notebook source
# MAGIC %md
# MAGIC ### **Purpose**
# MAGIC The objective of this notebook is add records to the feature table from a dictionary of lists. 
# MAGIC
# MAGIC This notebook takes 3 parameters.

# COMMAND ----------

dbutils.widgets.text("CATALOG",defaultValue="edav_prd_cdh")
CATALOG=dbutils.widgets.get("CATALOG")
dbutils.widgets.text("SRC_CATALOG",defaultValue="edav_prd_cdh")
SRC_CATALOG=dbutils.widgets.get("SRC_CATALOG")
dbutils.widgets.text('SRC_SCHEMA',defaultValue='edav_prd_cdh.cdh_sandbox')
SRC_SCHEMA=dbutils.widgets.get('SRC_SCHEMA')

dbutils.widgets.text('SCHEMA',defaultValue='edav_prd_cdh.cdh_sandbox')
SCHEMA=dbutils.widgets.get('SCHEMA')
FEATURE='feature_name'

# COMMAND ----------

## lifted wholesale from https://github.com/StefanoTrv/simple_icd_10/blob/master/package-files/simple_icd_10/simple_icd_10.py
def _add_dot_to_code(code):
    if len(code)<4 or code[3]==".":
        return code
    elif code[:3]+"."+code[3:] in code_to_node:
        return code[:3]+"."+code[3:]
    else:
        return code


featurePrimitiveDict={
    

"ICD_MHCONDS":['F41.1', 'F43.23', 'F33.1', 'F43.22', 'F43.20', 'F41.9', 
                         'F43.10', 'F43.21', 'F32.12', 'Z63.0', 'F33.0', 'F90.2', 
                         'F32.1', 'F34.1', 'F90.0', 'F33.2', 'F32.0', 'F43.25', 'F41.0', 'F84.0',] ,

"ICD_COVID-VIS" : [
        "U07.1",
        "B97.29",
   ],
"ICD_COVID-DIAG" :[
        "U071",
        "U072",
        "U099",
        "B342",
        "B9721",
        "B9729",
        "J1281",
        "J1282",
        "M3581",
        "Z8616",
        "B948",
        "B949"   
    
],
"HCPCS_COVID-VIS" :  [
        #unchanged from HV
        "Q0240",
        "Q0243",
        "Q0244",
        "M0240",
        "M0241",
        "M0243",
        "M0244",
        "Q0245",
        "M0245",
        "M0246",
        "Q0247",
        "M0247",
        "M0248",
        "Q0222",
        "M0222",
        "M0223",
        "J0248"
    ],
# Hypertension
"ICD_HYPERTENSION": ['I10', 'I110', 'I119', 'I12', 'I120', 'I129', 'I13', 'I130', 'I131', 'I1310', 'I1311', 'I132', 'I15', 'I150', 'I151', 'I152', 'I158','I159', 'I16', 'I160', 'I161', 'I169'] ,

# upper respiratory track infection

"ICD_UPPER-RESPIRATORY-TRACT-INFECTION" : ['J069'],

# diabetes codes 

"ICD_DIABETES-MELLITUS" : [ 'E109','E119','E1010','E1101',
'2501','2500','E0800', 'E0801', 'E0810', 'E0811', 'E0821', 'E0822',
 'E0829', 'E08311',    'E08319','E083211', 'E083212', 'E083213', 'E083219', 
 'E083291', 'E083292', 'E083293', 'E083299', 'E083311', 'E083312', 'E083313',
     'E083319', 'E083391', 'E083392', 'E083393', 'E083399', 'E083411', 'E083412', 'E083413', 'E083419', 
     'E083491', 'E083492', 'E083493','E083499','E083511','E083512','E083513','E083519','E083521','E083522',
     'E083523','E083529','E083531','E083532','E083533','E083539','E083541','E083542','E083543','E083549',
     'E083551','E083552','E083553','E083559','E083591','E083592','E083593','E083599','E0836','E0837X1',
     'E0837X2','E0837X3','E0837X9','E0839','E0840','E0841','E0842','E0843','E0844','E0849','E0851','E0852',
     'E0859','E08610','E08618','E08620','E08621','E08622','E08628','E08630','E08638','E08641','E08649',
     'E0865','E0869','E088','E089','E0900','E0901','E0910','E0911','E0921','E0922','E0929','E09311',
     'E09319','E093211','E093212','E093213','E093219','E093291','E093292','E093293','E093299','E093311',
     'E093312','E093313','E093319','E093391','E093392','E093393','E093399','E093411','E093412','E093413',
     'E093419','E093491','E093492','E093493','E093499','E093511','E093512','E093513','E093519','E093521',
     'E093522','E093523','E093529','E093531','E093532','E093533','E093539','E093541','E093542','E093543',
     'E093549','E093551','E093552','E093553','E093559','E093591','E093592','E093593','E093599','E0936',
     'E0937X1','E0937X2','E0937X3','E0937X9','E0939','E0940','E0941','E0942','E0943','E0944','E0949',
     'E0951','E0952','E0959','E09610','E09618','E09620','E09621','E09622','E09628','E09630','E09638',
     'E09641','E09649','E0965','E0969','E098','E099','E1010','E1011','E1021','E1022','E1029','E10311',
     'E10319','E103211','E103212','E103213','E103219','E103291','E103292','E103293','E103299','E103311',
     'E103312','E103313','E103319','E103391','E103392','E103393','E103399','E103411','E103412','E103413',
     'E103419','E103491','E103492','E103493','E103499','E103511','E103512','E103513','E103519','E103521',
     'E103522','E103523','E103529','E103531','E103532','E103533','E103539','E103541','E103542','E103543',
     'E103549','E103551','E103552','E103553','E103559','E103591','E103592','E103593','E103599','E1036',
     'E1037X1','E1037X2','E1037X3','E1037X9','E1039','E1040','E1041','E1042','E1043','E1044','E1049','E1051'
     ,'E1052','E1059','E10610','E10618','E10620','E10621','E10622','E10628','E10630','E10638','E10641','E10649',
     'E1065','E1069','E108','E109','E1100','E1101','E1110','E1111','E1121','E1122','E1129','E11311','E11319',
     'E113211','E113212','E113213','E113219','E113291','E113292','E113293','E113299','E113311','E113312','E113313',
     'E113319','E113391','E113392','E113393','E113399','E113411','E113412','E113413','E113419','E113491','E113492',
     'E113493','E113499','E113511','E113512','E113513','E113519','E113521','E113522','E113523','E113529','E113531',
     'E113532','E113533','E113539','E113541','E113542','E113543','E113549','E113551','E113552','E113553','E113559',
     'E113591','E113592','E113593','E113599','E1136','E1137X1','E1137X2','E1137X3','E1137X9','E1139','E1140','E1141',
     'E1142','E1143','E1144','E1149','E1151','E1152','E1159','E11610','E11618','E11620','E11621','E11622','E11628',
     'E11630','E11638','E11641','E11649','E1165','E1169','E118','E119','E1300','E1301','E1310','E1311','E1321',
     'E1322','E1329','E13311','E13319','E133211','E133212','E133213','E133219','E133291','E133292','E133293',
     'E133299','E133311','E133312','E133313','E133319','E133391','E133392','E133393','E133399','E133411',
     'E133412','E133413','E133419','E133491','E133492','E133493','E133499','E133511','E133512','E133513',
     'E133519','E133521','E133522','E133523','E133529','E133531','E133532','E133533','E133539','E133541',
     'E133542','E133543','E133549','E133551','E133552','E133553','E133559','E133591','E133592','E133593',
     'E133599','E1336','E1337X1','E1337X2','E1337X3','E1337X9','E1339','E1340','E1341','E1342','E1343',
     'E1344','E1349','E1351','E1352','E1359','E13610','E13618','E13620','E13621','E13622','E13628','E13630',
     'E13638','E13641','E13649','E1365','E1369','E138','E139','O240','O2401','O24011','O24012','O24013','O24019',
     'O2402','O2403','O241','O2411','O24111','O24112','O24113','O24119','O2412','O2413','O243','O2431',
     'O24311','O24312','O24313','O24319','O2432','O2433','O248','O2481','O24811','O24812','O24813','O24819',
     'O2482','O2483','O249','O2491','O24911','O24912','O24913','O24919','O2492','O2493',
     '24900', '24901', '24910', '24911', '24920', '24921', '24930', '24931', '24940', '24941', '24950',
      '24951', '24960', '24961', '24970', '24971', '24980', '24981', '24990', '24991', '25000', '25001', '25002', '25003',
       '25010', '25011', '25012', '25013', '25020', '25021', '25022', '25023', '25030', '25031', '25032', '25033', '25040',
        '25041', '25042', '25043', '25050', '25051', '25052', '25053', '25060', '25061', '25062', '25063', '25070', '25071',
         '25072', '25073', '25080', '25081', '25082', '25083', '25090', '25091', '25092', '25093', '2535', '3572', '5881', 
         '64800', '64801', '64802', '64803', '64804', '7751', 'E08', 'E080', 'E0800', 'E0801', 'E081', 'E0810', 'E0811', 'E082',
          'E0821', 'E0822', 'E0829', 'E083', 'E0831', 'E08311', 'E08319', 'E0832', 'E08321', 'E083211', 'E083212', 'E083213', 'E083219',
           'E08329', 'E083291', 'E083292', 'E083293', 'E083299', 'E0833', 'E08331', 'E083311', 'E083312', 'E083313', 'E083319', 'E08339',
            'E083391', 'E083392', 'E083393', 'E083399', 'E0834', 'E08341', 'E083411', 'E083412', 'E083413', 'E083419', 'E08349',
             'E083491', 'E083492', 'E083493', 'E083499', 'E0835', 'E08351', 'E083511', 'E083512', 'E083513', 'E083519', 'E08352',
              'E083521', 'E083522', 'E083523', 'E083529', 'E08353', 'E083531', 'E083532', 'E083533', 'E083539', 'E08354', 
              'E083541', 'E083542', 'E083543', 'E083549', 'E08355', 'E083551', 'E083552', 'E083553', 'E083559', 'E08359', 
              'E083591', 'E083592', 'E083593', 'E083599', 'E0836', 'E0837', 'E0837X1', 'E0837X2', 'E0837X3', 'E0837X9', 
              'E0839', 'E084', 'E0840', 'E0841', 'E0842', 'E0843', 'E0844', 'E0849', 'E085', 'E0851', 'E0852', 'E0859', 
              'E086', 'E0861', 'E08610', 'E08618', 'E0862', 'E08620', 'E08621', 'E08622', 'E08628', 'E0863', 'E08630',
               'E08638', 'E0864', 'E08641', 'E08649', 'E0865', 'E0869', 'E088', 'E089', 'E09', 'E090', 'E0900', 'E0901',
                'E091', 'E0910', 'E0911', 'E092', 'E0921', 'E0922', 'E0929', 'E093', 'E0931', 'E09311', 'E09319', 'E0932', 
                'E09321', 'E093211', 'E093212', 'E093213', 'E093219', 'E09329', 'E093291', 'E093292', 'E093293', 'E093299',
                 'E0933', 'E09331', 'E093311', 'E093312', 'E093313', 'E093319', 'E09339', 'E093391', 'E093392', 'E093393', 
                 'E093399', 'E0934', 'E09341', 'E093411', 'E093412', 'E093413', 'E093419', 'E09349', 'E093491', 'E093492', 
                 'E093493', 'E093499', 'E0935', 'E09351', 'E093511', 'E093512', 'E093513', 'E093519', 'E09352', 'E093521', 
                 'E093522', 'E093523', 'E093529', 'E09353', 'E093531', 'E093532', 'E093533', 'E093539', 'E09354', 'E093541',
                  'E093542', 'E093543', 'E093549', 'E09355', 'E093551', 'E093552', 'E093553', 'E093559', 'E09359', 'E093591'
                  , 'E093592', 'E093593', 'E093599', 'E0936', 'E0937', 'E0937X1', 'E0937X2', 'E0937X3', 'E0937X9', 'E0939', 
                  'E094', 'E0940', 'E0941', 'E0942', 'E0943', 'E0944', 'E0949', 'E095', 'E0951', 'E0952', 'E0959', 'E096', 
                  'E0961', 'E09610', 'E09618', 'E0962', 'E09620', 'E09621', 'E09622', 'E09628', 'E0963', 'E09630', 'E09638', 
                  'E0964', 'E09641', 'E09649', 'E0965', 'E0969', 'E098', 'E099', 'E10', 'E101', 'E1010', 'E1011', 'E102', 'E1021', 
                  'E1022', 'E1029', 'E103', 'E1031', 'E10311', 'E10319', 'E1032', 'E10321', 'E103211', 'E103212', 'E103213', 'E103219',
                   'E10329', 'E103291', 'E103292', 'E103293', 'E103299', 'E1033', 'E10331', 'E103311', 'E103312', 'E103313', 'E103319', 
                   'E10339', 'E103391', 'E103392', 'E103393', 'E103399', 'E1034', 'E10341', 'E103411', 'E103412', 'E103413', 'E103419', 
                   'E10349', 'E103491', 'E103492', 'E103493', 'E103499', 'E1035', 'E10351', 'E103511', 'E103512', 'E103513', 'E103519', 
                   'E10352', 'E103521', 'E103522', 'E103523', 'E103529', 'E10353', 'E103531', 'E103532', 'E103533', 'E103539', 'E10354',
                    'E103541', 'E103542', 'E103543', 'E103549', 'E10355', 'E103551', 'E103552', 'E103553', 'E103559', 'E10359', 'E103591',
                     'E103592', 'E103593', 'E103599', 'E1036', 'E1037', 'E1037X1', 'E1037X2', 'E1037X3', 'E1037X9', 'E1039', 'E104', 'E1040',
                      'E1041', 'E1042', 'E1043', 'E1044', 'E1049', 'E105', 'E1051', 'E1052', 'E1059', 'E106', 'E1061', 'E10610', 'E10618', 
                      'E1062', 'E10620', 'E10621', 'E10622', 'E10628', 'E1063', 'E10630', 'E10638', 'E1064', 'E10641', 'E10649', 'E1065', 
                      'E1069', 'E108', 'E109', 'E11', 'E110', 'E1100', 'E1101', 'E111', 'E1110', 'E1111', 'E112', 'E1121', 'E1122', 'E1129',
                       'E113', 'E1131', 'E11311', 'E11319', 'E1132', 'E11321', 'E113211', 'E113212', 'E113213', 'E113219', 'E11329', 'E113291',
                        'E113292', 'E113293', 'E113299', 'E1133', 'E11331', 'E113311', 'E113312', 'E113313', 'E113319', 'E11339', 'E113391', 
                        'E113392', 'E113393', 'E113399', 'E1134', 'E11341', 'E113411', 'E113412', 'E113413', 'E113419', 'E11349', 'E113491', 'E113492', 'E113493', 'E113499', 'E1135', 'E11351', 'E113511', 'E113512', 'E113513', 'E113519', 'E11352', 'E113521', 'E113522', 'E113523', 'E113529', 'E11353', 'E113531', 'E113532', 'E113533', 'E113539', 'E11354', 'E113541', 'E113542', 'E113543', 'E113549', 'E11355', 'E113551', 'E113552', 'E113553', 'E113559', 'E11359', 'E113591', 'E113592', 'E113593', 'E113599', 'E1136', 'E1137', 'E1137X1', 'E1137X2', 'E1137X3', 'E1137X9', 'E1139', 'E114', 'E1140', 'E1141', 'E1142', 'E1143', 'E1144', 'E1149', 'E115', 'E1151', 'E1152', 'E1159', 'E116', 'E1161', 'E11610', 'E11618', 'E1162', 'E11620', 'E11621', 'E11622', 'E11628', 'E1163', 'E11630', 'E11638', 'E1164', 'E11641', 'E11649', 'E1165', 'E1169', 'E118', 'E119', 'E13', 'E130', 'E1300', 'E1301', 'E131', 'E1310', 'E1311', 'E132', 'E1321', 'E1322', 'E1329', 'E133', 'E1331', 'E13311', 'E13319', 'E1332', 'E13321', 'E133211', 'E133212', 'E133213', 'E133219', 'E13329', 'E133291', 'E133292', 'E133293', 'E133299', 'E1333', 'E13331', 'E133311', 'E133312', 'E133313', 'E133319', 'E13339', 'E133391', 'E133392', 'E133393', 'E133399', 'E1334', 'E13341', 'E133411', 'E133412', 'E133413', 'E133419', 'E13349', 'E133491', 'E133492', 'E133493', 'E133499', 'E1335', 'E13351', 'E133511', 'E133512', 'E133513', 'E133519', 'E13352', 'E133521', 'E133522', 'E133523', 'E133529', 'E13353', 'E133531', 'E133532', 'E133533', 'E133539', 'E13354', 'E133541', 'E133542', 'E133543', 'E133549', 'E13355', 'E133551', 'E133552', 'E133553', 'E133559', 'E13359', 'E133591', 'E133592', 'E133593', 'E133599', 'E1336', 'E1337', 'E1337X1', 'E1337X2', 'E1337X3', 'E1337X9', 'E1339', 'E134', 'E1340', 'E1341', 'E1342', 'E1343', 'E1344', 'E1349', 'E135', 'E1351', 'E1352', 'E1359', 'E136', 'E1361', 'E13610', 'E13618', 'E1362', 'E13620', 'E13621', 'E13622', 'E13628', 'E1363', 'E13630', 'E13638', 'E1364', 'E13641', 'E13649', 'E1365', 'E1369', 'E138', 'E139', 'E232', 'N251', 'O24', 'O240', 'O2401', 'O24011', 'O24012', 'O24013', 'O24019', 'O2402', 'O2403', 'O241', 'O2411', 'O24111', 'O24112', 'O24113', 'O24119', 'O2412', 'O2413', 'O243', 'O2431', 'O24311', 'O24312', 'O24313', 'O24319', 'O2432', 'O2433', 'O244', 'O2441', 'O24410', 'O24414', 'O24415', 'O24419', 'O2442', 'O24420', 'O24424', 'O24425', 'O24429', 'O2443', 'O24430', 'O24434', 'O24435', 'O24439', 'O248', 'O2481', 'O24811', 'O24812', 'O24813', 'O24819', 'O2482', 'O2483', 'O249', 'O2491', 'O24911', 'O24912', 'O24913', 'O24919', 'O2492', 'O2493', 'P700', 'P702', 'R7303', 'V1221', 'V180', 'V771', 'Z131', 'Z833', 'Z8632',
     ],


"ICD_COVID" : [
        "U07.1",
        "U07.2",
        "U09.9",
        "B34.2",
        "B97.21",
        "B97.29",
        "J12.81",
        "J12.82",
        "M35.81",
        "Z86.16",
        "B94.8",
        "B94.9",   ],
"CPT_COVID" : [        #unchanged from HV
        "Q02.40",
        "Q02.43",
        "Q02.44",
        "M02.40",
        "M02.41",
        "M02.43",
        "M02.44",
        "Q02.45",
        "M02.45",
        "M02.46",
        "Q02.47",
        "M02.47",
        "M02.48",
        "Q02.22",
        "M02.22",
        "M02.23",
        "J02.48",
    ],

"CPT_STI":[   'A510',	'A511',	'A512',	'A5131',	
        'A5132',	'A5139',	'A5141',	
        'A5142',	'A5143',	'A5144',	
        'A5145',	'A5146',	'A5149',	
        'A515',	'A519',	'A5200',	
        'A5201',	'A5202',	'A5203',	
        'A5204',	'A5205',	'A5206',	
        'A5209',	'A5210',	'A5211',	
        'A5212',	'A5213',	'A5214',	
        'A5215',	'A5216',	'A5217',	
        'A5219',	'A522',	'A523',	'A5271',	
        'A5272',	'A5273',	'A5274',	
        'A5275',	'A5276',	'A5277',	
        'A5278',	'A5279',	'A528',	'A529',	'A530',	'A539',
        'A5400',	'A5401',	'A5402',	'A5403',
        'A5409',	'A541',	'A5421',	'A5422',
        'A5423',	'A5424',	'A5429',	'A5440',
        'A5441',	'A5442',	'A5443',	'A5449',	
        'A545',	'A546',	'A5481',	'A5482',	'A5483',	
        'A5484',	'A5485',	'A5489',	'A549',	'A55',	
        'A5600',	'A5601',	'A5602',	'A5609',	'A5611',	
        'A5619',	'A562',	'A563',	'A564',	'A568',	'A57',	'A58',	
        'A5900',	'A5901',	'A5902',	'A5903',	'A5909',	
        'A598',	'A599',	'A6000',	'A6001',	'A6002',	'A6003',	
        'A6004',	'A6009',	'A601',	'A609',	'A630',	'A638',	'A64',	
        'B0081',	'B150',	'B159',	'B160',	'B161',	
        'B162',	'B169',	'B170',	'B1710',	'B1711',	
        'B172',	'B178',	'B179',	'B180',	'B181',	'B182',	
        'B188',	'B189',	'B190',	'B1910',	'B1911',	
        'B1920',	'B1921',	'B199',	'B20',	'B251',	
        'B2681',	'B581',	'K7010',	'K7011',	'Z21',
    "A51", "A510", "A511", "A512", "A513", "A5131", "A5132", "A5139", "A514", "A5141", "A5142", "A5143", "A5144", "A5145", "A5146", "A5149", "A515", "A519", "A52", "A520", "A5200", "A5201", "A5202", "A5203", "A5204", "A5205", "A5206", "A5209", "A521", "A5210", "A5211", "A5212", "A5213", "A5214", "A5215", "A5216", "A5217", "A5219", "A522", "A523", "A527", "A5271", "A5272", "A5273", "A5274", "A5275", "A5276", "A5277", "A5278", "A5279", "A528", "A529", "A53", "A530", "A539", "A54", "A540", "A5400", "A5401", "A5402", "A5403", "A5409", "A541", "A542", "A5421", "A5422", "A5423", "A5424", "A5429", "A543", "A5430", "A5431", "A5432", "A5433", "A5439", "A544", "A5440", "A5440", "A5441", "A5442", "A5443", "A5449", "A545", "A546", "A548", "A5481", "A5482", "A5483", "A5484", "A5485", "A5486", "A5489", "A549", "A55", "A56", "A540", "A5600", "A5601", "A5602", "A5609", "A561", "A5611", "A5619", "A562", "A563", "A564", "A568", "A57", "A58", "A59", "A590", "A5900", "A5901", "A5902", "A5903", "A5909", "A598", "A599", "A60", "A600", "A6000", "A6001", "A6002", "A6003", "A6004", "A6009", "A601", "A609", "A63", "A630", "A638", "A64"],
"NDC_MPOX":["61958070101", "61958070301", "61958070401", "61958070501", "61958200201", "61958200202", "61958200501"],
"NDC_MPOX-VACCINE":["50632000101", "50632000102"],
"ICD_MPOX":["B04", "359811007", "359814004", "59774002", "1003839",
            "1004340", "05900", "059", "414015000",  "B0869", "B0860" ,
           "59010"],
"HCPCS_MPOX":["90611"],
"ICD_HIVEXPOSURE":["Z206"],
"ICD_STDEXPOSURE":["Z202"],
"ICD_STDSCREENING":["Z113"],
"ICD_HIVSCREENING":["Z114"],
"ICD_OTHERVIRUSSCREENING":["Z1159"],
"NDC_COVID" : [ 
    #not used in Premier
    "61755004202",
    "61755004502",
    "61755003502",
    "61755003608",
    "61755003705",
    "61755003805",
    "61755003901",
    "61755002501",
    "61755002701",
    "00002791001",
    "00002795001",
    "00002791001",
    "00002795001",
    "00173090186",
    "00002758901",
    "00069108530",
    "00069108506",
    "00006505506",
    "00006505507",
    "61958290202",
    "61968290101",
],
"LOINC_COVIDTEST":[
'101289-7',
'94306-8',
'94309-2',
'94500-6',
'94531-1',
'94565-9',
'94660-8',
'94745-7',
'94746-5',
'94759-8',
'94819-0',
'94822-4',
'94845-5',
'95406-5',
'95424-8',
'95608-6',
'95826-4',
'96797-6',
'96829-7',
'96897-4',
],

"HCPCS_MPOX" : [ # for visit and vist diagnosis table
    "87593",
    "90611 ",
    "B04",
    "B0809",
    "05900",
    "0590",
    "05909",
    "05901",
    "359811007",
    "359814004",
    "59774002",
],
"LOINC_MPOX" : ["1003839", "1004340"], # for lab order table
}


# COMMAND ----------

# MAGIC %md
# MAGIC import json
# MAGIC
# MAGIC with open("/tmp/featurePrimitiveDict.json","w") as f:
# MAGIC     json.dump(featurePrimitiveDict,f)
# MAGIC f.close()

# COMMAND ----------

# MAGIC %md
# MAGIC #### Setups
# MAGIC #### From util/conditions.py
# MAGIC "LOINCDESC_COVID" : [
# MAGIC         "SARS coronavirus 2 RNA:PrThr:Pt:Respiratory:Ord:Probe.amp.tar",
# MAGIC         "SARS coronavirus 2 RNA:PrThr:Pt:XXX:Ord:Probe.amp.tar",
# MAGIC     ],  
# MAGIC
# MAGIC LOINC_CODE	NEW_LOINC_CODE	LOINC_DESC  
# MAGIC 101289-7		SARS coronavirus 2 RNA:PrThr:Pt:Thrt:Ord:Non-probe.amp.tar  
# MAGIC 94306-8		SARS coronavirus 2 RNA panel:-:Pt:XXX:-:Probe.amp.tar  
# MAGIC 94309-2		SARS coronavirus 2 RNA:PrThr:Pt:XXX:Ord:Probe.amp.tar  
# MAGIC 94500-6		SARS coronavirus 2 RNA:PrThr:Pt:Respiratory:Ord:Probe.amp.tar  
# MAGIC 94531-1		SARS coronavirus 2 RNA panel:-:Pt:Respiratory:-:Probe.amp.tar  
# MAGIC 94565-9		SARS coronavirus 2 RNA:PrThr:Pt:Nph:Ord:Non-probe.amp.tar  
# MAGIC 94660-8		SARS coronavirus 2 RNA:PrThr:Pt:Ser/Plas:Ord:Probe.amp.tar  
# MAGIC 94745-7		SARS coronavirus 2 RNA:ThreshNum:Pt:Respiratory:Qn:Probe.amp.tar  
# MAGIC 94746-5		SARS coronavirus 2 RNA:ThreshNum:Pt:XXX:Qn:Probe.amp.tar  
# MAGIC 94759-8		SARS coronavirus 2 RNA:PrThr:Pt:Nph:Ord:Probe.amp.tar  
# MAGIC 94819-0		SARS coronavirus 2 RNA:LnCnc:Pt:XXX:Qn:Probe.amp.tar  
# MAGIC 94822-4		SARS coronavirus 2 RNA:PrThr:Pt:Saliva:Ord:Sequencing  
# MAGIC 94845-5		SARS coronavirus 2 RNA:PrThr:Pt:Saliva:Ord:Probe.amp.tar  
# MAGIC 95406-5		SARS coronavirus 2 RNA:PrThr:Pt:Nose:Ord:Probe.amp.tar  
# MAGIC 95424-8		SARS coronavirus 2 RNA:PrThr:Pt:Respiratory:Ord:Sequencing  
# MAGIC 95608-6		SARS coronavirus 2 RNA:PrThr:Pt:Respiratory:Ord:Non-probe.amp.tar  
# MAGIC 95826-4		SARS coronavirus 2 RNA panel:-:Pt:Saliva:-:Probe.amp.tar  
# MAGIC 96797-6		SARS coronavirus 2 RNA:PrThr:Pt:Oropharyngeal wash:Ord:Probe.amp.tar  
# MAGIC 96829-7		SARS coronavirus 2 RNA:PrThr:Pt:XXX^Donor:Ord:Probe.amp.tar  
# MAGIC 96897-4		SARS coronavirus 2 RNA panel:-:Pt:Oropharyngeal wash:-:Probe.amp.tar  

# COMMAND ----------



drugNames={
"DRUGNAME_COVID" : [
    #unchanged from HV
    "CASIRIVIMAB",
    "IMDEVIMAB",
    "ETESEVIMAB",
    "BAMLANIVIMAB",
    "SOTROVIMAB",
    "BEBTELOVIMAB",
    "PAXLOVID",
    "MOLNUPIRAVIR",
    "REMDESIVIR",
       "PAXLOVID", 
         "MOLNUPIR",
         "EVUSHELD",
         "TIXAGEVIMAB",
         "CILGAVIMAB",
         "BEBTELOVIMA",
         "SOTROVIMAB",
         "BAMLANIVIMAB",
         "ETESEVIMAB",
         "REGEN-COV",
         "CASIRIVIMAB",
         "IMDEVIMAB",
         "DEXAMETHASONE",
         "TOFACITINIB", 
         "TOCILIZUMAB",
         "SARILUMAB",
         "BARICITINIB",
         "REMDESIVIR",
         ],

}


# COMMAND ----------

#ccsrs=spark.table(f"{SRC_CATALOG}.{SRC_SCHEMA}.ccsr_icd_codes")
#ccsr_lookup = spark.table(f"{SRC_CATALOG}.{SRC_SCHEMA}.icd10cm_diagnosis_codes_to_ccsr_categories_map")
#ccsr_icd_codesfor

# COMMAND ----------

# MAGIC %md
# MAGIC for ft,ft_list in featureDict:
# MAGIC Columns
# MAGIC Sample Data
# MAGIC Details
# MAGIC Permissions
# MAGIC History
# MAGIC Lineage
# MAGIC Insights
# MAGIC code	feature	vocabulary_id
# MAGIC 101289-7	COVIDTEST	LOINC
# MAGIC 94306-8	COVIDTEST	LOINC

# COMMAND ----------

import pandas as pd
import pyspark as ps
plist=[]
for ft,ft_list in featurePrimitiveDict.items():
    print(ft)
    tbl=pd.DataFrame(ft_list,columns=['code'])
    ct,fn=ft.split('_')
    tbl[FEATURE]=fn
    tbl['vocabulary_id']=ct
    plist=plist+tbl.values.tolist()
fp=spark.createDataFrame(pd.DataFrame(plist,columns=['code',FEATURE,'vocabulary_id']))

# COMMAND ----------

ft_name=f"{CATALOG}.{SCHEMA}.concept_sets"
write_mode = "append"
schema_option = "mergeSchema"
 
fp.write.format("delta").mode(write_mode).option(
                schema_option, "true"
            ).saveAsTable( ft_name)

# COMMAND ----------

fp=spark.table(ft_name)
display(fp.where(fp.feature_name == 'INF006'))


