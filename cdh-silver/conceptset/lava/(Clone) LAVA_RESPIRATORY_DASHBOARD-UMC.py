# Databricks notebook source
# MAGIC %md
# MAGIC #### LAVA-RESP-VIRUS DASHBOARD-High-Risk/Underlying Medical Condition
# MAGIC #####By Heartley Egwuogu 
# MAGIC Started on 10/10/2024

# COMMAND ----------

from itertools import chain
from pyspark.sql.functions import col, lit
from pyspark.sql.types import StructType,StructField, StringType, IntegerType
col=StructType(
    [StructField("conceptcode",StringType(),True),
              ])
concepts=StructType(
    [StructField("conceptcode",StringType(),True),
              ])

# COMMAND ----------

#1 CVD -covid 
ccvd=['M31.19','M31.10','M31.11','T82.110S','T82.1','T82.11','T82.110','T82.110A','T82.110D','T82.111','T82.111A','T82.111D','T82.111S','T82.118','T82.118A','T82.118D','T82.118S','T82.119','T82.119A','T82.119D','T82.119S','T82.12','T82.120','T82.120A','T82.120D','T82.120S','T82.121','T82.121A','T82.121D','T82.121S','T82.128','T82.128A','T82.128D','T82.128S','T82.129','T82.129A','T82.129D','T82.129S','T82.19','T82.190','T82.190A','T82.190D','T82.190S','T82.191','T82.191A','T82.191D','T82.191S','T82.198','T82.198A','T82.198D','T82.198S','T82.199','T82.199A','T82.199D','T82.199S','T82.211A','T82.211D','T82.211S','T82.212A','T82.212D','T82.212S','T82.213A','T82.213D','T82.213S','T82.218A','T82.218D','T82.218S','Z95.0','Z95.1','Z95.2','Z95.3','Z95.4','Z95.5','Z95.8','Z95.81','Z95.810','Z95.811','Z95.812','Z95.818','Z95.82','Z95.820','Z95.828','Z95.9','Z98.61','I24.81','I24.89','I21.B','I25.85','I01.0','I01.1','I01.2','I01.8','I01.9','I02.0','I02.9','I05.0','I05.1','I05.2','I05.8','I05.9','I06.0','I06.1','I06.2','I06.8','I06.9','I07.0','I07.1','I07.2','I07.8','I07.9','I08.0','I08.1','I08.2','I08.3','I08.8','I08.9','I09.0','I09.1','I09.2','I09.8','I09.81','I09.89','I09.9','I11.0','I11.9','I13.0','I13.1','I13.10','I13.11','I26.9','I13.2','I15.0','I15.1','I15.2','I15.8','I16.0','I16.1','I16.9','I21.0','I21.01','I21.02','I21.09','I21.1','I21.11','I21.19','I21.2','I21.21','I21.29','I21.3','I21.4','I21.9','I21.A','I21.A1','I21.A9','I22.0','I22.1','I22.2','I22.8','I22.9','I23.0','I23.1','I23.2','I23.3','I23.4','I23.5','I23.6','I23.7','I23.8','I24.0','I24.1','I24.8','I24.9','I25.1','I25.10','I25.11','I25.110','I25.111','I25.118','I25.119','I25.2','I25.3','I25.4','I25.41','I25.42','I25.5','I25.6','I25.7','I25.70','I25.700','I25.701','I25.708','I25.709','I25.71','I25.710','I25.711','I25.718','I25.719','I25.72','I25.720','I25.721','I25.728','I25.729','I25.73','I25.730','I25.731','I25.738','I25.739','I25.75','I25.750','I25.751','I25.758','I25.759','I25.76','I25.760','I25.761','I25.768','I25.769','I25.79','I25.790','I25.791','I25.798','I25.799','I25.8','I25.81','I25.810','I25.811','I25.812','I25.82','I25.83','I25.84','I25.89','I25.9','I26.0','I26.01','I26.02','I26.09','I26.90','I26.92','I26.93','I26.94','I26.99','I27.0','I27.1','I27.2','I27.20','I27.21','I27.22','I27.23','I27.24','I27.29','I27.8','I27.81','I27.82','I27.83','I27.89','I27.9','I28.0','I28.8','I28.9','I31.0','I31.1','I31.2','I31.3','I31.4','I31.8','I31.9','I34.0','I34.1','I34.2','I34.8','I34.9','I35.0','I35.1','I35.2','I35.8','I35.9','I36.0','I36.1','I36.2','I36.8','I36.9','I37.0','I37.1','I37.2','I37.8','I37.9','I42.0','I42.1','I42.2','I42.3','I42.4','I42.5','I42.6','I42.7','I42.8','I42.9','I44.0','I44.1','I44.2','I44.3','I44.30','I44.39','I44.4','I44.5','I44.6','I44.60','I44.69','I44.7','I45.0','I45.1','I45.10','I45.19','I45.2','I45.4','I45.5','I45.6','I45.8','I45.81','I45.89','I45.9','I46.2','I46.8','I46.9','I47.0','I47.1','I47.2','I47.9','I48.0','I48.1','I48.11','I48.19','I48.2','I48.20','I48.21','I48.3','I48.4','I48.9','I48.91','I48.92','I49.0','I49.01','I49.02','I49.1','I49.2','I49.3','I49.4','I49.40','I49.49','I49.5','I49.8','I49.9','I50.1','I50.2','I50.20','I50.21','I50.22','I50.23','I50.3','I50.30','I50.31','I50.32','I50.33','I50.4','I50.40','I50.41','I50.42','I50.43','I50.8','I50.81','I50.810','I50.811','I50.812','I50.813','I50.814','I50.82','I50.83','I50.84','I50.89','I50.9','I51.0','I51.1','I51.2','I51.3','I51.5','I51.7','I51.8','I51.81','I51.89','I51.9','I60.0','I60.00','I60.01','I60.02','I60.1','I60.10','I60.11','I60.12','I60.2','I60.20','I60.21','I60.22','I60.3','I60.30','I60.31','I60.32','I60.4','I60.5','I60.50','I60.51','I60.52','I60.6','I60.7','I60.8','I60.9','I61.0','I61.1','I61.2','I61.3','I61.4','I61.5','I61.6','I61.8','I61.9','I62.0','I62.00','I62.01','I62.02','I62.03','I62.1','I62.9','I63.0','I63.00','I63.01','I63.011','I63.012','I63.013','I63.019','I63.02','I63.03','I63.031','I63.032','I63.033','I63.039','I63.09','I63.1','I63.10','I63.11','I63.111','I63.112','I63.113','I63.119','I63.12','I63.13','I63.131','I63.132','I63.133','I63.139','I63.19','I63.2','I63.20','I63.21','I63.211','I63.212','I63.213','I63.219','I63.22','I63.23','I63.231','I63.232','I63.233','I63.239','I63.29','I63.3','I63.30','I63.31','I63.311','I63.312','I63.313','I63.319','I63.32','I63.321','I63.322','I63.323','I63.329','I63.33','I63.331','I63.332','I63.333','I63.339','I63.34','I63.341','I63.342','I63.343','I63.349','I63.39','I63.4','I63.40','I63.41','I63.411','I63.412','I63.413','I63.419','I63.42','I63.421','I63.422','I63.423','I63.429','I63.43','I63.431','I63.432','I63.433','I63.439','I63.44','I63.441','I63.442','I63.443','I63.449','I63.49','I63.5','I63.50','I63.51','I63.511','I63.512','I63.513','I63.519','I63.52','I63.521','I63.522','I63.523','I63.529','I63.53','I63.531','I63.532','I63.533','I63.539','I63.54','I63.541','I63.542','I63.543','I63.549','I63.59','I65.0','I65.01','I65.02','I65.03','I65.09','I65.1','I65.2','I65.21','I65.22','I65.23','I65.29','I65.8','I65.9','I66.0','I66.01','I66.02','I66.03','I66.09','I66.1','I66.11','I66.12','I66.13','I66.19','I66.2','I66.21','I66.22','I66.23','I66.29','I66.3','I66.8','I66.9','I67.0','I67.2','I67.81','I67.82','I67.83','I67.84','I67.841','I67.848','I67.85','I67.850','I69.0','I69.00','I69.01','I69.011','I69.012','I69.013','I69.014','I69.015','I69.018','I69.019','I69.02','I69.021','I69.022','I69.023','I69.028','I69.03','I69.031','I69.032','I69.033','I69.034','I69.039','I69.04','I69.041','I69.042','I69.043','I69.044','I69.049','I69.05','I69.051','I69.052','I69.053','I69.054','I69.059','I69.06','I69.061','I69.323','I69.062','I69.063','I69.064','I69.065','I69.069','I69.09','I69.1','I69.10','I69.11','I69.111','I69.112','I69.113','I69.114','I69.115','I69.118','I69.119','I69.12','I69.121','I69.122','I69.123','I69.128','I69.13','I69.131','I69.132','I69.133','I69.134','I69.139','I69.14','I69.141','I69.142','I69.143','I69.144','I69.149','I69.15','I69.151','I69.152','I69.153','I69.154','I69.159','I69.16','I69.161','I69.162','I69.163','I69.164','I69.165','I69.169','I69.19','I69.2','I69.20','I69.21','I69.211','I69.212','I69.213','I69.214','I69.215','I69.218','I69.328','I69.219','I69.22','I69.221','I69.222','I69.223','I69.228','I69.23','I69.231','I69.232','I69.233','I69.234','I69.239','I69.24','I69.241','I69.242','I69.243','I69.244','I69.249','I69.25','I69.251','I69.252','I69.253','I69.254','I69.259','I69.26','I69.261','I69.262','I69.263','I69.264','I69.265','I69.269','I69.29','I69.3','I69.30','I69.31','I69.310','I69.311','I69.312','I69.313','I69.314','I69.315','I69.318','I69.319','I69.32','I69.321','I69.322','I69.33','I69.331','I69.332','I69.333','I69.334','I69.339','I69.34','I69.341','I69.342','I69.343','I69.344','I69.349','I69.35','I69.351','I69.352','I69.353','I69.354','I69.359','I69.36','I69.361','I69.362','I69.363','I69.364','I69.365','I69.369','I69.39','I69.390','I69.8','I69.80','I69.81','I69.810','I69.811','I69.812','I69.813','I69.814','I69.815','I69.818','I69.819','I69.82','I69.820','I69.821','I69.822','I69.823','I69.828','I69.83','I69.831','I69.832','I69.833','I69.834','I69.839','I69.84','I69.841','I69.842','I69.843','I69.844','I69.849','I69.85','I69.851','I69.852','I69.853','I69.854','I69.859','I69.86','I69.861','I69.862','I69.863','I69.864','I69.865','I69.869','I69.89','I69.890','I69.9','I69.90','I69.91','I69.911','I69.912','I69.913','I69.914','I69.915','I69.918','I69.919','I69.92','I69.920','I69.921','I69.922','I69.923','I69.928','I69.93','I69.931','I69.932','I69.933','I69.934','I69.939','I69.94','I69.941','I69.942','I69.943','I69.944','I69.949','I69.95','I69.951','I69.952','I69.953','I69.954','I69.959','I69.96','I69.961','I69.962','I69.963','I69.964','I69.965','I69.969','I69.99','I69.990','I70.0','I70.1','I70.2','I70.20','I70.201','I70.202','I70.203','I70.208','I70.209','I70.21','I70.211','I70.212','I70.213','I70.218','I70.219','I70.22','I70.221','I70.222','I70.223','I70.228','I70.229','I70.23','I70.231','I70.232','I70.233','I70.234','I70.235','I70.238','I70.239','I70.24','I70.241','I70.242','I70.243','I70.244','I70.245','I70.248','I70.249','I70.25','I70.26','I70.261','I70.262','I70.263','I70.268','I70.269','I70.29','I70.291','I70.292','I70.293','I70.298','I70.299','I70.3','I70.30','I70.301','I70.302','I70.303','I70.308','I70.309','I70.31','I70.311','I70.312','I70.313','I70.318','I70.319','I70.32','I70.321','I70.322','I70.323','I70.328','I70.329','I70.33','I70.331','I70.332','I70.333','I70.334','I70.335','I70.338','I70.339','I70.34','I70.341','I70.342','I70.343','I70.344','I70.345','I70.348','I70.349','I70.35','I70.36','I70.361','I70.362','I70.363','I70.368','I70.369','I70.39','I70.391','I70.392','I70.393','I70.398','I70.399','I70.4','I70.40','I70.401','I70.402','I70.403','I70.408','I70.409','I70.41','I70.411','I70.412','I70.413','I70.418','I70.419','I70.42','I70.421','I70.422','I70.423','I70.428','I70.429','I70.43','I70.431','I70.432','I70.433','I70.434','I70.435','I70.438','I70.439','I70.44','I70.441','I70.442','I70.443','I70.444','I71.6','I70.445','I70.448','I70.449','I70.45','I70.46','I70.461','I70.462','I70.463','I70.468','I70.469','I70.49','I70.491','I70.492','I70.493','I70.498','I70.499','I70.5','I70.50','I70.501','I70.502','I70.503','I70.508','I70.509','I70.51','I70.511','I70.512','I70.513','I70.518','I70.519','I70.52','I70.521','I70.522','I70.523','I70.528','I70.529','I70.53','I70.531','I70.532','I70.533','I70.534','I70.535','I70.538','I70.539','I70.54','I71.8','I70.541','I70.542','I70.543','I70.544','I70.545','I70.548','I70.549','I70.55','I70.56','I70.561','I70.562','I70.563','I70.568','I70.569','I70.59','I70.591','I70.592','I70.593','I70.598','I70.599','I70.6','I70.60','I70.601','I70.602','I70.603','I70.608','I70.609','I70.61','I70.611','I70.612','I71.9','I70.613','I70.618','I70.619','I70.62','I70.621','I70.622','I70.623','I70.628','I70.629','I70.63','I70.631','I70.632','I70.633','I70.634','I70.635','I70.638','I70.639','I70.64','I70.641','I70.642','I70.643','I70.644','I70.645','I70.648','I70.649','I70.65','I70.66','I70.661','I70.662','I70.663','I70.668','I70.669','I70.69','I70.691','I70.692','I70.693','I70.698','I70.699','I70.7','I70.70','I70.701','I70.702','I70.703','I70.708','I70.709','I70.71','I70.711','I70.712','I70.713','I70.718','I70.719','I70.72','I70.721','I70.722','I70.723','I70.728','I70.729','I70.73','I70.731','I70.732','I70.733','I70.734','I70.735','I70.738','I70.739','I70.74','I70.741','I70.742','I70.743','I70.744','I70.745','I70.748','I70.749','I70.75','I70.76','I70.761','I70.762','I70.763','I70.768','I70.769','I70.79','I70.791','I70.792','I70.793','I70.798','I70.799','I70.8','I70.9','I70.90','I70.91','I70.92','I71.0','I71.00','I71.01','I71.02','I71.03','I71.1','I71.2','I71.3','I71.4','I71.5','I72.0','I72.1','I72.2','I72.3','I72.4','I72.5','I72.6','I72.8','I72.9','I73.0','I73.00','I73.01','I73.1','I73.8','I73.81','I73.89','I73.9','I74.0','I74.01','I74.09','I74.1','I74.10','I74.11','I74.19','I74.2','I74.3','I74.4','I74.5','I74.8','I74.9','I75.0','I75.01','I75.011','I75.012','I75.013','I75.019','I75.02','I75.021','I75.022','I75.023','I75.029','I75.8','I75.81','I75.89','I77.1','I77.71','I77.72','I77.73','I77.74','I77.79','I79.0','I79.1','I79.8','I97.0','I97.1','I97.11','I97.110','I97.111','I97.12','I97.120','I97.121','I97.13','I97.130','I97.131','I97.19','I97.190','I97.191','I97.810','I97.811','I97.820','I97.821','J67.9','M31.0','M31.1','M31.2','M31.4','M31.6','M31.7','M31.8','M31.9','P29.30','Q20','Q20.0','Q20.1','Q20.2','Q20.3','Q20.4','Q20.5','Q20.6','Q20.8','Q20.9','Q21','Q21.0','Q21.1','Q21.2','Q21.3','Q21.4','Q21.8','Q21.9','Q22','Q22.0','Q22.1','Q22.2','Q22.3','Q22.4','Q22.5','Q22.6','Q22.8','Q22.9','Q23','Q23.0','Q23.1','Q23.2','Q23.3','Q23.4','Q23.8','Q23.9','Q24','Q24.0','Q24.1','Q24.2','Q24.3','Q24.4','Q24.5','Q24.6','Q24.8','Q24.9','Q25','Q25.0','Q25.1','Q25.2','Q25.21','Q25.29','Q25.3','Q25.4','Q25.40','Q25.41','Q25.42','Q25.43','Q25.44','Q25.45','Q25.46','Q25.47','Q25.48','Q25.49','Q25.5','Q25.6','Q25.7','Q25.71','Q25.72','Q25.79','Q25.8','Q25.9','Q26','Q26.0','Q26.1','Q26.2','Q26.3','Q26.4','Q26.5','Q26.6','Q26.8','Q26.9','Q27.0','Q27.3','Q27.30','Q27.31','Q27.32','Q27.33','Q27.34','Q27.39','Q27.4','Q27.8','Q27.9','Q28','Q28.0','Q28.1','Q28.2','Q28.3','Q28.8','Q28.9','Q33','Q33.0','Q33.1','Q33.2','Q33.3','Q33.4','Q33.5','Q33.6','Q33.8','Q33.9','Q89.3','R00.8','I25.752','I71.42','I71.11','I71.010','I71.51','I25.702','I31.31','I25.732','I71.011','I71.23','I71.33','I71.62','I71.22','I71.61','I34.81','I71.012','I25.712','I71.30','I71.40','I31.39','I71.31','I71.52','I71.50','I34.89','I71.60','I71.019','I71.20','I25.762','I71.12','I25.722','Q21.22','Q21.11','Q21.20','Q21.21','Q21.10','Q21.16','Q21.13','Q21.15','Q21.12','Q21.23','Q21.19','Q21.14','I25.792','I71.32','I25.112','I71.21','I71.43','I71.10','I71.41','I71.13']
ccvd = spark.createDataFrame(ccvd,col).withColumn('tp', lit('covid')).createOrReplaceTempView("ccvd_T")

#Cvd -flu
fcvd=['I25.752','I71.42','I71.11','I71.010','I71.51','I25.702','I31.31','I25.732','I71.011','I71.23','I71.33','I71.62','I71.22','I71.61','I34.81','I71.012','I25.712','I71.30','I71.40','I31.39','I71.31','I71.52','I71.50','I34.89','I71.60','I71.019','I71.20','I25.762','I71.12','I25.722','Q21.22','Q21.11','Q21.20','Q21.21','Q21.10','Q21.16','Q21.13','Q21.15','Q21.12','Q21.23','Q21.19','Q21.14','I25.792','I71.32','I25.112','I71.21','I71.43','I71.10','I71.41','I71.13','M31.19','M31.10','M31.11','Z95.0','Z95.1','Z95.2','Z95.3','Z95.4','Z95.5','Z95.8','Z95.81','Z95.810','Z95.811','Z95.812','Z95.818','Z95.82','Z95.820','Z95.828','Z95.9','Z98.61','I24.81','I24.89','I21.B','I25.85','I01.0','I01.1','I01.2','I01.8','I01.9','I02.0','I02.9','I05.0','I05.1','I05.2','I05.8','I05.9','I06.0','I06.1','I06.2','I06.8','I06.9','I07.0','I07.1','I07.2','I07.8','I07.9','I08.0','I08.1','I08.2','I08.3','I08.8','I08.9','I09.0','I09.1','I09.2','I09.8','I09.81','I09.89','I09.9','I11.0','I11.9','I13.0','I13.1','I13.10','I13.11','I26.9','I13.2','I15.0','I15.1','I15.2','I15.8','I15.9','I21.0','I21.01','I21.02','I21.09','I21.1','I21.11','I21.19','I21.2','I21.21','I21.29','I21.3','I21.4','I21.9','I21.A','I21.A1','I21.A9','I22.0','I22.1','I22.2','I22.8','I22.9','I23.0','I23.1','I23.2','I23.3','I23.4','I23.5','I23.6','I23.7','I23.8','I24.0','I24.1','I24.8','I24.9','I25.1','I25.10','I25.11','I25.110','I25.111','I25.118','I25.119','I25.2','I25.3','I25.4','I25.41','I25.42','I25.5','I25.6','I25.7','I25.70','I25.700','I25.701','I25.708','I25.709','I25.71','I25.710','I25.711','I25.718','I25.719','I25.72','I25.720','I25.721','I25.728','I25.729','I25.73','I25.730','I25.731','I25.738','I25.739','I25.75','I25.750','I25.751','I25.758','I25.759','I25.76','I25.760','I25.761','I25.768','I25.769','I25.79','I25.790','I25.791','I25.798','I25.799','I25.8','I25.81','I25.810','I25.811','I25.812','I25.82','I25.83','I25.84','I25.89','I25.9','I26.0','I26.01','I26.02','I26.09','I26.90','I26.92','I26.93','I26.94','I26.99','I27.0','I27.1','I27.2','I27.20','I27.21','I27.22','I27.23','I27.24','I27.29','I27.8','I27.81','I27.82','I27.83','I27.89','I27.9','I28.0','I28.1','I28.8','I28.9','I31.0','I31.1','I31.2','I31.3','I31.4','I31.8','I31.9','I34.0','I34.1','I34.2','I34.8','I34.9','I35.0','I35.1','I35.2','I35.8','I35.9','I36.0','I36.1','I36.2','I36.8','I36.9','I37.0','I37.1','I37.2','I37.8','I37.9','I42.0','I42.1','I42.2','I42.3','I42.4','I42.5','I42.6','I42.7','I42.8','I42.9','I44.0','I44.1','I44.2','I44.3','I44.30','I44.39','I44.4','I44.5','I44.6','I44.60','I44.69','I44.7','I45.0','I45.1','I45.10','I45.19','I45.2','I45.4','I45.5','I45.6','I45.8','I45.81','I45.89','I45.9','I46.2','I46.8','I46.9','I48.0','I48.1','I48.11','I48.19','I48.2','I48.20','I48.21','I48.3','I48.4','I48.9','I48.91','I48.92','I50.1','I50.2','I50.20','I50.21','I50.22','I50.23','I50.3','I50.30','I50.31','I50.32','I50.33','I50.4','I50.40','I50.41','I50.42','I50.43','I50.8','I50.81','I50.810','I50.811','I50.812','I50.813','I50.814','I50.82','I50.83','I50.84','I50.89','I50.9','I51.0','I51.1','I51.2','I51.3','I51.5','I51.7','I51.8','I51.81','I51.89','I51.9','I71.6','I71.8','I71.9','I71.0','I71.00','I71.01','I71.02','I71.03','I71.1','I71.2','I71.3','I71.4','I71.5','I72.0','I72.1','I72.2','I72.3','I72.4','I72.5','I72.6','I72.8','I72.9','I73.0','I73.00','I73.01','I73.1','I73.8','I73.81','I73.89','I73.9','I74.0','I74.01','I74.09','I74.1','I74.10','I74.11','I74.19','I74.2','I74.3','I74.4','I74.5','I74.8','I74.9','I75.0','I75.01','I75.011','I75.012','I75.013','I75.019','I75.02','I75.021','I75.022','I75.023','I75.029','I75.8','I75.81','I75.89','I79.0','I79.1','I79.8','I97.0','I97.1','I97.11','I97.110','I97.111','I97.12','I97.120','I97.121','I97.13','I97.130','I97.131','I97.19','I97.190','I97.191','M31.0','M31.1','M31.2','M31.4','M31.6','M31.7','M31.8','M31.9','P29.30','Q20','Q20.0','Q20.1','Q20.2','Q20.3','Q20.4','Q20.5','Q20.6','Q20.8','Q20.9','Q21','Q21.0','Q21.1','Q21.2','Q21.3','Q21.4','Q21.8','Q21.9','Q22','Q22.0','Q22.1','Q22.2','Q22.3','Q22.4','Q22.5','Q22.6','Q22.8','Q22.9','Q23','Q23.0','Q23.1','Q23.2','Q23.3','Q23.4','Q23.8','Q23.9','Q24','Q24.0','Q24.1','Q24.2','Q24.3','Q24.4','Q24.5','Q24.6','Q24.8','Q24.9','Q25','Q25.0','Q25.1','Q25.2','Q25.21','Q25.29','Q25.3','Q25.4','Q25.40','Q25.41','Q25.42','Q25.43','Q25.44','Q25.45','Q25.46','Q25.47','Q25.48','Q25.49','Q25.5','Q25.6','Q25.7','Q25.71','Q25.72','Q25.79','Q25.8','Q25.9','Q26','Q26.0','Q26.1','Q26.2','Q26.3','Q26.4','Q26.5','Q26.6','Q26.8','Q26.9','Q27.0','Q27.3','Q27.30','Q27.31','Q27.32','Q27.33','Q27.34','Q27.39','Q27.4','Q27.8','Q27.9','Q28','Q28.0','Q28.1','Q28.2','Q28.3','Q28.8','Q28.9','Q33','Q33.0','Q33.1','Q33.2','Q33.3','Q33.4','Q33.5','Q33.6','Q33.8','Q33.9','Q89.3']
fcvd = spark.createDataFrame(fcvd,col).withColumn('tp', lit('flu')).createOrReplaceTempView("fcvd_T")

#2 hematologic -Covid
chem=['D55.29','D55.21','D55.0','D55.1','D55.2','D55.3','D55.8','D55.9','D61.81','D61.810','D61.811','D61.818','D61.82','D61.89','D61.9','D64.81','D64.9']
chem = spark.createDataFrame(chem,col).withColumn('tp', lit('covid')).createOrReplaceTempView("chem_T")

#hematologic-flu
fhem=['D68.09','D59.39','D68.021','D59.30','D68.00','D59.31','D68.02','D68.04','D68.01','D68.020','D68.03','D59.32','D68.029','D68.022','D68.023','D59.10','D59.11','D59.12','D59.13','D59.19','D55.29','D55.21','D61.02','D55.0','D55.1','D55.2','D55.3','D55.8','D55.9','D56.4','D58.0','D58.1','D58.2','D58.8','D58.9','D59.0','D59.1','D59.2','D59.4','D59.5','D59.6','D59.8','D59.9','D60.0','D60.1','D60.8','D60.9','D61.0','D61.01','D61.09','D61.1','D61.2','D61.3','D61.8','D61.81','D61.810','D61.811','D61.818','D61.82','D61.89','D61.9','D64.0','D64.1','D64.2','D64.3','D64.4','D64.8','D64.81','D64.89']
fhem = spark.createDataFrame(fhem,col).withColumn('tp', lit('flu')).createOrReplaceTempView("fhem_T")

#3 Pulmonary-Covid

cpul=['J82.83','J84.170','J84.178','J44.8','J44.81','J44.89','A15.0','A15.4','A15.5','A15.6','A15.7','A15.8','A15.9','A31.0','B39.1','B39.3','B40.1','B40.7','B41.7','B44.0','B45.0','B45.1','B45.3','B45.7','B45.8','B45.9','B46.0','D86.0','E84.0','E84.1','E84.11','E84.19','E84.8','E84.9','E88.01','J40','J41.0','J41.1','J41.8','J42','J43.0','J43.1','J43.2','J43.8','J43.9','J44.0','J44.1','J44.9','J45.2','J45.20','J45.21','J45.22','J45.3','J45.30','J45.31','J45.32','J45.4','J45.40','J45.41','J45.42','J45.5','J45.50','J45.51','J45.52','J45.9','J45.90','J45.901','J45.902','J45.909','J45.99','J45.990','J45.991','J45.998','J47.0','J47.1','J47.9','J62.0','J62.8','J63.0','J63.1','J63.2','J63.3','J63.4','J63.5','J63.6','J66.0','J66.1','J66.2','J66.8','J67.0','J67.1','J67.2','J67.3','J67.4','J67.5','J67.6','J67.7','J67.8','J68.0','J68.1','J68.3','J68.4','J68.8','J68.9','J70.0','J70.1','J70.2','J70.3','J70.4','J70.5','J70.8','J70.9','J81.1','J84.0','J84.01','J84.02','J84.03','J84.09','J84.1','J84.10','J84.11','J84.111','J84.112','J84.113','J84.114','J84.115','J84.116','J84.117','J84.17','J84.2','J84.8','J84.81','J84.82','J84.84','J84.842','J84.848','J84.89','J84.9','J95.3','J95.822','J95.85','J95.850','J95.851','J96.1','P27.1','P27.8','P27.9']
cpul = spark.createDataFrame(cpul,col).withColumn('tp', lit('covid')).createOrReplaceTempView("cpul_T")

#pulmonary-flu
fpul=['J95.87','J84.170','J84.178','J44.8','J44.81','J44.89','A15.0','A15.4','A15.5','A15.6','A15.7','A15.8','A15.9','A31.0','B39.0','B39.1','B39.2','B39.3','B39.4','B39.5','B39.9','B40.0','B40.1','B40.2','B40.3','B40.7','B40.8','B40.81','B40.89','B40.9','B41.0','B41.7','B41.8','B41.9','B44.0','B44.1','B44.2','B44.7','B44.8','B44.81','B44.89','B44.9','B45.0','B45.1','B45.2','B45.3','B45.7','B45.8','B45.9','B46.0','D86.0','E84.0','E84.1','E84.11','E84.19','E84.8','E84.9','E88.01','J40','J41.0','J41.1','J41.8','J42','J43.0','J43.1','J43.2','J43.8','J43.9','J44.0','J44.1','J44.9','J45.2','J45.20','J45.21','J45.22','J45.3','J45.30','J45.31','J45.32','J45.4','J45.40','J45.41','J45.42','J45.5','J45.50','J45.51','J45.52','J45.9','J45.90','J45.901','J45.902','J45.909','J45.99','J45.990','J45.991','J45.998','J47.0','J47.1','J47.9','J62.0','J62.8','J63.0','J63.1','J63.2','J63.3','J63.4','J63.5','J63.6','J66.0','J66.1','J66.2','J66.8','J67.0','J67.1','J67.2','J67.3','J67.4','J67.5','J67.6','J67.7','J67.8','J68.0','J68.1','J68.2','J68.3','J68.4','J68.8','J68.9','J70.0','J70.1','J70.2','J70.3','J70.4','J70.5','J70.8','J70.9','J81.1','J84.0','J84.01','J84.02','J84.03','J84.09','J84.1','J84.10','J84.11','J84.111','J84.112','J84.113','J84.114','J84.115','J84.116','J84.117','J84.17','J84.2','J84.8','J84.81','J84.82','J84.83','J84.84','J84.841','J84.842','J84.843','J84.848','J84.89','J84.9','J95','J95.0','J95.00','J95.01','J95.02','J95.03','J95.04','J95.09','J95.1','J95.2','J95.3','J95.4','J95.5','J95.6','J95.61','J95.62','J95.7','J95.71','J95.72','J95.8','J95.81','J95.811','J95.812','J95.82','J95.821','J95.822','J95.83','J95.830','J95.831','J95.84','J95.85','J95.850','J95.851','J95.859','J95.86','J95.860','J95.861','J95.862','J95.863','J95.88','J95.89','J96.1','P26.0','P26.1','P26.8','P26.9','P27.0','P27.1','P27.8','P27.9']
fpul = spark.createDataFrame(fpul,col).withColumn('tp', lit('flu')).createOrReplaceTempView("fpul_T")


#4 hepatic -covid
chep=['K76.82','K74.00','K74.01','K74.02','B16.0','B16.1','B16.2','B16.9','B17.0','B17.1','B17.10','B17.11','B18.0','B18.1','B18.2','B18.8','B18.9','B19.1','B19.10','B19.11','B19.2','B19.20','B19.21','I85.0','I85.00','I85.01','I85.1','I85.10','I85.11','K70.0','K70.1','K70.10','K70.11','K70.2','K70.3','K70.30','K70.31','K70.4','K70.40','K70.41','K70.9','K71.0','K71.1','K71.10','K71.11','K71.2','K71.3','K71.4','K71.5','K71.50','K71.51','K71.6','K71.7','K71.8','K71.9','K72.0','K72.00','K72.01','K72.1','K72.10','K72.11','K72.9','K72.90','K72.91','K73.0','K73.1','K73.2','K73.8','K73.9','K74.0','K74.1','K74.2','K74.3','K74.4','K74.5','K74.6','K74.60','K74.69','K75.2','K75.3','K75.4','K75.8','K75.81','K75.89','K75.9','K76.0','K76.1','K76.2','K76.3','K76.4','K76.5','K76.6','K76.7','K76.8','K76.81','K76.89','K76.9']
chep = spark.createDataFrame(chep,col).withColumn('tp', lit('covid')).createOrReplaceTempView("chep_T")

#heaptic -flu
fhep=['K76.82','K74.00','K74.01','K74.02','B18.0','B18.1','B18.2','B18.8','B18.9','I85.0','I85.00','I85.01','I85.1','I85.10','I85.11','K70.0','K70.1','K70.10','K70.11','K70.2','K70.3','K70.30','K70.31','K70.4','K70.40','K70.41','K70.9','K71.0','K71.1','K71.10','K71.11','K71.2','K71.3','K71.4','K71.5','K71.50','K71.51','K71.6','K71.7','K71.8','K71.9','K72.0','K72.00','K72.01','K72.1','K72.10','K72.11','K72.9','K72.90','K72.91','K73.0','K73.1','K73.2','K73.8','K73.9','K74.0','K74.1','K74.2','K74.3','K74.4','K74.5','K74.6','K74.60','K74.69','K75.0','K75.1','K75.2','K75.3','K75.4','K75.8','K75.81','K75.89','K75.9','K76.0','K76.1','K76.2','K76.3','K76.4','K76.5','K76.6','K76.7','K76.8','K76.81','K76.89','K76.9']
fhep = spark.createDataFrame(fhep,col).withColumn('tp', lit('flu')).createOrReplaceTempView("fhep_T")


#5-Immnunosuppred-covid
cimmuno=['D81.82','D57.03','D57.09','D57.213','D57.218','D57.413','D57.418','D57.42','D57.43','D57.431','D57.432','D57.433','D57.438','D57.439','D57.44','D57.45','D57.451','D57.452','D57.453','D57.458','D57.459','D57.813','D57.818','D84.81','D84.82','D84.821','D84.822','D84.89','D89.83','D89.831','D89.832','D89.833','D89.834','D89.835','D89.839','N04.A','C84.7A','D89.84','D57.434','D57.454','D57.814','D57.04','N04.29','D57.214','D57.414','N04.21','N04.20','N04.22','B97.35','C00.0','C00.1','C00.2','C00.3','C00.4','C00.5','C00.6','C00.8','C00.9','C02.0','C02.1','C02.2','C02.3','C02.4','C02.8','C02.9','C03.0','C03.1','C03.9','C04.0','C04.1','C04.8','C04.9','C05.0','C05.1','C05.2','C05.8','C05.9','C06.0','C06.1','C06.2','C06.8','C06.80','C06.89','C06.9','C08.0','C08.1','C08.9','C09.0','C09.1','C09.8','C09.9','C10.0','C10.1','C10.2','C10.3','C10.4','C10.8','C10.9','C11.0','C11.1','C11.2','C11.3','C11.8','C11.9','C13.0','C13.1','C13.2','C14.0','C14.2','C14.8','C15.3','C15.4','C15.5','C15.8','C15.9','C16.0','C16.1','C16.2','C16.3','C16.4','C16.5','C16.6','C16.8','C16.9','C17.0','C17.1','C17.2','C17.3','C17.8','C17.9','C18.0','C18.1','C18.2','C18.3','C18.4','C18.5','C18.6','C18.7','C18.8','C18.9','C21.0','C21.1','C21.2','C21.8','C22.0','C22.1','C22.2','C22.3','C22.4','C22.7','C22.8','C22.9','C24.0','C24.1','C24.8','C24.9','C25.0','C25.1','C25.2','C25.3','C25.4','C25.7','C25.8','C25.9','C26.0','C26.1','C26.9','C30.0','C30.1','C31.0','C31.1','C31.2','C31.3','C31.8','C31.9','C32.0','C32.1','C32.2','C32.3','C32.8','C32.9','C34.0','C34.00','C34.01','C34.02','C34.1','C34.10','C34.11','C34.12','C34.2','C34.3','C34.30','C34.31','C34.32','C34.8','C34.80','C34.81','C34.82','C34.9','C34.90','C34.91','C34.92','C38.0','C38.1','C38.2','C38.3','C38.4','C38.8','C39.0','C39.9','C40.0','C40.00','C40.01','C40.02','C40.1','C40.10','C40.11','C40.12','C40.2','C40.20','C40.21','C40.22','C40.3','C40.30','C40.31','C40.32','C40.8','C40.80','C40.81','C40.82','C40.9','C40.90','C40.91','C40.92','C41.0','C41.1','C41.2','C41.3','C41.4','C41.9','C43.0','C43.1','C43.10','C43.11','C43.111','C43.112','C43.12','C43.121','C43.122','C43.2','C43.20','C43.21','C43.22','C43.3','C43.30','C43.31','C43.39','C43.4','C43.5','C43.51','C43.52','C43.59','C43.6','C43.60','C43.61','C43.62','C43.7','C43.70','C43.71','C43.72','C43.8','C43.9','C45.0','C45.1','C45.2','C45.7','C45.9','C46.0','C46.1','C46.2','C46.3','C46.4','C46.5','C46.50','C46.51','C46.52','C46.7','C46.9','C47.0','C47.1','C47.10','C47.11','C47.12','C47.2','C47.20','C47.21','C47.22','C47.3','C47.4','C47.5','C47.6','C47.8','C47.9','C48.0','C48.1','C48.2','C48.8','C49.0','C49.1','C49.10','C49.11','C49.12','C49.2','C49.20','C49.21','C49.22','C49.3','C49.4','C49.5','C49.6','C49.8','C49.9','C49.A','C49.A0','C49.A1','C49.A2','C49.A3','C49.A4','C49.A5','C49.A9','C4A.0','C4A.1','C4A.2','C4A.3','C4A.4','C4A.5','C4A.6','C4A.7','C4A.8','C4A.9','C50.0','C50.01','C50.011','C50.012','C50.019','C50.02','C50.021','C50.022','C50.029','C50.1','C50.11','C50.111','C50.112','C50.119','C50.12','C50.121','C50.122','C50.129','C50.2','C50.21','C50.211','C50.212','C50.219','C50.22','C50.221','C50.222','C50.229','C50.3','C50.31','C50.311','C50.312','C50.319','C50.32','C50.321','C50.322','C50.329','C50.4','C50.41','C50.411','C50.412','C50.419','C50.42','C50.421','C50.422','C50.429','C50.5','C50.51','C50.511','C50.512','C50.519','C50.52','C50.521','C50.522','C50.529','C50.6','C50.61','C50.611','C50.612','C50.619','C50.62','C50.621','C50.622','C50.629','C50.8','C50.81','C50.811','C50.812','C50.819','C50.82','C50.821','C50.822','C50.829','C50.9','C50.91','C50.911','C50.912','C50.919','C50.92','C50.921','C50.922','C50.929','C51.0','C51.1','C51.2','C51.8','C51.9','C53.0','C53.1','C53.8','C53.9','C54.0','C54.1','C54.2','C54.3','C54.8','C54.9','C56.1','C56.2','C56.9','C57.0','C57.00','C57.01','C57.02','C57.1','C57.10','C57.11','C57.12','C57.2','C57.20','C57.21','C57.22','C57.3','C57.4','C57.7','C57.8','C57.9','C60.0','C60.1','C60.2','C60.8','C60.9','C62.0','C62.00','C62.01','C62.02','C62.1','C62.10','C62.11','C62.12','C62.9','C62.90','C62.91','C62.92','C63.0','C63.00','C63.01','C63.02','C63.1','C63.10','C63.11','C63.12','C63.2','C63.7','C63.8','C63.9','C64.1','C64.2','C64.9','C65.1','C65.2','C65.9','C66.1','C66.2','C66.9','C67.0','C67.1','C67.2','C67.3','C67.4','C67.5','C67.6','C67.7','C67.8','C67.9','C68.0','C68.1','C68.8','C68.9','C69.0','C69.00','C69.01','C69.02','C69.1','C69.10','C69.11','C69.12','C69.2','C69.20','C69.21','C69.22','C69.3','C69.30','C69.31','C69.32','C69.4','C69.40','C69.41','C69.42','C69.5','C69.50','C69.51','C69.52','C69.6','C69.60','C69.61','C69.62','C69.8','C69.80','C69.81','C69.82','C69.9','C69.90','C69.91','C69.92','C70.0','C70.1','C70.9','C71.0','C71.1','C71.2','C71.3','C71.4','C71.5','C71.6','C71.7','C71.8','C71.9','C72.0','C72.1','C72.2','C72.20','C72.21','C72.22','C72.3','C72.30','C72.31','C72.32','C72.4','C72.40','C72.41','C72.42','C72.5','C72.50','C72.59','C72.9','C74.0','C74.00','C74.01','C74.02','C74.1','C74.10','C74.11','C74.12','C74.9','C74.90','C74.91','C74.92','C75.0','C75.1','C75.2','C75.3','C75.4','C75.5','C75.8','C75.9','C76.0','C76.1','C76.2','C76.3','C76.4','C76.40','C76.41','C76.42','C76.5','C76.50','C76.51','C76.52','C76.8','C7A.0','C7A.00','C7A.01','C7A.010','C7A.011','C7A.012','C7A.019','C7A.02','C7A.020','C7A.021','C7A.022','C7A.023','C7A.024','C7A.025','C7A.026','C7A.029','C7A.09','C7A.090','C7A.091','C7A.092','C7A.093','C7A.094','C7A.095','C7A.096','C7A.098','C7A.1','C7A.8','C7B.8','C80.0','C80.1','C80.2','C81.0','C81.00','C81.01','C81.02','C81.03','C81.04','C81.05','C81.06','C81.07','C81.08','C81.09','C81.1','C81.10','C81.11','C81.12','C81.13','C81.14','C81.15','C81.16','C81.17','C81.18','C81.19','C81.2','C81.20','C81.21','C81.22','C81.23','C81.24','C81.25','C81.26','C81.27','C81.28','C81.29','C81.3','C81.30','C81.31','C81.32','C81.33','C81.34','C81.35','C81.36','C81.37','C81.38','C81.39','C81.4','C81.40','C81.41','C81.42','C81.43','C81.44','C81.45','C81.46','C81.47','C81.48','C81.49','C81.7','C81.70','C81.71','C81.72','C81.73','C81.74','C81.75','C81.76','C81.77','C81.78','C81.79','C81.9','C81.90','C81.91','C81.92','C81.93','C81.94','C81.95','C81.96','C81.97','C81.98','C81.99','C82.0','C82.00','C82.01','C82.02','C82.03','C82.04','C82.05','C82.06','C82.07','C82.08','C82.09','C82.1','C82.10','C82.11','C82.12','C82.13','C82.14','C82.15','C82.16','C82.17','C82.18','C82.19','C82.2','C82.20','C82.21','C82.22','C82.23','C82.24','C82.25','C82.26','C82.27','C82.28','C82.29','C82.3','C82.30','C82.31','C82.32','C82.33','C82.34','C82.35','C82.36','C82.37','C82.38','C82.39','C82.4','C82.40','C82.41','C82.42','C82.43','C82.44','C82.45','C82.46','C82.47','C82.48','C82.49','C82.5','C82.50','C82.51','C82.52','C82.53','C82.54','C82.55','C82.56','C82.57','C82.58','C82.59','C82.6','C82.60','C82.61','C82.62','C82.63','C82.64','C82.65','C82.66','C82.67','C82.68','C82.69','C82.70','C82.71','C82.72','C82.73','C82.74','C82.75','C82.76','C82.77','C82.78','C82.79','C82.8','C82.80','C82.81','C82.82','C82.83','C82.84','C82.85','C82.86','C82.87','C82.88','C82.89','C82.9','C82.90','C82.91','C82.92','C82.93','C82.94','C82.95','C82.96','C82.97','C82.98','C82.99','C83.0','C83.00','C83.01','C83.02','C83.03','C83.04','C83.05','C83.06','C83.07','C83.08','C83.09','C83.1','C83.10','C83.11','C83.12','C83.13','C83.14','C83.15','C83.16','C83.17','C83.18','C83.19','C83.20','C83.21','C83.22','C83.23','C83.24','C83.25','C83.26','C83.27','C83.28','C83.29','C83.3','C83.30','C83.31','C83.32','C83.33','C83.34','C83.35','C83.36','C83.37','C83.38','C83.39','C83.40','C83.41','C83.42','C83.43','C83.44','C83.45','C83.46','C83.47','C83.48','C83.49','C83.5','C83.50','C83.51','C83.52','C83.53','C83.54','C83.55','C83.56','C83.57','C83.58','C83.59','C83.60','C83.61','C83.62','C83.63','C83.64','C83.65','C83.66','C83.67','C83.68','C83.69','C83.7','C83.70','C83.71','C83.72','C83.73','C83.74','C83.75','C83.76','C83.77','C83.78','C83.79','C83.8','C83.80','C83.81','C83.82','C83.83','C83.84','C83.85','C83.86','C83.87','C83.88','C83.89','C83.9','C83.90','C83.91','C83.92','C83.93','C83.94','C83.95','C83.96','C83.97','C83.98','C83.99','C84.0','C84.00','C84.01','C84.02','C84.03','C84.04','C84.05','C84.06','C84.07','C84.08','C84.09','C84.1','C84.10','C84.11','C84.12','C84.13','C84.14','C84.15','C84.16','C84.17','C84.18','C84.19','C84.20','C84.21','C84.22','C84.23','C84.24','C84.25','C84.26','C84.27','C84.28','C84.29','C84.30','C84.31','C84.32','C84.33','C84.34','C84.35','C84.36','C84.37','C84.38','C84.39','C84.4','C84.40','C84.41','C84.42','C84.43','C84.44','C84.45','C84.46','C84.47','C84.48','C84.49','C84.50','C84.51','C84.52','C84.53','C84.54','C84.55','C84.56','C84.57','C84.58','C84.59','C84.6','C84.60','C84.61','C84.62','C84.63','C84.64','C84.65','C84.66','C84.67','C84.68','C84.69','C84.7','C84.70','C84.71','C84.72','C84.73','C84.74','C84.75','C84.76','C84.77','C84.78','C84.79','C84.9','C84.90','C84.91','C84.92','C84.93','C84.94','C84.95','C84.96','C84.97','C84.98','C84.99','C84.A','C84.A0','C84.A1','C84.A2','C84.A3','C84.A4','C84.A5','C84.A6','C84.A7','C84.A8','C84.A9','C84.Z','C84.Z0','C84.Z1','C84.Z2','C84.Z3','C84.Z4','C84.Z5','C84.Z6','C84.Z7','C84.Z8','C84.Z9','C85.00','C85.01','C85.02','C85.03','C85.04','C85.05','C85.06','C85.07','C85.08','C85.09','C85.1','C85.10','C85.11','C85.12','C85.13','C85.14','C85.15','C85.16','C85.17','C85.18','C85.19','C85.2','C85.20','C85.21','C85.22','C85.23','C85.24','C85.25','C85.26','C85.27','C85.28','C85.29','C85.70','C85.71','C85.72','C85.73','C85.74','C85.75','C85.76','C85.77','C85.78','C85.79','C85.8','C85.80','C85.81','C85.82','C85.83','C85.84','C85.85','C85.86','C85.87','C85.88','C85.89','C85.9','C85.90','C85.91','C85.92','C85.93','C85.94','C85.95','C85.96','C85.97','C85.98','C85.99','C86.0','C86.1','C86.2','C86.3','C86.4','C86.5','C86.6','C88.0','C88.1','C88.2','C88.3','C88.4','C88.7','C88.8','C88.9','C90.0','C90.00','C90.01','C90.02','C90.1','C90.10','C90.11','C90.12','C90.2','C90.20','C90.21','C90.22','C90.3','C90.30','C90.31','C90.32','C91.0','C91.00','C91.01','C91.02','C91.1','C91.10','C91.11','C91.12','C91.20','C91.21','C91.3','C91.30','C91.31','C91.32','C91.4','C91.40','C91.41','C91.42','C91.5','C91.50','C91.51','C91.52','C91.6','C91.60','C91.61','C91.62','C91.70','C91.71','C91.9','C91.90','C91.91','C91.92','C91.A','C91.A0','C91.A1','C91.A2','C91.Z','C91.Z0','C91.Z1','C91.Z2','C92.0','C92.00','C92.01','C92.02','C92.1','C92.10','C92.11','C92.12','C92.2','C92.20','C92.21','C92.22','C92.3','C92.30','C92.31','C92.32','C92.4','C92.40','C92.41','C92.42','C92.5','C92.50','C92.51','C92.52','C92.6','C92.60','C92.61','C92.62','C92.70','C92.71','C92.9','C92.90','C92.91','C92.92','C92.A','C92.A0','C92.A1','C92.A2','C92.Z','C92.Z0','C92.Z1','C92.Z2','C93.0','C93.00','C93.01','C93.02','C93.1','C93.10','C93.11','C93.12','C93.20','C93.21','C93.3','C93.30','C93.31','C93.32','C93.70','C93.71','C93.9','C93.90','C93.91','C93.92','C93.Z','C93.Z0','C93.Z1','C93.Z2','C94.0','C94.00','C94.01','C94.02','C94.10','C94.11','C94.2','C94.20','C94.21','C94.22','C94.3','C94.30','C94.31','C94.32','C94.4','C94.40','C94.41','C94.42','C94.50','C94.51','C94.6','C94.70','C94.71','C94.8','C94.80','C94.81','C94.82','C95.0','C95.00','C95.01','C95.02','C95.1','C95.10','C95.11','C95.12','C95.20','C95.21','C95.70','C95.71','C95.9','C95.90','C95.91','C95.92','C96.0','C96.1','C96.2','C96.20','C96.21','C96.22','C96.29','C96.3','C96.4','C96.5','C96.6','C96.7','C96.9','C96.A','C96.Z','D09.0','D27.9','D46.0','D46.1','D46.2','D46.20','D46.21','D46.22','D46.3','D57.0','D57.00','D57.01','D57.02','D57.1','D57.2','D57.20','D57.21','D57.211','D57.212','D57.219','D57.3','D57.4','D57.40','D57.41','D57.411','D57.412','D57.419','D57.8','D57.80','D57.81','D57.811','D57.812','D57.819','D70.0','D70.1','D70.2','D70.3','D70.4','D70.8','D70.9','D72.0','D72.81','D75.81','D75.89','D75.9','D80.0','D80.1','D80.2','D80.3','D80.4','D80.5','D80.6','D80.7','D80.8','D80.9','D81.0','D81.1','D81.2','D81.3','D81.30','D81.31','D81.32','D81.39','D81.4','D81.5','D81.6','D81.7','D81.8','D81.81','D81.810','D81.818','D81.819','D81.89','D81.9','D82.0','D82.1','D82.2','D82.3','D82.4','D82.8','D82.9','D83.0','D83.1','D83.2','D83.8','D83.9','D84.0','D84.1','D84.8','D84.9','D89.0','D89.1','D89.2','D89.3','D89.8','D89.81','D89.810','D89.811','D89.812','D89.813','D89.82','D89.89','D89.9','K70.3','K70.30','K70.31','K70.4','K70.40','K70.41','K72.0','K72.00','K72.01','K72.1','K72.10','K72.11','K72.9','K72.90','K72.91','K74.3','K74.4','K74.5','K74.6','N04.0','N04.1','N04.2','N04.3','N04.4','N04.5','N04.6','N04.7','N04.8','N04.9','O98.7','O98.71','O98.711','O98.712','O98.713','O98.719','O98.72','O98.73','R18.0','R18.8']
cimmuuno = spark.createDataFrame(cimmuno,col).withColumn('tp', lit('covid')).createOrReplaceTempView("cimmuno_T")

#immnunpsuppred -flu
fimmuno=['D81.82','D57.03','D57.09','D57.213','D57.218','D57.413','D57.418','D57.42','D57.43','D57.431','D57.432','D57.433','D57.438','D57.439','D57.44','D57.45','D57.451','D57.452','D57.453','D57.458','D57.459','D57.813','D57.818','D72.10','D72.11','D72.110','D72.111','D72.118','D72.119','D72.12','D72.18','D72.19','D84.81','D84.82','D84.821','D84.822','D84.89','D89.83','D89.831','D89.832','D89.833','D89.834','D89.835','D89.839','N04.A','D89.44','C84.7A','D89.84','D57.434','D57.454','D61.02','D57.814','D57.04','N04.29','D57.214','D57.414','N04.21','N04.20','N04.22','B97.35','C00.0','C00.1','C00.2','C00.3','C00.4','C00.5','C00.6','C00.8','C00.9','C02.0','C02.1','C02.2','C02.3','C02.4','C02.8','C02.9','C03.0','C03.1','C03.9','C04.0','C04.1','C04.8','C04.9','C05.0','C05.1','C05.2','C05.8','C05.9','C06.0','C06.1','C06.2','C06.8','C06.80','C06.89','C06.9','C08.0','C08.1','C08.9','C81.0','C81.00','C81.01','C81.02','C81.03','C81.04','C81.05','C81.06','C81.07','C81.08','C81.09','C81.1','C81.10','C81.11','C81.12','C81.13','C81.14','C81.15','C81.16','C81.17','C81.18','C81.19','C81.2','C81.20','C81.21','C81.22','C81.23','C81.24','C81.25','C81.26','C81.27','C81.28','C81.29','C81.3','C81.30','C81.31','C81.32','C81.33','C81.34','C81.35','C81.36','C81.37','C81.38','C81.39','C81.4','C81.40','C81.41','C81.42','C81.43','C81.44','C81.45','C81.46','C81.47','C81.48','C81.49','C81.7','C81.70','C81.71','C81.72','C81.73','C81.74','C81.75','C81.76','C81.77','C81.78','C81.79','C81.9','C81.90','C81.91','C81.92','C81.93','C81.94','C81.95','C81.96','C81.97','C81.98','C81.99','C82.0','C82.00','C82.01','C82.02','C82.03','C82.04','C82.05','C82.06','C82.07','C82.08','C82.09','C82.1','C82.10','C82.11','C82.12','C82.13','C82.14','C82.15','C82.16','C82.17','C82.18','C82.19','C82.2','C82.20','C82.21','C82.22','C82.23','C82.24','C82.25','C82.26','C82.27','C82.28','C82.29','C82.3','C82.30','C82.31','C82.32','C82.33','C82.34','C82.35','C82.36','C82.37','C82.38','C82.39','C82.4','C82.40','C82.41','C82.42','C82.43','C82.44','C82.45','C82.46','C82.47','C82.48','C82.49','C82.5','C82.50','C82.51','C82.52','C82.53','C82.54','C82.55','C82.56','C82.57','C82.58','C82.59','C82.6','C82.60','C82.61','C82.62','C82.63','C82.64','C82.65','C82.66','C82.67','C82.68','C82.69','C82.70','C82.71','C82.72','C82.73','C82.74','C82.75','C82.76','C82.77','C82.78','C82.79','C82.8','C82.80','C82.81','C82.82','C82.83','C82.84','C82.85','C82.86','C82.87','C82.88','C82.89','C82.9','C82.90','C82.91','C82.92','C82.93','C82.94','C82.95','C82.96','C82.97','C82.98','C82.99','C83.0','C83.00','C83.01','C83.02','C83.03','C83.04','C83.05','C83.06','C83.07','C83.08','C83.09','C83.1','C83.10','C83.11','C83.12','C83.13','C83.14','C83.15','C83.16','C83.17','C83.18','C83.19','C83.20','C83.21','C83.22','C83.23','C83.24','C83.25','C83.26','C83.27','C83.28','C83.29','C83.3','C83.30','C83.31','C83.32','C83.33','C83.34','C83.35','C83.36','C83.37','C83.38','C83.39','C83.40','C83.41','C83.42','C83.43','C83.44','C83.45','C83.46','C83.47','C83.48','C83.49','C83.5','C83.50','C83.51','C83.52','C83.53','C83.54','C83.55','C83.56','C83.57','C83.58','C83.59','C83.60','C83.61','C83.62','C83.63','C83.64','C83.65','C83.66','C83.67','C83.68','C83.69','C83.7','C83.70','C83.71','C83.72','C83.73','C83.74','C83.75','C83.76','C83.77','C83.78','C83.79','C83.8','C83.80','C83.81','C83.82','C83.83','C83.84','C83.85','C83.86','C83.87','C83.88','C83.89','C83.9','C83.90','C83.91','C83.92','C83.93','C83.94','C83.95','C83.96','C83.97','C83.98','C83.99','C84.0','C84.00','C84.01','C84.02','C84.03','C84.04','C84.05','C84.06','C84.07','C84.08','C84.09','C84.1','C84.10','C84.11','C84.12','C84.13','C84.14','C84.15','C84.16','C84.17','C84.18','C84.19','C84.20','C84.21','C84.22','C84.23','C84.24','C84.25','C84.26','C84.27','C84.28','C84.29','C84.30','C84.31','C84.32','C84.33','C84.34','C84.35','C84.36','C84.37','C84.38','C84.39','C84.4','C84.40','C84.41','C84.42','C84.43','C84.44','C84.45','C84.46','C84.47','C84.48','C84.49','C84.50','C84.51','C84.52','C84.53','C84.54','C84.55','C84.56','C84.57','C84.58','C84.59','C84.6','C84.60','C84.61','C84.62','C84.63','C84.64','C84.65','C84.66','C84.67','C84.68','C84.69','C84.7','C84.70','C84.71','C84.72','C84.73','C84.74','C84.75','C84.76','C84.77','C84.78','C84.79','C84.9','C84.90','C84.91','C84.92','C84.93','C84.94','C84.95','C84.96','C84.97','C84.98','C84.99','C84.A','C84.A0','C84.A1','C84.A2','C84.A3','C84.A4','C84.A5','C84.A6','C84.A7','C84.A8','C84.A9','C84.Z','C84.Z0','C84.Z1','C84.Z2','C84.Z3','C84.Z4','C84.Z5','C84.Z6','C84.Z7','C84.Z8','C84.Z9','C85.00','C85.01','C85.02','C85.03','C85.04','C85.05','C85.06','C85.07','C85.08','C85.09','C85.1','C85.10','C85.11','C85.12','C85.13','C85.14','C85.15','C85.16','C85.17','C85.18','C85.19','C85.2','C85.20','C85.21','C85.22','C85.23','C85.24','C85.25','C85.26','C85.27','C85.28','C85.29','C85.70','C85.71','C85.72','C85.73','C85.74','C85.75','C85.76','C85.77','C85.78','C85.79','C85.8','C85.80','C85.81','C85.82','C85.83','C85.84','C85.85','C85.86','C85.87','C85.88','C85.89','C85.9','C85.90','C85.91','C85.92','C85.93','C85.94','C85.95','C85.96','C85.97','C85.98','C85.99','C86.0','C86.1','C86.2','C86.3','C86.4','C86.5','C86.6','C88.0','C88.1','C88.2','C88.3','C88.4','C88.7','C88.8','C88.9','C90.0','C90.00','C90.01','C90.02','C90.1','C90.10','C90.11','C90.12','C90.2','C90.20','C90.21','C90.22','C90.3','C90.30','C90.31','C90.32','C91.0','C91.00','C91.01','C91.02','C91.1','C91.10','C91.11','C91.12','C91.20','C91.21','C91.3','C91.30','C91.31','C91.32','C91.4','C91.40','C91.41','C91.42','C91.5','C91.50','C91.51','C91.52','C91.6','C91.60','C91.61','C91.62','C91.70','C91.71','C91.9','C91.90','C91.91','C91.92','C91.A','C91.A0','C91.A1','C91.A2','C91.Z','C91.Z0','C91.Z1','C91.Z2','C92.0','C92.00','C92.01','C92.02','C92.1','C92.10','C92.11','C92.12','C92.2','C92.20','C92.21','C92.22','C92.3','C92.30','C92.31','C92.32','C92.4','C92.40','C92.41','C92.42','C92.5','C92.50','C92.51','C92.52','C92.6','C92.60','C92.61','C92.62','C92.70','C92.71','C92.9','C92.90','C92.91','C92.92','C92.A','C92.A0','C92.A1','C92.A2','C92.Z','C92.Z0','C92.Z1','C92.Z2','C93.0','C93.00','C93.01','C93.02','C93.1','C93.10','C93.11','C93.12','C93.20','C93.21','C93.3','C93.30','C93.31','C93.32','C93.70','C93.71','C93.9','C93.90','C93.91','C93.92','C93.Z','C93.Z0','C93.Z1','C93.Z2','C94.0','C94.00','C94.01','C94.02','C94.10','C94.11','C94.2','C94.20','C94.21','C94.22','C94.3','C94.30','C94.31','C94.32','C94.4','C94.40','C94.41','C94.42','C94.50','C94.51','C94.6','C94.70','C94.71','C94.8','C94.80','C94.81','C94.82','C95.0','C95.00','C95.01','C95.02','C95.1','C95.10','C95.11','C95.12','C95.20','C95.21','C95.70','C95.71','C95.9','C95.90','C95.91','C95.92','C96.0','C96.1','C96.2','C96.20','C96.21','C96.22','C96.29','C96.3','C96.4','C96.5','C96.6','C96.7','C96.9','C96.A','C96.Z','D27.9','D46.0','D46.1','D46.2','D46.20','D46.21','D46.22','D46.3','D46.4','D46.71','D46.72','D46.73','D46.79','D46.9','D46.A','D46.B','D46.C','D46.Z','D47.4','D57.0','D57.00','D57.01','D57.02','D57.1','D57.2','D57.20','D57.21','D57.211','D57.212','D57.219','D57.3','D57.4','D57.40','D57.41','D57.411','D57.412','D57.419','D57.8','D57.80','D57.81','D57.811','D57.812','D57.819','D61.0','D61.01','D61.09','D61.2','D61.9','D70.0','D70.1','D70.2','D70.3','D70.4','D70.8','D70.9','D72.0','D72.1','D72.8','D72.81','D72.810','D72.818','D72.819','D72.82','D72.820','D72.821','D72.822','D72.823','D72.824','D72.825','D72.828','D72.829','D72.89','D72.9','D73.0','D75.81','D75.89','D75.9','D80.0','D80.1','D80.2','D80.3','D80.4','D80.5','D80.6','D80.7','D80.8','D80.9','D81.0','D81.1','D81.2','D81.3','D81.30','D81.31','D81.32','D81.39','D81.4','D81.5','D81.6','D81.7','D81.8','D81.81','D81.810','D81.818','D81.819','D81.89','D81.9','D82.0','D82.1','D82.2','D82.3','D82.4','D82.8','D82.9','D89.4','D83.0','D83.1','D83.2','D83.8','D83.9','D84.0','D84.1','D84.8','D84.9','D89.0','D89.1','D89.2','D89.3','D89.40','D89.41','D89.42','D89.43','D89.49','D89.8','D89.81','D89.810','D89.811','D89.812','D89.813','D89.82','D89.89','D89.9','K70.3','K70.30','K70.31','K70.4','K70.40','K70.41','K72.0','K72.00','K72.01','K72.1','K72.10','K72.11','K72.9','K72.90','K72.91','K74.3','K74.4','K74.5','K74.6','N04.0','N04.1','N04.2','N04.3','N04.4','N04.5','N04.6','N04.7','N04.8','N04.9','O98.7','O98.71','O98.711','O98.712','O98.713','O98.719','O98.72','O98.73','R18.0','R18.8','R76.0','R76.1','R76.11','R76.12','R76.8','R76.9','R83.4','R84.4','R85.4','R86.4','R87.4','R89.4']
fimmuno = spark.createDataFrame(fimmuno,col).withColumn('tp', lit('flu')).createOrReplaceTempView("fimmuno_T")

#6 Metabolic-covid
cmet=['Z68.3','Z68.30','Z68.31','Z68.32','Z68.33','Z68.34','Z68.35','Z68.36','Z68.37','Z68.38','Z68.39','Z68.4','Z68.41','Z68.42','Z68.43','Z68.44','Z68.45','E88.811','E88.818','E08.0','E08.00','E08.01','E08.1','E08.10','E08.11','E08.2','E08.21','E08.22','E08.29','E08.3','E08.31','E08.311','E08.319','E08.32','E08.321','E08.3211','E08.3212','E09.36','E08.3213','E08.3219','E08.329','E08.3291','E08.3292','E08.3293','E08.3299','E08.33','E08.331','E08.3311','E08.3312','E08.3313','E08.3319','E08.339','E08.3391','E08.3392','E08.3393','E08.3399','E08.34','E08.341','E08.3411','E08.3412','E08.3413','E08.3419','E08.349','E08.3491','E08.3492','E08.3493','E08.3499','E08.35','E08.351','E08.3511','E08.3512','E08.3513','E08.3519','E08.352','E08.3521','E08.3522','E11.61','E08.3523','E08.3529','E08.353','E08.3531','E08.3532','E08.3533','E08.3539','E08.354','E08.3541','E08.3542','E11.610','E08.3543','E08.3549','E08.355','E08.3551','E08.3552','E08.3553','E08.3559','E08.359','E08.3591','E08.3592','E08.3593','E08.3599','E08.36','E08.37X1','E08.37X2','E08.37X3','E08.37X9','E08.39','E08.4','E08.40','E08.41','E08.42','E08.43','E08.44','E08.49','E08.5','E08.51','E08.52','E08.59','E08.6','E08.61','E08.610','E08.618','E08.62','E08.620','E08.621','E08.622','E08.628','E08.63','E08.630','E08.638','E08.64','E08.640','E08.641','E08.649','E08.65','E08.69','E08.8','E08.9','E09.0','E09.00','E09.01','E09.1','E09.10','E09.11','E09.2','E09.21','E09.22','E09.29','E09.3','E09.31','E09.311','E09.319','E09.32','E09.321','E09.3211','E09.3212','E09.3213','E09.3219','E09.329','E09.3291','E09.3292','E09.3293','E09.3299','E09.33','E09.331','E09.3311','E09.3312','E09.3313','E09.3319','E09.339','E09.3391','E09.3392','E09.3393','E09.3399','E09.34','E09.341','E09.3411','E09.3412','E09.3413','E09.3419','E09.349','E09.3491','E09.3492','E09.3493','E09.3499','E09.35','E09.351','E09.3511','E09.3512','E09.3513','E09.3519','E09.352','E09.3521','E09.3522','E09.3523','E09.3529','E09.353','E09.3531','E09.3532','E09.3533','E09.3539','E09.354','E09.3541','E09.3542','E09.3543','E09.3549','E09.355','E09.3551','E09.3552','E09.3553','E09.3559','E09.359','E09.3591','E09.3592','E09.3593','E09.3599','E09.37','E09.37X1','E09.37X2','E09.37X3','E09.37X9','E09.39','E09.4','E09.40','E09.41','E09.42','E09.43','E09.44','E09.49','E09.5','E09.51','E09.52','E09.59','E09.6','E09.61','E09.610','E09.618','E09.62','E09.620','E09.621','E09.622','E09.628','E09.63','E09.630','E09.638','E09.64','E09.640','E09.641','E09.649','E09.65','E09.69','E09.8','E09.9','E10.1','E10.10','E10.11','E10.2','E10.21','E10.22','E10.29','E10.3','E10.31','E10.311','E10.319','E10.32','E10.321','E10.3211','E10.3212','E10.3213','E10.3219','E10.329','E10.3291','E10.3292','E10.3293','E10.3299','E10.33','E10.331','E10.3311','E10.3312','E10.3313','E10.3319','E10.3391','E10.3392','E10.3393','E10.3399','E10.34','E10.341','E10.3411','E10.3412','E10.3413','E10.3419','E10.349','E10.3491','E10.3492','E10.3493','E10.3499','E10.35','E10.351','E10.3511','E10.3512','E10.3513','E10.3519','E10.352','E10.3521','E10.3522','E10.3523','E10.3529','E10.353','E10.3531','E10.3532','E10.3533','E10.3539','E10.354','E10.3541','E10.3542','E10.3543','E10.3549','E10.355','E10.3551','E10.3552','E10.3553','E10.3559','E10.359','E10.3591','E11.6','E10.3592','E10.3593','E10.3599','E10.36','E10.37','E10.37X1','E10.37X2','E10.37X3','E10.37X9','E10.39','E10.4','E10.40','E10.41','E10.42','E10.43','E10.44','E10.49','E10.5','E10.51','E10.52','E10.59','E10.6','E10.61','E10.610','E10.618','E10.62','E10.620','E10.621','E10.622','E10.628','E10.63','E10.630','E10.638','E10.64','E10.640','E10.641','E10.649','E10.65','E10.69','E10.8','E10.9','E11.0','E11.00','E11.01','E11.1','E11.10','E11.11','E11.2','E11.21','E11.22','E11.29','E11.3','E11.31','E11.311','E11.319','E11.32','E11.321','E11.3211','E11.3212','E11.3213','E11.3219','E11.329','E11.3291','E11.3292','E11.3293','E11.3299','E11.33','E11.331','E11.3311','E11.3312','E11.3313','E11.3319','E11.339','E11.3391','E11.3392','E11.3393','E11.3399','E11.34','E11.341','E11.3411','E11.3412','E11.3413','E11.3419','E11.349','E11.3491','E11.3492','E11.3493','E11.3499','E11.35','E11.351','E11.3511','E11.3512','E11.3513','E11.3519','E11.352','E11.3521','E11.3522','E11.3523','E11.3529','E11.353','E11.3531','E11.3532','E11.3533','E11.3539','E11.354','E11.3541','E11.3542','E11.3543','E11.3549','E11.355','E11.3551','E11.3552','E11.3553','E11.3559','E11.359','E11.3591','E11.3592','E11.3593','E11.3599','E11.36','E11.37','E11.37X1','E11.37X2','E11.37X3','E11.37X9','E11.39','E11.4','E11.40','E11.41','E11.42','E11.43','E11.44','E11.49','E11.5','E11.51','E11.52','E11.59','E11.618','E11.62','E11.620','E11.621','E11.622','E11.628','E11.63','E11.630','E11.638','E11.64','E11.641','E11.649','E11.65','E11.69','E11.8','E11.9','E13.0','E13.00','E13.01','E13.1','E13.10','E13.11','E13.2','E13.21','E13.22','E13.29','E13.3','E13.31','E13.311','E13.319','E13.32','E13.321','E13.3211','E13.3212','E13.3213','E13.3219','E13.329','E13.3291','E13.3292','E13.3293','E13.3299','E13.33','E13.331','E13.3311','E13.3312','E13.3313','E13.3319','E13.339','E13.3391','E13.3392','E13.3393','E13.3399','E13.34','E13.341','E13.3411','E13.3412','E13.3413','E13.3419','E13.349','E13.3491','E13.3492','E13.3493','E13.3499','E13.35','E13.351','E13.3511','E13.5','E13.3512','E13.3513','E13.3519','E13.352','E13.3521','E13.3522','E13.3523','E13.3529','E13.353','E13.3531','E13.3532','E13.3533','E13.3539','E13.354','E13.3541','E13.3542','E13.3543','E13.3549','E13.355','E13.3551','E13.3552','E13.3553','E13.3559','E13.359','E13.3591','E13.3592','E13.3593','E13.3599','E13.36','E13.37','E13.37X1','E13.37X2','E13.37X3','E13.37X9','E13.39','E13.4','E13.40','E13.41','E13.42','E13.43','E13.44','E13.49','E13.51','E13.52','E13.59','E13.6','E13.61','E13.610','E13.618','E13.62','E13.620','E13.621','E13.622','E13.628','E13.63','E13.630','E13.638','E13.64','E13.640','E13.641','E13.649','E13.65','E13.69','E13.8','E13.9','E16.0','E16.1','E16.2','E16.3','E16.4','E16.8','E16.9','E24.4','E31.2','E31.20','E31.21','E31.22','E31.23','E34.0','E44.0','E44.1','E64.0','E66.0','E66.01','E66.09','E66.1','E66.2','E66.8','E66.9']
cmet = spark.createDataFrame(cmet,col).withColumn('tp', lit('covid')).createOrReplaceTempView("cmet_T")

#metabolic-flu
fmet=['E34.328','E34.39','E34.329','E34.321','E34.30','E34.32','E34.322','E34.31','E70.81','E70.89','E74.81','E74.810','E74.818','E74.819','E74.89','E75.244','Z68.4','Z68.41','Z68.42','Z68.43','Z68.44','Z68.45','E88.811','E20.811','E20.812','E88.818','E20.818','E74.05','E75.27','E79.82','E79.89','E88.810','E20.89','E20.81','E20.819','E88.43','E88.819','E20.810','E75.28','E79.81','E00.0','E00.1','E00.2','E00.9','E01.0','E01.1','E01.2','E01.8','E03.0','E03.1','E03.2','E03.3','E03.4','E03.5','E03.8','E03.9','E05.0','E05.00','E05.01','E05.1','E05.10','E05.11','E05.2','E05.20','E05.21','E05.3','E05.30','E05.31','E05.4','E05.40','E05.41','E05.8','E05.80','E05.81','E05.9','E05.90','E05.91','E06.0','E06.1','E06.2','E06.3','E06.4','E06.5','E06.9','E08.0','E08.00','E08.01','E08.1','E08.10','E08.11','E08.2','E08.21','E08.22','E08.29','E08.3','E08.31','E08.311','E08.319','E08.32','E08.321','E08.3211','E08.3212','E09.36','E08.3213','E08.3219','E08.329','E08.3291','E08.3292','E08.3293','E08.3299','E08.33','E08.331','E08.3311','E08.3312','E08.3313','E08.3319','E08.339','E08.3391','E08.3392','E08.3393','E08.3399','E08.34','E08.341','E08.3411','E08.3412','E08.3413','E08.3419','E08.349','E08.3491','E08.3492','E08.3493','E08.3499','E08.35','E08.351','E08.3511','E08.3512','E08.3513','E08.3519','E08.352','E08.3521','E08.3522','E11.61','E08.3523','E08.3529','E08.353','E08.3531','E08.3532','E08.3533','E08.3539','E08.354','E08.3541','E08.3542','E11.610','E08.3543','E08.3549','E08.355','E08.3551','E08.3552','E08.3553','E08.3559','E08.359','E08.3591','E08.3592','E08.3593','E08.3599','E08.36','E08.37','E08.37X1','E08.37X2','E08.37X3','E08.37X9','E08.39','E08.4','E08.40','E08.41','E08.42','E08.43','E08.44','E08.49','E08.5','E08.51','E08.52','E08.59','E08.6','E08.61','E08.610','E08.618','E08.62','E08.620','E08.621','E08.622','E08.628','E08.63','E08.630','E08.638','E08.64','E08.640','E08.641','E08.649','E08.65','E08.69','E08.8','E08.9','E09.0','E09.00','E09.01','E09.1','E09.10','E09.11','E09.2','E09.21','E09.22','E09.29','E09.3','E09.31','E09.311','E09.319','E09.32','E09.321','E09.3211','E09.3212','E09.3213','E09.3219','E09.329','E09.3291','E09.3292','E09.3293','E09.3299','E09.33','E09.331','E09.3311','E09.3312','E09.3313','E09.3319','E09.339','E09.3391','E09.3392','E09.3393','E09.3399','E09.34','E09.341','E09.3411','E09.3412','E09.3413','E09.3419','E09.349','E09.3491','E09.3492','E09.3493','E09.3499','E09.35','E09.351','E09.3511','E09.3512','E09.3513','E09.3519','E09.352','E09.3521','E09.3522','E09.3523','E09.3529','E09.353','E09.3531','E09.3532','E09.3533','E09.3539','E09.354','E09.3541','E09.3542','E09.3543','E09.3549','E09.355','E09.3551','E09.3552','E09.3553','E09.3559','E09.359','E09.3591','E09.3592','E09.3593','E09.3599','E09.37','E09.37X1','E09.37X2','E09.37X3','E09.37X9','E09.39','E09.4','E09.40','E09.41','E09.42','E09.43','E09.44','E09.49','E09.5','E09.51','E09.52','E09.59','E09.6','E09.61','E09.610','E09.618','E09.62','E09.620','E09.621','E09.622','E09.628','E09.63','E09.630','E09.638','E09.64','E09.640','E09.641','E09.649','E09.65','E09.69','E09.8','E09.9','E10.1','E10.10','E10.11','E10.2','E10.21','E10.22','E10.29','E10.3','E10.31','E10.311','E10.319','E10.32','E10.321','E10.3211','E10.3212','E10.3213','E10.3219','E10.329','E10.3291','E10.3292','E10.3293','E10.3299','E10.33','E10.331','E10.3311','E10.3312','E10.3313','E10.3319','E10.339','E10.3391','E10.3392','E10.3393','E10.3399','E10.34','E10.341','E10.3411','E10.3412','E10.3413','E10.3419','E10.349','E10.3491','E10.3492','E10.3493','E10.3499','E10.35','E10.351','E10.3511','E10.3512','E10.3513','E10.3519','E10.352','E10.3521','E10.3522','E10.3523','E10.3529','E10.353','E10.3531','E10.3532','E10.3533','E10.3539','E10.354','E10.3541','E10.3542','E10.3543','E10.3549','E10.355','E10.3551','E10.3552','E10.3553','E10.3559','E10.359','E10.3591','E11.6','E10.3592','E10.3593','E10.3599','E10.36','E10.37','E10.37X1','E10.37X2','E10.37X3','E10.37X9','E10.39','E10.4','E10.40','E10.41','E10.42','E10.43','E10.44','E10.49','E10.5','E10.51','E10.52','E10.59','E10.6','E10.61','E10.610','E10.618','E10.62','E10.620','E10.621','E10.622','E10.628','E10.63','E10.630','E10.638','E10.64','E10.640','E10.641','E10.649','E10.65','E10.69','E10.8','E10.9','E11.0','E11.00','E11.01','E11.1','E11.10','E11.11','E11.2','E11.21','E11.22','E11.29','E11.3','E11.31','E11.311','E11.319','E11.32','E11.321','E11.3211','E11.3212','E11.3213','E11.3219','E11.329','E11.3291','E11.3292','E11.3293','E11.3299','E11.33','E11.331','E11.3311','E11.3312','E11.3313','E11.3319','E11.339','E11.3391','E11.3392','E11.3393','E11.3399','E11.34','E11.341','E11.3411','E11.3412','E11.3413','E11.3419','E11.349','E11.3491','E11.3492','E11.3493','E11.3499','E11.35','E11.351','E11.3511','E11.3512','E11.3513','E11.3519','E11.352','E11.3521','E11.3522','E11.3523','E11.3529','E11.353','E11.3531','E11.3532','E11.3533','E11.3539','E11.354','E11.3541','E11.3542','E11.3543','E11.3549','E11.355','E11.3551','E11.3552','E11.3553','E11.3559','E11.359','E11.3591','E11.3592','E11.3593','E11.3599','E11.36','E11.37','E11.37X1','E11.37X2','E11.37X3','E11.37X9','E11.39','E11.4','E11.40','E11.41','E11.42','E11.43','E11.44','E11.49','E11.5','E11.51','E11.52','E11.59','E11.618','E11.62','E11.620','E11.621','E11.622','E11.628','E11.63','E11.630','E11.638','E11.64','E11.640','E11.641','E11.649','E11.65','E11.69','E11.8','E11.9','E13.0','E13.00','E13.01','E13.1','E13.10','E13.11','E13.2','E13.21','E13.22','E13.29','E13.3','E13.31','E13.311','E13.319','E13.32','E13.321','E13.3211','E13.3212','E13.3213','E13.3219','E13.329','E13.3291','E13.3292','E13.3293','E13.3299','E13.33','E13.331','E13.3311','E13.3312','E13.3313','E13.3319','E13.339','E13.3391','E13.3392','E13.3393','E13.3399','E13.34','E13.341','E13.3411','E13.3412','E13.3413','E13.3419','E13.349','E13.3491','E13.3492','E13.3493','E13.3499','E13.35','E13.351','E13.3511','E13.5','E13.3512','E13.3513','E13.3519','E13.352','E13.3521','E13.3522','E13.3523','E13.3529','E13.353','E13.3531','E13.3532','E13.3533','E13.3539','E13.354','E13.3541','E13.3542','E13.3543','E13.3549','E13.355','E13.3551','E13.3552','E13.3553','E13.3559','E13.359','E13.3591','E13.3592','E13.3593','E13.3599','E13.36','E13.37','E13.37X1','E13.37X2','E13.37X3','E13.37X9','E13.39','E13.4','E13.40','E13.41','E13.42','E13.43','E13.44','E13.49','E13.51','E13.52','E13.59','E13.6','E13.61','E13.610','E13.618','E13.62','E13.620','E13.621','E13.622','E13.628','E13.63','E13.630','E13.638','E13.64','E13.640','E13.641','E13.649','E13.65','E13.69','E13.8','E13.9','E16.0','E16.1','E16.2','E16.3','E16.4','E16.8','E16.9','E20.0','E20.1','E20.8','E20.9','E21.0','E21.1','E21.2','E21.3','E21.4','E21.5','E22.0','E22.1','E22.2','E22.8','E22.9','E23.0','E23.1','E23.2','E23.3','E23.6','E23.7','E24.0','E24.1','E24.2','E24.3','E24.4','E24.8','E24.9','E25.0','E25.8','E25.9','E26.0','E26.01','E26.02','E26.09','E26.1','E26.8','E26.81','E26.89','E26.9','E27.0','E27.1','E27.2','E27.3','E27.4','E27.40','E27.49','E27.5','E27.8','E27.9','E28.0','E28.1','E28.2','E28.3','E28.31','E28.310','E28.319','E28.39','E28.8','E28.9','E29.0','E29.1','E29.8','E29.9','E31.0','E31.1','E31.2','E31.20','E31.21','E31.22','E31.23','E31.8','E31.9','E32.0','E32.1','E32.8','E32.9','E34.0','E34.1','E34.2','E34.3','E34.4','E34.5','E34.50','E34.51','E34.52','E34.8','E34.9','E70.0','E70.1','E70.2','E70.20','E70.21','E70.29','E70.3','E70.30','E70.31','E70.310','E70.311','E70.318','E70.319','E70.32','E70.320','E70.321','E70.328','E70.329','E70.33','E70.330','E70.331','E70.338','E70.339','E70.39','E70.4','E70.40','E70.41','E70.49','E70.5','E70.8','E70.9','E71.0','E71.1','E71.11','E71.110','E71.111','E71.118','E71.12','E71.120','E71.121','E71.128','E71.19','E71.2','E71.3','E71.30','E71.31','E71.310','E71.311','E71.312','E71.313','E71.314','E71.318','E71.32','E71.39','E71.4','E71.40','E71.41','E71.42','E71.43','E71.44','E71.440','E71.448','E71.5','E71.50','E71.51','E71.510','E71.511','E71.518','E71.52','E71.520','E71.521','E71.522','E71.528','E71.529','E71.53','E71.54','E71.540','E71.541','E71.542','E71.548','E72.0','E72.00','E72.01','E72.02','E72.03','E72.04','E72.09','E72.1','E72.10','E72.11','E72.12','E72.19','E72.2','E72.20','E72.21','E72.22','E72.23','E72.29','E72.3','E72.4','E72.5','E72.50','E72.51','E72.52','E72.53','E72.59','E72.8','E72.81','E72.89','E72.9','E74.0','E74.00','E74.01','E74.02','E74.03','E74.04','E74.09','E74.1','E74.10','E74.11','E74.12','E74.19','E74.2','E74.20','E74.21','E74.29','E74.3','E74.31','E74.39','E74.4','E74.8','E74.9','E75.2','E75.21','E75.22','E75.23','E75.24','E75.240','E75.241','E75.242','E75.243','E75.248','E75.249','E75.25','E75.26','E75.29','E76.0','E76.01','E76.02','E76.03','E76.1','E76.2','E76.21','E76.210','E76.211','E76.219','E76.22','E76.29','E76.3','E76.8','E76.9','E77.0','E77.1','E77.8','E77.9','E78.0','E78.00','E78.01','E78.1','E78.2','E78.3','E78.4','E78.41','E78.49','E78.5','E78.6','E78.7','E78.70','E78.71','E78.72','E78.79','E78.8','E78.81','E78.89','E78.9','E79.0','E79.1','E79.2','E79.8','E79.9','E80.0','E80.1','E80.2','E80.20','E80.21','E80.29','E80.3','E80.4','E80.5','E80.6','E80.7','E83.0','E83.00','E83.01','E83.09','E83.1','E83.10','E83.11','E83.110','E83.111','E83.118','E83.119','E83.19','E83.2','E83.3','E83.30','E83.31','E83.32','E83.39','E83.4','E83.40','E83.41','E83.42','E83.49','E83.5','E83.50','E83.51','E83.52','E83.59','E83.8','E83.81','E83.89','E83.9','E85.0','E85.1','E85.2','E85.3','E85.4','E85.8','E85.81','E85.82','E85.89','E85.9','E88.02','E88.09','E88.1','E88.2','E88.3','E88.4','E88.40','E88.41','E88.42','E88.49','E88.8','E88.81','E88.89','E88.9']
fmet = spark.createDataFrame(fmet,col).withColumn('tp', lit('flu')).createOrReplaceTempView("fmet_T")


#6 neurological -covid
cneuro=['G71.034','F02.A1','F03.918','F03.A1','F03.A18','G71.03','F02.A11','F03.92','F01.A18','F01.B2','F02.B11','F03.93','F01.C2','G71.031','F02.C1','F03.A2','F01.A0','F03.B0','F03.94','F01.C11','F01.C1','F01.C0','F01.A1','F02.C0','F01.511','F03.A4','F01.B11','F01.C4','F03.A3','F03.B3','F02.818','F02.B3','G71.0349','F02.C11','F02.C18','F01.B1','F01.A4','F02.84','F03.C2','F01.A3','F02.A0','F03.C1','F03.C3','F01.B0','G71.0341','F03.A0','F01.C18','F02.C3','F03.A11','F02.B1','F02.B18','F01.B','G71.038','F02.A18','F01.518','F02.A4','G71.032','F01.53','F01.B18','F01.B4','F02.A2','F03.B11','F03.C','F03.A','F02.C2','F03.C0','G71.039','F01.B3','F01.52','F02.B0','F03.911','G71.0340','G71.0342','F02.82','F02.A3','F01.54','F01.C3','F01.A','F02.C','F03.B','F02.B2','F03.C18','G71.035','F02.A','F02.B4','F03.B18','F03.B2','F02.C4','F03.C11','F03.B4','F01.C','F02.83','F03.C4','G71.033','F01.A11','F01.A2','F02.811','F02.B','F03.B1','G71.20','G71.21','G71.22','G71.220','G71.228','G71.29','G20.A2','G20.B1','G20.B2','G20.A1','G20.C','G20.B','E75.4','F01.5','F01.50','F01.51','F02.8','F02.80','F02.81','F03.9','F03.90','F03.91','F84.0','F84.2','F84.3','F84.5','F84.8','F84.9','G04.1','G11.4','G13.0','G13.1','G21.0','G21.1','G21.11','G21.19','G21.2','G21.3','G21.4','G21.8','G21.9','G30.0','G30.1','G30.8','G30.9','G31.0','G31.01','G31.09','G31.1','G31.2','G31.83','G45.0','G45.1','G45.2','G45.8','G45.9','G46.0','G46.1','G46.2','G46.3','G46.4','G46.5','G46.6','G46.7','G46.8','G60.0','G60.1','G60.2','G60.3','G60.8','G60.9','G61.0','G61.1','G61.8','G61.81','G61.82','G61.89','G61.9','G62.0','G62.1','G62.2','G62.8','G62.81','G62.82','G62.89','G62.9','G70.0','G70.00','G70.01','G70.1','G70.2','G70.8','G70.80','G70.81','G70.89','G70.9','G71.0','G71.00','G71.01','G71.02','G71.09','G71.1','G71.11','G71.12','G71.13','G71.14','G71.19','G71.2','G71.3','G71.8','G71.9','G72.1','G73.1','G73.3','G73.7','G80.0','G80.1','G80.2','G80.3','G80.4','G80.8','G80.9','G81.0','G81.00','G81.01','G81.02','G81.03','G81.04','G81.1','G81.10','G81.11','G81.12','G81.13','G81.14','G81.9','G81.90','G81.91','G81.92','G81.93','G81.94','G82.2','G82.20','G82.21','G82.22','G82.5','G82.50','G82.51','G82.52','G82.53','G82.54','G83.0','G83.1','G83.10','G83.11','G83.12','G83.13','G83.14','G83.2','G83.20','G83.21','G83.22','G83.23','G83.24','G83.3','G83.30','G83.31','G83.32','G83.33','G83.34','G83.4','G83.5','G83.8','G83.81','G83.82','G83.83','G83.84','G83.89','G83.9','G97.31','G97.32','G99.2','M36.0','Q04.9','Q05.0','Q05.1','Q05.2','Q05.3','Q05.4','Q05.5','Q05.6','Q05.7','Q05.8','Q05.9','Q06.8','Q06.9','Q07.01','Q07.03','Q07.8','Q76.0','Q91.0','Q91.1','Q91.2','Q91.3','Q91.4','Q91.5','Q91.6','Q91.7','Q92.0','Q92.1','Q92.2','Q92.5','Q92.6','Q92.61','Q92.62','Q92.7','Q92.8','Q92.9','Q93.0','Q93.1','Q93.2','Q93.3','Q93.4','Q93.5','Q93.51','Q93.59','Q93.7','Q93.8','Q93.81','Q93.82','Q93.88','Q93.89','Q93.9','Q96.0','R41.8','R41.81','G20.A']
cneuro = spark.createDataFrame(cneuro,col).withColumn('tp', lit('covid')).createOrReplaceTempView("cneuro_T")

#neurological -flu
fneuro=['G71.034','F02.A1','F03.918','F03.A1','F03.A18','G71.03','F02.A11','F03.92','F01.A18','F01.B2','F02.B11','F03.93','F01.C2','G93.31','G71.031','F02.C1','F03.A2','F01.A0','F03.B0','F03.94','F01.C11','F01.C1','F01.C0','F01.A1','F02.C0','F01.511','F03.A4','G93.32','F01.B11','F01.C4','F03.A3','F03.B3','F02.818','F02.B3','G71.0349','F02.C11','F02.C18','F01.B1','F01.A4','F02.84','F03.C2','F01.A3','F02.A0','F03.C1','F03.C3','F01.B0','G71.0341','F03.A0','Q85.82','Q85.89','Q85.81','Q85.83','F01.C18','F02.C3','F03.A11','F02.B1','F02.B18','F01.B','G71.038','F02.A18','F01.518','F02.A4','G71.032','F01.53','F01.B18','F01.B4','F02.A2','F03.B11','F03.C','F03.A','F02.C2','F03.C0','G93.39','G71.039','F01.B3','F01.52','F02.B0','F03.911','G71.0340','G71.0342','F02.82','F02.A3','F01.54','F01.C3','F01.A','F02.C','F03.B','F02.B2','F03.C18','G71.035','F02.A','F02.B4','F03.B18','F03.B2','F02.C4','F03.C11','F03.B4','F01.C','F02.83','F03.C4','G71.033','F01.A11','F01.A2','F02.811','F02.B','F03.B1','G11.10','G11.11','G11.19','G71.20','G71.21','G71.22','G71.220','G71.228','G71.29','P91.82','P91.821','P91.822','P91.823','P91.829','G11.6','G20.A2','G20.B1','G20.B2','G40.C1','G40.C11','G93.42','G93.43','G20.A1','G20.C','G40.C19','G37.81','G93.44','G40.C0','G20.B','G31.80','G31.86','G40.C','G23.3','G40.C01','G40.C09','Q93.52','E75.02','E75.19','E75.4','F01.5','F01.50','F01.51','F02.8','F02.80','F02.81','F03.9','F03.90','F03.91','F84.2','G11.0','G11.1','G11.2','G11.3','G11.4','G11.8','G11.9','G12.0','G12.1','G12.2','G12.20','G12.21','G12.22','G12.23','G12.24','G12.25','G12.29','G12.8','G12.9','G13.0','G13.1','G13.2','G13.8','G21.0','G21.1','G21.11','G21.19','G21.2','G21.3','G21.4','G21.8','G21.9','G23.0','G23.1','G23.2','G23.8','G23.9','G24.0','G24.01','G24.02','G24.09','G24.1','G24.2','G24.3','G24.4','G24.5','G24.8','G24.9','G25.0','G25.1','G25.2','G25.3','G25.4','G25.5','G25.6','G25.61','G25.69','G25.7','G25.70','G25.71','G25.79','G25.8','G25.81','G25.82','G25.83','G25.89','G25.9','G30.0','G30.1','G30.8','G30.9','G31.0','G31.01','G31.09','G31.1','G31.2','G31.8','G31.81','G31.82','G31.83','G31.84','G31.85','G31.89','G31.9','G32.0','G32.8','G32.81','G32.89','G36.0','G36.1','G36.8','G36.9','G37.0','G37.1','G37.2','G37.3','G37.4','G37.5','G37.8','G37.9','G40.511','G40.519','G40.809','G40.819','G45.0','G45.1','G45.2','G45.3','G45.4','G45.8','G45.9','G46.0','G46.1','G46.2','G46.3','G46.4','G46.5','G46.6','G46.7','G46.8','G60.0','G60.1','G60.2','G60.3','G60.8','G60.9','G61.0','G61.1','G61.8','G61.81','G61.82','G61.89','G61.9','G62.0','G62.1','G62.2','G62.8','G62.81','G62.82','G62.89','G62.9','G70.0','G70.00','G70.01','G70.1','G70.2','G70.8','G70.80','G70.81','G70.89','G70.9','G71.0','G71.00','G71.01','G71.02','G71.09','G71.1','G71.11','G71.12','G71.13','G71.14','G71.19','G71.2','G71.3','G71.8','G71.9','G73.1','G73.3','G73.7','G80.0','G80.1','G80.2','G80.3','G80.4','G80.8','G80.9','G81.0','G81.00','G81.01','G81.02','G81.03','G81.04','G81.1','G81.10','G81.11','G81.12','G81.13','G81.14','G81.9','G81.90','G81.91','G81.92','G81.93','G81.94','G82.2','G82.20','G82.21','G82.22','G82.5','G82.50','G82.51','G82.52','G82.53','G82.54','G83.0','G83.1','G83.10','G83.11','G83.12','G83.13','G83.14','G83.2','G83.20','G83.21','G83.22','G83.23','G83.24','G83.3','G83.30','G83.31','G83.32','G83.33','G83.34','G83.4','G83.5','G83.8','G83.81','G83.82','G83.83','G83.84','G83.89','G83.9','G90.3','G91.0','G91.1','G91.2','G91.3','G91.4','G91.8','G91.9','G93.0','G93.1','G93.2','G93.3','G93.4','G93.40','G93.41','G93.49','G93.5','G93.6','G93.7','G93.8','G93.81','G93.82','G93.89','G93.9','G95.0','G95.1','G95.11','G95.19','G95.2','G95.20','G95.29','G95.8','G95.81','G95.89','G95.9','G99.2','H49.81','H49.811','H49.812','H49.813','H49.819','M12.0','M12.00','M12.01','M12.011','M12.012','M12.019','M12.02','M12.021','M12.022','M12.029','M12.03','M12.031','M12.032','M12.039','M12.04','M12.041','M12.042','M12.049','M12.05','M12.051','M12.052','M12.059','M12.06','M12.061','M12.062','M12.069','M12.07','M12.071','M12.072','M12.079','M12.08','M12.09','M36.0','P91.0','P91.1','P91.2','P91.3','P91.4','P91.5','P91.6','P91.60','P91.61','P91.62','P91.63','P91.8','P91.81','P91.811','P91.819','P91.88','P91.9','Q00.0','Q00.1','Q00.2','Q01.0','Q01.1','Q01.2','Q01.8','Q01.9','Q03.0','Q03.1','Q03.8','Q03.9','Q04.0','Q04.1','Q04.2','Q04.3','Q04.4','Q04.5','Q04.6','Q04.8','Q04.9','Q05.0','Q05.1','Q05.2','Q05.3','Q05.4','Q05.5','Q05.6','Q05.7','Q05.8','Q05.9','Q06.0','Q06.1','Q06.2','Q06.3','Q06.4','Q06.8','Q06.9','Q07.0','Q07.00','Q07.01','Q07.02','Q07.03','Q07.8','Q07.9','Q76.0','Q76.1','Q76.2','Q76.3','Q76.4','Q76.41','Q76.411','Q76.412','Q76.413','Q76.414','Q76.415','Q76.419','Q76.42','Q76.425','Q76.426','Q76.427','Q76.428','Q76.429','Q76.49','Q76.5','Q76.6','Q76.7','Q76.8','Q76.9','Q77.0','Q77.1','Q77.2','Q77.3','Q77.4','Q77.5','Q77.6','Q77.7','Q77.8','Q77.9','Q78.0','Q78.1','Q78.2','Q78.3','Q78.4','Q78.5','Q78.6','Q78.8','Q78.9','Q79.0','Q79.1','Q79.2','Q79.3','Q79.4','Q79.5','Q79.51','Q79.59','Q79.6','Q79.60','Q79.61','Q79.62','Q79.63','Q79.69','Q79.8','Q79.9','Q85.0','Q85.00','Q85.01','Q85.02','Q85.03','Q85.09','Q85.1','Q85.8','Q85.9','Q87.4','Q87.40','Q87.41','Q87.410','Q87.418','Q87.42','Q87.43','Q91.0','Q91.1','Q91.2','Q91.3','Q91.4','Q91.5','Q91.6','Q91.7','Q92.0','Q92.1','Q92.2','Q92.5','Q92.6','Q92.61','Q92.62','Q92.7','Q92.8','Q92.9','Q93.0','Q93.1','Q93.2','Q93.3','Q93.4','Q93.5','Q93.51','Q93.59','Q93.7','Q93.8','Q93.81','Q93.82','Q93.88','Q93.89','Q93.9','Q96.0','Q96.1','Q96.2','Q96.3','Q96.4','Q96.8','Q96.9','R41.0','R41.1','R41.2','R41.3','R41.4','R41.8','R41.81','R41.82','R41.83','R41.84','R41.840','R41.841','R41.842','R41.843','R41.844','R41.89','R41.9','G11.5','G20.A','G37.89']
fneuro = spark.createDataFrame(fneuro,col).withColumn('tp', lit('flu')).createOrReplaceTempView("fneuro_T")

#7 Renal _covid
cren=['N01.A','N02.A','N03.A','N04.A','N05.A','N06.A','N07.A','N18.30','N18.31','N18.32','Z49.0','Z49.01','Z49.02','Z49.3','Z49.31','Z49.32','Z91.15','Z94.0','Z99.2','N02.B','N02.B2','N04.29','N06.21','N06.22','N02.B5','N04.21','N02.B1','N02.B6','N06.29','N02.B4','N04.20','N06.20','N02.B9','N04.22','N02.B3','I12.0','I12.9','N01.0','N01.1','N01.2','N01.3','N01.4','N01.5','N01.6','N01.7','N01.8','N01.9','N02.0','N02.1','N02.2','N02.3','N02.4','N02.5','N02.6','N02.7','N02.8','N02.9','N03.0','N03.1','N03.2','N03.3','N03.4','N03.5','N03.6','N03.7','N03.8','N03.9','N04.0','N04.1','N04.2','N04.3','N04.4','N04.5','N04.6','N04.7','N04.8','N04.9','N05.0','N05.1','N05.2','N05.3','N05.4','N05.5','N05.6','N05.7','N05.8','N05.9','N06.0','N06.1','N06.2','N06.3','N06.4','N06.5','N06.6','N06.7','N06.8','N06.9','N07.0','N07.1','N07.2','N07.3','N07.4','N07.5','N07.6','N07.7','N07.8','N07.9','N11.0','N11.1','N11.8','N11.9','N13.1','N13.2','N13.30','N13.39','N14.0','N14.1','N14.2','N14.3','N14.4','N15.0','N15.1','N15.8','N15.9','N18.1','N18.2','N18.3','N18.4','N18.5','N18.6','N18.9','N25.0','N25.1','N25.8','N25.81','N25.89','N25.9','N26.1','N26.2','N26.9','Q27.1','Q60.0','Q60.4','Q60.6','Q61.1','Q61.11','Q61.19','Q61.2','Q61.3','Q61.4','Q62.0','Q62.10','Q62.11','Q62.12','Q62.2','Q62.31','Q62.32','Q62.39','N14.11','N14.19']
cren = spark.createDataFrame(cren,col).withColumn('tp', lit('covid')).createOrReplaceTempView("cren_T")

#Renal -flu
fren=['N01.A','N02.A','N03.A','N04.A','N05.A','N06.A','N07.A','N18.30','N18.31','N18.32','Z49.0','Z49.01','Z49.02','Z49.3','Z49.31','Z49.32','Z91.15','Z94.0','Z99.2','N02.B','N02.B2','N04.29','N06.21','N06.22','N02.B5','N04.21','N02.B1','N02.B6','N06.29','N02.B4','N04.20','N06.20','N02.B9','N04.22','N02.B3','I12.0','I12.9','N01.0','N01.1','N01.2','N01.3','N01.4','N01.5','N01.6','N01.7','N01.8','N01.9','N02.0','N02.1','N02.2','N02.3','N02.4','N02.5','N02.6','N02.7','N02.8','N02.9','N03.0','N03.1','N03.2','N03.3','N03.4','N03.5','N03.6','N03.7','N03.8','N03.9','N04.0','N04.1','N04.2','N04.3','N04.4','N04.5','N04.6','N04.7','N04.8','N04.9','N05.0','N05.1','N05.2','N05.3','N05.4','N05.5','N05.6','N05.7','N05.8','N05.9','N06.0','N06.1','N06.2','N06.3','N06.4','N06.5','N06.6','N06.7','N06.8','N06.9','N07.0','N07.1','N07.2','N07.3','N07.4','N07.5','N07.6','N07.7','N07.8','N07.9','N11.0','N11.1','N11.8','N11.9','N14.0','N14.1','N14.2','N14.3','N14.4','N15.0','N15.1','N15.8','N15.9','N18.1','N18.2','N18.3','N18.4','N18.5','N18.6','N18.9','N25.0','N25.1','N25.8','N25.81','N25.89','N25.9','N26.1','N26.2','N26.9','N28.0','N28.1','N28.8','N28.81','N28.82','N28.83','N28.84','N28.85','N28.86','N28.89','N28.9','Q27.1','Q27.2','Q60.0','Q60.1','Q60.2','Q60.3','Q60.4','Q60.5','Q60.6','N14.11','N14.19']
fren = spark.createDataFrame(fren,col).withColumn('tp', lit('flu')).createOrReplaceTempView("fren_T")

#8 Pregannt -covid/flu
preg=['O00.8','O00.0','O00.00','O00.01','O00.1','O00.10','O00.101','O00.102','O00.109','O00.11','O00.111','O00.112','O00.119','O00.20','O00.201','O00.202','O00.209','O00.21','O00.211','O00.212','O00.219','O00.80','O00.81','O00.9','O00.90','O00.91','O01.0','O01.1','O01.9','O02.0','O02.1','O03.0','O03.1','O03.2','O03.30','O03.31','O03.32','O03.33','O03.34','O03.35','O03.36','O03.37','O03.38','O03.39','O03.4','O03.5','O03.6','O03.7','O03.80','O03.81','O03.82','O03.83','O03.84','O03.85','O03.86','O03.87','O03.88','O03.89','O03.9','O04.5','O04.6','O04.7','O04.80','O04.81','O04.82','O04.83','O04.84','O04.85','O04.86','O04.87','O04.88','O04.89','O07.0','O07.1','O07.2','O07.30','O07.31','O07.32','O07.33','O07.34','O07.35','O07.36','O07.37','O07.38','O07.39','O07.4','O08.0','O08.1','O08.2','O08.3','O08.4','O08.5','O08.6','O08.7','O08.81','O08.82','O08.83','O08.89','O08.9','O09.00','O09.01','O09.02','O09.03','O09.10','O09.11','O09.12','O09.13','O09.211','O09.212','O09.213','O09.219','O09.291','O09.292','O09.293','O09.299','O09.30','O09.31','O09.32','O09.33','O09.40','O09.41','O09.42','O09.43','O09.511','O09.512','O09.513','O09.519','O09.521','O09.522','O09.523','O09.529','O09.611','O09.612','O09.613','O09.619','O09.621','O09.622','O09.623','O09.629','O09.70','O09.71','O09.72','O09.73','O09.811','O09.812','O09.813','O09.819','O09.821','O09.822','O09.823','O09.829','O09.891','O09.892','O09.893','O09.899','O09.90','O09.91','O09.92','O09.93','O09.A0','O09.A1','O09.A2','O09.A3','O10.011','O10.012','O10.013','O10.019','O10.02','O10.03','O10.111','O10.112','O10.113','O10.119','O10.12','O10.13','O10.211','O10.212','O10.213','O10.219','O10.22','O10.23','O12.14','O10.311','O10.312','O10.313','O10.319','O10.32','O10.33','O10.411','O10.412','O10.413','O10.419','O10.42','O10.43','O10.911','O10.912','O10.913','O10.919','O10.92','O10.93','O11.1','O11.2','O11.3','O11.4','O11.5','O11.9','O12.00','O12.01','O12.02','O12.03','O12.04','O12.05','O12.10','O12.11','O12.12','O12.13','O12.15','O12.20','O12.21','O12.22','O12.23','O12.24','O12.25','O13.1','O13.2','O13.3','O13.4','O13.5','O13.9','O14.00','O14.02','O14.03','O14.04','O14.05','O14.10','O14.12','O14.13','O14.14','O14.15','O14.20','O14.22','O14.23','O14.24','O14.25','O14.90','O14.92','O14.93','O14.94','O14.95','O15.00','O15.02','O15.03','O15.1','O15.2','O15.9','O16.1','O16.2','O16.3','O16.4','O16.5','O16.9','O20.0','O20.8','O20.9','O21.0','O21.1','O21.2','O21.8','O21.9','O22.00','O22.01','O22.02','O22.03','O22.10','O22.11','O22.12','O22.13','O22.20','O22.21','O22.22','O22.23','O22.30','O22.31','O22.32','O22.33','O22.40','O22.41','O22.42','O22.43','O22.50','O22.51','O22.52','O22.53','O22.8X1','O22.8X2','O22.8X3','O22.8X9','O22.90','O22.91','O22.92','O22.93','O23.00','O23.01','O23.02','O23.03','O23.10','O23.11','O23.12','O23.13','O23.20','O23.21','O23.22','O23.23','O23.30','O23.31','O23.32','O23.33','O23.40','O23.41','O23.42','O23.43','O23.511','O23.512','O23.513','O23.519','O23.521','O23.522','O23.523','O23.529','O23.591','O23.592','O23.593','O23.599','O23.90','O23.91','O23.92','O23.93','O24.011','O24.012','O24.013','O24.019','O24.02','O24.03','O24.111','O24.112','O24.113','O24.119','O24.12','O24.13','O24.311','O24.312','O24.313','O24.319','O24.32','O24.33','O24.410','O24.414','O24.415','O24.419','O24.420','O24.424','O24.425','O24.429','O24.430','O24.434','O24.435','O24.439','O24.811','O24.812','O24.813','O24.819','O24.82','O24.83','O24.911','O24.912','O24.913','O24.919','O24.92','O24.93','O25.10','O25.11','O25.12','O25.13','O25.2','O25.3','O26.00','O26.01','O26.02','O26.03','O26.10','O26.11','O26.12','O26.13','O26.20','O26.21','O26.22','O26.23','O26.30','O26.31','O26.32','O26.33','O26.40','O26.41','O26.42','O26.43','O26.50','O26.51','O26.52','O26.53','O26.611','O26.612','O26.613','O26.619','O26.62','O26.63','O26.711','O26.712','O26.713','O26.719','O26.72','O26.73','O26.811','O26.812','O26.813','O26.819','O26.821','O26.822','O26.823','O26.829','O26.83','O26.831','O26.832','O26.833','O26.839','O26.841','O26.842','O26.843','O26.849','O26.851','O26.852','O26.853','O26.859','O26.86','O26.872','O26.873','O26.879','O26.891','O26.892','O26.893','O26.899','O26.90','O26.91','O26.92','O26.93','O28.0','O28.1','O28.2','O28.3','O28.4','O28.5','O28.8','O28.9','O29.011','O29.012','O29.013','O29.019','O29.021','O29.022','O29.023','O29.029','O29.091','O29.092','O29.093','O29.099','O29.111','O29.112','O29.113','O29.119','O29.121','O29.122','O29.123','O29.129','O29.191','O29.192','O29.193','O29.199','O29.211','O29.212','O29.213','O29.219','O29.291','O29.292','O29.293','O29.299','O29.3X1','O29.3X2','O29.3X3','O29.3X9','O29.40','O29.41','O29.42','O29.43','O29.5X1','O29.5X2','O29.5X3','O29.5X9','O29.60','O29.61','O29.62','O29.63','O29.8X1','O29.8X2','O29.8X3','O29.8X9','O29.90','O29.91','O29.92','O29.93','O30.001','O30.002','O30.003','O30.009','O30.011','O30.012','O30.013','O30.019','O30.021','O30.022','O30.023','O30.029','O30.031','O30.032','O30.033','O30.039','O30.041','O30.042','O30.043','O30.049','O30.091','O30.092','O30.093','O30.099','O30.101','O30.102','O30.103','O30.109','O30.111','O30.112','O30.113','O30.119','O30.121','O30.122','O30.123','O30.129','O30.191','O30.192','O30.193','O30.199','O30.201','O30.202','O30.203','O30.209','O30.211','O30.212','O30.213','O30.219','O30.221','O30.222','O30.223','O30.229','O30.291','O30.292','O30.293','O30.299','O30.801','O30.802','O30.803','O30.809','O30.811','O30.812','O30.813','O30.819','O30.821','O30.822','O30.823','O30.829','O30.891','O30.892','O30.893','O30.899','O30.90','O30.91','O30.92','O30.93','O31.00X0','O31.00X1','O31.00X2','O31.00X3','O31.00X4','O31.00X5','O31.00X9','O31.01X0','O31.01X1','O31.01X2','O31.01X3','O31.01X4','O31.01X5','O31.01X9','O31.02X0','O31.02X1','O31.02X2','O31.02X3','O31.02X4','O31.02X5','O31.02X9','O31.03X0','O31.03X1','O31.03X2','O31.03X3','O31.03X4','O31.03X5','O31.03X9','O31.10X0','O31.10X1','O31.10X2','O31.10X3','O31.10X4','O31.10X5','O31.10X9','O31.11X0','O31.11X1','O31.11X2','O31.11X3','O31.11X4','O31.11X5','O31.11X9','O31.12X0','O31.12X1','O31.12X2','O31.12X3','O31.12X4','O31.12X5','O31.12X9','O31.13X0','O31.13X1','O31.13X2','O31.13X3','O31.13X4','O31.13X5','O31.13X9','O31.20X0','O31.20X1','O31.20X2','O31.20X3','O31.20X4','O31.20X5','O32.1XX0','O31.20X9','O31.21X0','O31.21X1','O31.21X2','O31.21X3','O31.21X4','O31.21X5','O31.21X9','O31.22X0','O31.22X1','O31.22X2','O31.22X3','O31.22X4','O31.22X5','O31.22X9','O31.23X0','O31.23X1','O31.23X2','O31.23X3','O31.23X4','O31.23X5','O31.23X9','O31.30X0','O31.30X1','O31.30X2','O31.30X3','O32.1XX1','O31.30X4','O31.30X5','O31.30X9','O31.31X0','O31.31X1','O31.31X2','O31.31X3','O31.31X4','O31.31X5','O31.31X9','O31.32X0','O31.32X1','O31.32X2','O31.32X3','O31.32X4','O31.32X5','O31.32X9','O31.33X0','O31.33X1','O31.33X2','O31.33X3','O31.33X4','O31.33X5','O31.33X9','O31.8X10','O31.8X11','O31.8X12','O31.8X13','O31.8X14','O31.8X15','O31.8X19','O31.8X20','O31.8X21','O31.8X22','O31.8X23','O31.8X24','O31.8X25','O31.8X29','O31.8X30','O31.8X31','O31.8X32','O31.8X33','O31.8X34','O31.8X35','O31.8X39','O31.8X90','O31.8X91','O31.8X92','O31.8X93','O31.8X94','O31.8X95','O31.8X99','O32.0XX0','O32.0XX1','O32.0XX2','O32.0XX3','O32.0XX4','O32.0XX5','O32.0XX9','O32.1XX2','O32.1XX3','O32.1XX4','O32.1XX5','O32.1XX9','O32.2XX0','O32.2XX1','O32.2XX2','O32.2XX3','O32.2XX4','O32.2XX5','O32.2XX9','O32.3XX0','O32.3XX1','O32.3XX2','O32.3XX3','O32.3XX4','O32.3XX5','O32.3XX9','O32.4XX0','O32.4XX1','O32.4XX2','O32.4XX3','O32.4XX4','O32.4XX5','O32.4XX9','O32.6XX0','O32.6XX1','O32.6XX2','O32.6XX3','O32.6XX4','O32.6XX5','O32.6XX9','O32.8XX0','O32.8XX1','O32.8XX2','O32.8XX3','O32.8XX4','O32.8XX5','O32.8XX9','O32.9XX0','O32.9XX1','O32.9XX2','O32.9XX3','O32.9XX4','O32.9XX5','O32.9XX9','O33.0','O33.1','O33.2','O33.3XX0','O33.3XX1','O33.3XX2','O33.3XX3','O33.3XX4','O33.3XX5','O33.3XX9','O33.4XX0','O33.4XX1','O33.4XX2','O33.4XX3','O33.4XX4','O33.4XX5','O33.4XX9','O33.5XX0','O33.5XX1','O33.5XX2','O33.5XX3','O33.5XX4','O33.5XX5','O33.5XX9','O33.6XX0','O33.6XX1','O33.6XX2','O33.6XX3','O33.6XX4','O33.6XX5','O33.6XX9','O33.7','O33.7XX0','O33.7XX1','O33.7XX2','O33.7XX3','O33.7XX4','O33.8','O33.9','O34.00','O34.01','O34.02','O34.03','O34.10','O34.11','O34.12','O34.13','O34.21','O34.211','O34.212','O34.219','O34.29','O34.30','O34.31','O34.32','O34.33','O34.40','O34.41','O34.42','O34.43','O34.511','O34.512','O34.513','O34.519','O34.521','O34.522','O34.523','O34.529','O34.531','O34.532','O34.533','O34.539','O34.591','O34.592','O34.593','O34.599','O34.60','O34.61','O34.62','O34.63','O34.70','O34.71','O34.72','O34.73','O34.80','O34.81','O34.82','O34.83','O34.90','O34.91','O34.92','O34.93','O35.0XX0','O35.0XX1','O35.0XX2','O35.0XX3','O35.0XX4','O35.0XX5','O35.0XX9','O35.1XX0','O35.1XX1','O35.1XX2','O35.1XX3','O35.1XX4','O35.1XX5','O35.1XX9','O35.2XX0','O35.2XX1','O35.2XX2','O35.2XX3','O35.2XX4','O35.2XX5','O35.2XX9','O35.3XX0','O35.3XX1','O35.3XX2','O35.3XX3','O35.3XX4','O35.3XX5','O35.3XX9','O35.4','O35.4XX0','O35.4XX1','O35.4XX2','O35.4XX3','O35.4XX4','O35.4XX5','O35.4XX9','O35.5XX0','O35.5XX1','O35.5XX2','O35.5XX3','O35.5XX4','O35.5XX5','O35.5XX9','O35.6XX0','O35.6XX1','O35.6XX2','O35.6XX3','O35.6XX4','O35.6XX5','O35.6XX9','O35.7XX0','O35.7XX1','O35.7XX2','O35.7XX3','O35.7XX4','O35.7XX5','O35.7XX9','O35.8XX0','O35.8XX1','O35.8XX2','O35.8XX3','O35.8XX4','O35.8XX5','O35.8XX9','O35.9XX0','O35.9XX1','O35.9XX2','O35.9XX3','O35.9XX4','O35.9XX5','O35.9XX9','O36.0110','O36.0111','O36.0112','O36.0113','O36.0114','O36.0115','O36.0119','O36.0120','O36.0121','O36.0122','O36.0123','O36.0124','O36.0125','O36.0129','O36.0130','O36.0131','O36.0132','O36.0133','O36.0134','O36.0135','O36.0139','O36.0190','O36.0191','O36.0192','O36.0193','O36.0194','O36.0195','O36.0199','O36.0910','O36.0911','O36.0912','O36.0913','O36.0914','O36.0915','O36.0919','O36.0920','O36.0921','O36.0922','O36.0923','O36.0924','O36.0925','O36.0929','O36.0930','O36.0931','O36.0932','O36.0933','O36.0934','O36.0935','O36.0939','O36.0990','O36.0991','O36.0992','O36.0993','O36.0994','O36.0995','O36.0999','O36.1110','O36.1111','O36.1112','O36.1113','O36.1114','O36.1115','O36.1119','O36.1120','O36.1121','O36.1122','O36.1123','O36.1124','O36.1125','O36.1129','O36.1130','O36.1131','O36.1132','O36.1133','O36.1134','O36.1135','O36.1139','O36.1190','O36.1191','O36.1192','O36.1193','O36.1194','O36.1195','O36.1199','O36.1910','O36.1911','O36.1912','O36.1913','O36.1914','O36.1915','O36.1919','O36.1920','O36.1921','O36.1922','O36.1923','O36.1924','O36.1925','O36.1929','O36.1930','O36.1931','O36.1932','O36.1933','O36.1934','O36.1935','O36.1939','O36.1990','O36.1991','O36.1992','O36.1993','O36.1994','O36.1995','O36.1999','O36.20X0','O36.20X1','O36.20X2','O36.20X3','O36.20X4','O36.20X5','O36.20X9','O36.21X0','O36.21X1','O36.21X2','O36.21X3','O36.21X4','O36.21X5','O36.21X9','O36.22X0','O36.22X1','O36.22X2','O36.22X3','O36.22X4','O36.22X5','O36.22X9','O36.23X0','O36.23X1','O36.23X2','O36.23X3','O36.23X4','O36.23X5','O36.23X9','O36.4XX0','O36.4XX1','O36.4XX2','O36.4XX3','O36.4XX4','O36.4XX5','O36.4XX9','O36.5110','O36.5111','O36.5112','O36.5113','O36.5114','O36.5115','O36.5119','O36.5120','O36.5121','O36.5122','O36.5123','O36.5124','O36.5125','O36.5129','O36.5130','O36.5131','O36.5132','O36.5133','O36.5134','O36.5135','O36.5139','O36.5190','O36.5191','O36.5192','O36.5193','O36.5194','O36.5195','O36.5199','O36.5910','O36.5911','O36.5912','O36.5913','O36.5914','O36.5915','O36.5919','O36.5920','O36.5921','O36.5922','O36.5923','O36.5924','O36.5925','O36.5929','O36.5930','O36.5931','O36.5932','O36.5933','O36.5934','O36.5935','O36.5939','O36.5990','O36.5991','O36.5992','O36.5993','O36.5994','O36.5995','O36.5999','O36.60X0','O36.60X1','O36.60X2','O36.60X3','O36.60X4','O36.60X5','O36.60X9','O36.61X0','O36.61X1','O36.61X2','O36.61X3','O36.61X4','O36.61X5','O36.61X9','O36.62X0','O36.62X1','O36.62X2','O36.62X3','O36.62X4','O36.62X5','O36.62X9','O36.63X0','O36.63X1','O36.63X2','O36.63X3','O36.63X4','O36.63X5','O36.63X9','O36.70X0','O36.70X1','O36.70X2','O36.70X3','O36.70X4','O36.70X5','O36.70X9','O36.71X0','O36.71X1','O36.71X2','O36.71X3','O36.71X4','O36.71X5','O36.71X9','O36.72X0','O36.72X1','O36.72X2','O36.72X3','O36.72X4','O36.72X5','O36.72X9','O36.73X0','O36.73X1','O36.73X2','O36.73X3','O36.73X4','O36.73X5','O36.73X9','O36.80X0','O36.80X1','O36.80X2','O36.80X3','O36.80X4','O36.80X5','O36.80X9','O36.8120','O36.8121','O36.8122','O36.8123','O36.8124','O36.8125','O36.8129','O36.8130','O36.8131','O36.8132','O36.8133','O36.8134','O36.8135','O36.8139','O36.8190','O36.8191','O36.8192','O36.8193','O36.8194','O36.8195','O36.8199','O36.8210','O36.8211','O36.8212','O36.8213','O36.8214','O36.8215','O36.8219','O36.8220','O36.8221','O36.8222','O36.8223','O36.8224','O36.8225','O36.8229','O36.8230','O36.8231','O36.8232','O36.8233','O36.8234','O36.8235','O36.8239','O36.8290','O36.8291','O36.8292','O36.8293','O36.8294','O36.8295','O36.8299','O36.8910','O36.8911','O36.8912','O36.8913','O36.8914','O36.8915','O36.8919','O36.8920','O36.8921','O36.8922','O36.8923','O36.8924','O36.8925','O36.8929','O36.8930','O36.8931','O36.8932','O36.8933','O36.8934','O36.8935','O36.8939','O36.8990','O36.8991','O36.8992','O36.8993','O36.8994','O36.8995','O36.8999','O36.90X0','O36.90X1','O36.90X2','O36.90X3','O36.90X4','O36.90X5','O36.90X9','O36.91X0','O36.91X1','O36.91X2','O36.91X3','O36.91X4','O36.91X5','O36.91X9','O36.92X0','O36.92X1','O36.92X2','O36.92X3','O36.92X4','O36.92X5','O36.92X9','O36.93X0','O36.93X1','O36.93X2','O36.93X3','O36.93X4','O36.93X5','O36.93X9','O40.1XX0','O40.1XX1','O40.1XX2','O40.1XX3','O40.1XX4','O40.1XX5','O40.1XX9','O40.2XX0','O40.2XX1','O40.2XX2','O40.2XX3','O40.2XX4','O40.2XX5','O40.2XX9','O40.3XX0','O40.3XX1','O40.3XX2','O40.3XX3','O40.3XX4','O40.3XX5','O40.3XX9','O40.9XX0','O40.9XX1','O40.9XX2','O40.9XX3','O40.9XX4','O40.9XX5','O40.9XX9','O41.00X0','O41.00X1','O41.00X2','O41.00X3','O41.00X4','O41.00X5','O41.00X9','O41.01X0','O41.01X1','O41.01X2','O41.01X3','O41.01X4','O41.01X5','O41.01X9','O41.02X0','O41.02X1','O41.02X2','O41.02X3','O41.02X4','O41.02X5','O41.02X9','O41.03X0','O41.03X1','O41.03X2','O41.03X3','O41.03X4','O41.03X5','O41.03X9','O41.1010','O41.1011','O41.1012','O41.1013','O41.1014','O41.1015','O41.1019','O41.1020','O41.1021','O41.1022','O41.1023','O41.1024','O41.1025','O41.1029','O41.1030','O41.1031','O41.1032','O41.1033','O41.1034','O41.1035','O41.1039','O41.1090','O41.1091','O41.1092','O41.1093','O41.1094','O41.1095','O41.1099','O41.1210','O41.1211','O41.1212','O41.1213','O41.1214','O41.1215','O41.1219','O41.1220','O41.1221','O41.1222','O41.1223','O41.1224','O41.1225','O41.1229','O41.1230','O41.1231','O41.1232','O41.1233','O41.1234','O41.1235','O41.1239','O41.1290','O41.1291','O41.1292','O41.1293','O41.1294','O41.1295','O41.1299','O41.1410','O41.1411','O41.1412','O41.1413','O41.1414','O41.1415','O41.1419','O41.1420','O41.1421','O41.1422','O41.1423','O41.1424','O41.1425','O41.1429','O41.1430','O41.1431','O41.1432','O41.1433','O41.1434','O41.1435','O41.1439','O41.1490','O41.1491','O41.1492','O41.1493','O41.1494','O41.1495','O41.1499','O41.8X10','O41.8X11','O41.8X12','O41.8X13','O41.8X14','O41.8X15','O41.8X19','O41.8X20','O41.8X21','O41.8X22','O41.8X23','O41.8X24','O41.8X25','O41.8X29','O41.8X30','O41.8X31','O41.8X32','O41.8X33','O41.8X34','O41.8X35','O41.8X39','O41.8X90','O41.8X91','O41.8X92','O41.8X93','O41.8X94','O41.8X95','O41.8X99','O41.90X0','O41.90X1','O41.90X2','O41.90X3','O41.90X4','O41.90X5','O41.90X9','O41.91X0','O41.91X1','O41.91X2','O41.91X3','O41.91X4','O41.91X5','O41.91X9','O41.92X0','O41.92X1','O41.92X2','O41.92X3','O41.92X4','O41.92X5','O41.92X9','O41.93X0','O41.93X1','O41.93X2','O43.012','O41.93X3','O41.93X4','O41.93X5','O41.93X9','O42.00','O42.011','O42.012','O42.013','O42.019','O42.02','O42.10','O42.111','O42.112','O42.113','O42.119','O42.12','O42.90','O42.911','O42.912','O42.913','O42.919','O42.92','O43.011','O43.013','O43.019','O43.021','O43.022','O43.023','O43.029','O43.101','O43.102','O43.103','O43.109','O43.111','O43.112','O43.113','O43.119','O43.121','O43.122','O43.123','O43.129','O43.191','O43.192','O43.193','O43.199','O43.211','O43.212','O43.213','O43.219','O43.221','O43.222','O43.223','O43.229','O43.231','O43.232','O43.233','O43.239','O43.811','O43.812','O43.813','O43.819','O43.891','O43.892','O43.893','O43.899','O43.90','O43.91','O43.92','O43.93','O44.00','O44.01','O44.02','O44.03','O44.10','O44.11','O44.12','O44.13','O44.40','O45.001','O45.002','O45.003','O45.009','O45.011','O45.012','O45.013','O45.019','O45.021','O45.022','O45.023','O45.029','O45.091','O45.092','O45.093','O45.099','O45.8X1','O45.8X2','O45.8X3','O45.8X9','O45.90','O45.91','O45.92','O45.93','O46.001','O46.002','O46.003','O46.009','O46.011','O46.012','O46.013','O46.019','O46.021','O46.022','O46.023','O46.029','O46.091','O46.092','O46.093','O46.099','O46.8X1','O46.8X2','O46.8X3','O46.8X9','O46.90','O46.91','O46.92','O46.93','O47.00','O47.02','O47.03','O47.1','O47.9','O48.0','O48.1','O60.00','O60.02','O60.03','O61.0','O61.1','O61.8','O61.9','O62.0','O62.1','O62.2','O62.3','O62.4','O62.8','O62.9','O63.0','O63.1','O63.2','O63.9','O64.0XX0','O64.0XX1','O64.0XX2','O64.0XX3','O64.0XX4','O64.0XX5','O64.0XX9','O64.1XX0','O64.1XX1','O64.1XX2','O64.1XX3','O64.1XX4','O64.1XX5','O64.1XX9','O64.2XX0','O64.2XX1','O64.2XX2','O64.2XX3','O64.2XX4','O64.2XX5','O64.2XX9','O64.3XX0','O64.3XX1','O64.3XX2','O64.3XX3','O64.3XX4','O64.3XX5','O64.3XX9','O64.4XX0','O64.4XX1','O64.4XX2','O64.4XX3','O64.4XX4','O64.4XX5','O64.4XX9','O64.5XX0','O64.5XX1','O64.5XX2','O64.5XX3','O64.5XX4','O64.5XX5','O64.5XX9','O64.8XX0','O64.8XX1','O64.8XX2','O64.8XX3','O64.8XX4','O64.8XX5','O64.8XX9','O64.9XX0','O64.9XX1','O64.9XX2','O64.9XX3','O64.9XX4','O64.9XX5','O64.9XX9','O65.0','O65.1','O65.2','O65.3','O65.4','O65.5','O65.8','O65.9','O66.0','O66.1','O66.2','O66.3','O66.40','O66.41','O66.5','O66.6','O66.8','O66.9','O67.0','O67.8','O67.9','O69.0XX0','O69.0XX1','O69.0XX2','O69.0XX3','O69.0XX4','O69.0XX5','O69.0XX9','O69.1XX0','O69.1XX1','O69.1XX2','O69.1XX3','O69.1XX4','O69.1XX5','O69.1XX9','O69.2XX0','O69.2XX1','O69.2XX2','O69.2XX3','O69.2XX4','O69.2XX5','O69.2XX9','O69.3XX0','O69.3XX1','O69.3XX2','O69.3XX3','O69.3XX4','O69.3XX5','O69.3XX9','O69.4XX0','O69.4XX1','O69.4XX2','O69.4XX3','O69.4XX4','O69.4XX5','O69.4XX9','O69.5XX0','O69.5XX1','O69.5XX2','O69.5XX3','O69.5XX4','O69.5XX5','O69.5XX9','O69.81X0','O69.81X1','O69.81X2','O69.81X3','O69.81X4','O69.81X5','O69.81X9','O69.82X0','O69.82X1','O69.82X2','O69.82X3','O69.82X4','O69.82X5','O69.82X9','O69.89X0','O69.89X1','O69.89X2','O69.89X3','O69.89X4','O69.89X5','O69.89X9','O69.9XX0','O69.9XX1','O69.9XX2','O69.9XX3','O69.9XX4','O69.9XX5','O69.9XX9','O70.0','O70.1','O70.2','O70.20','O70.21','O70.22','O70.23','O70.3','O70.4','O70.9','O71.00','O71.02','O71.03','O71.1','O71.2','O71.3','O71.4','O71.5','O71.6','O71.7','O71.81','O71.82','O71.89','O71.9','O72.0','O72.1','O72.2','O72.3','O73.0','O73.1','O74.0','O74.1','O74.2','O74.3','O74.4','O74.5','O74.6','O74.7','O74.8','O74.9','O75.0','O75.1','O75.2','O75.3','O75.4','O75.81','O75.82','O75.89','O75.9','O77.0','O77.1','O77.8','O77.9','O86.0','O86.11','O86.12','O86.13','O86.19','O86.20','O86.21','O86.22','O86.29','O86.4','O86.81','O86.89','O87.0','O87.1','O87.2','O87.3','O87.4','O87.8','O87.9','O88.011','O88.012','O88.013','O88.019','O88.02','O88.03','O88.111','O88.112','O88.113','O88.119','O88.12','O88.13','O88.211','O88.212','O88.213','O88.219','O88.22','O88.23','O88.311','O88.312','O88.313','O88.319','O88.32','O88.33','O88.811','O88.812','O88.813','O88.819','O88.82','O88.83','O89.01','O89.09','O89.1','O89.2','O89.3','O89.4','O89.5','O89.6','O89.8','O89.9','O90.0','O90.1','O90.2','O90.4','O90.5','O90.6','O90.81','O90.89','O91.011','O91.012','O91.013','O91.019','O91.02','O91.03','O91.111','O91.112','O91.113','O91.119','O91.12','O91.13','O91.211','O91.212','O91.213','O91.219','O91.22','O91.23','O92.011','O92.012','O92.013','O92.019','O92.02','O92.03','O92.111','O92.112','O92.113','O92.119','O92.12','O92.13','O98.01','O98.02','O98.03','O98.4','O98.41','O98.411','O98.412','O98.413','O98.419','O98.42','O98.43','O99.310','O99.311','O99.312','O99.313','O99.314','O99.315','O99.320','O99.321','O99.322','O99.323','O99.324','O99.325','O99.810','O99.814','O99.815','O99.820','O99.824','O99.825','O99.830','O99.834','O99.835','P04.3','P07.20','P07.21','P07.22','P07.23','P07.24','P07.25','P07.26','P07.30','P07.31','P07.32','P07.33','P07.34','P07.35','P07.36','P07.37','P07.38','P07.39','P37.0','P78.81','P96.0']
preg = spark.createDataFrame(preg,col).withColumn('tp', lit('')).createOrReplaceTempView("preg_T")

#9 Post-Partum -covid/flu
postptm=['O71.2','O72.1','O72.2','O72.3','O90.4','O90.5','O90.6','Z39.2']
postptm= spark.createDataFrame(postptm,col).withColumn('tp', lit('')).createOrReplaceTempView("postptm_T")


#10 -Obseitty -Covid
cobs=['E66.0','E66.01','E66.09','E66.1','E66.2','E66.8','E66.9','Z68.30','Z68.31','Z68.32','Z68.33','Z68.34','Z68.35','Z68.36','Z68.37','Z68.38','Z68.39','Z68.4','Z68.41','Z68.43','Z68.44','Z68.45','Z68.54']
cobs = spark.createDataFrame(cobs,col).withColumn('tp', lit('covid')).createOrReplaceTempView("cobs_T")

#Obesity -flu
fobs=['E66.0','E66.01','E66.09','E66.1','E66.2','E66.8','E66.9','Z68.30','Z68.31','Z68.32','Z68.33','Z68.34','Z68.35','Z68.36','Z68.37','Z68.38','Z68.39','Z68.4','Z68.41','Z68.43','Z68.44','Z68.45','Z68.54']
fobs= spark.createDataFrame(fobs,col).withColumn('tp', lit('flu')).createOrReplaceTempView("fobs_T")




# COMMAND ----------

#Positive and invalid labs
i=spark.sql("""select conceptid from cdh_truveta.concept where conceptcode in ("1065667","1065692","260373001","720735008","10828004","52101004")""").createOrReplaceTempView("positivelab")

inv=spark.sql("""select conceptid from cdh_truveta.concept where conceptcode in ("1065712","1065714","1065719","1065717")""").createOrReplaceTempView("invalidlab")

# COMMAND ----------

# DBTITLE 1,Covid Immunosuppresd
u=spark.sql("""

with conid as(
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from cimmuno_T)
  
),


cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'imcomp' as umc, 'covid' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union --no inpact
                     select personid,dt from medadm union  --no inpact
                     select personid,dt from meddisp union  --no inpact
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc --no inpact
                 ) where dt is not null

""").createOrReplaceTempView("cimcomp")



# COMMAND ----------

# DBTITLE 1,Flu Ummunospresed
u=spark.sql("""

with conid as(
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from fimmuno_T)
  
),


cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'imcomp' as umc,'flu' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union --no inpact
                     select personid,dt from medadm union  --no inpact
                     select personid,dt from meddisp union  --no inpact
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc --no inpact
                 ) where dt is not null

""").createOrReplaceTempView("fimcomp")

# COMMAND ----------

# MAGIC %md
# MAGIC #####High Risk -Pregnant

# COMMAND ----------

# DBTITLE 1,Pregnant
u=spark.sql("""

with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from preg_T)
),


cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'preg' as umc,"cf" as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union --no inpact
                     select personid,dt from medadm union  --no inpact
                     select personid,dt from meddisp union  --no inpact
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc --no inpact
                 ) where dt is not null

""").createOrReplaceTempView("preg")

# COMMAND ----------

# MAGIC %md
# MAGIC > ####Underlying Medial Conditions (UMC)

# COMMAND ----------

# MAGIC %md
# MAGIC #####UMC-CVD

# COMMAND ----------

# DBTITLE 1,Covid CVD
u=spark.sql("""

with conid as (
select conceptid 
from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (Select conceptcode from ccvd_T)
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'cvd' as umc, 'covid' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union --no inpact
                     select personid,dt from medadm union  --no inpact
                     select personid,dt from meddisp union  --no inpact
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc --no inpact
                 ) where dt is not null

""").createOrReplaceTempView("ccvd")

# COMMAND ----------

# DBTITLE 1,flu cvd
u=spark.sql("""

with conid as (
select conceptid 
from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (Select conceptcode from fcvd_T)
),

cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'cvd' as umc, 'flu' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union --no inpact
                     select personid,dt from medadm union  --no inpact
                     select personid,dt from meddisp union  --no inpact
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc --no inpact
                 ) where dt is not null

""").createOrReplaceTempView("fcvd")

# COMMAND ----------

# DBTITLE 1,Covid Hematologic
u=spark.sql("""

with conid as (
select * from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from chem_t)

),


cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'hem' as umc, 'covid' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union --no inpact
                     select personid,dt from medadm union  --no inpact
                     select personid,dt from meddisp union  --no inpact
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc --no inpact
                 ) where dt is not null

""").createOrReplaceTempView("chem")

# COMMAND ----------

# DBTITLE 1,Flu hematologic
u=spark.sql("""

with conid as (
select * from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from fhem_t )

),


cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'hem' as umc, 'flu' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union --no inpact
                     select personid,dt from medadm union  --no inpact
                     select personid,dt from meddisp union  --no inpact
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc --no inpact
                 ) where dt is not null

""").createOrReplaceTempView("fhem")

# COMMAND ----------

# MAGIC %md
# MAGIC ####UMC-Renal

# COMMAND ----------

# DBTITLE 1,Covid Renal
u=spark.sql("""

with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from cren_t )

),


cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'ren' as umc,'covid' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union --no inpact
                     select personid,dt from medadm union  --no inpact
                     select personid,dt from meddisp union  --no inpact
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc --no inpact
                 ) where dt is not null

""").createOrReplaceTempView("cren")


# COMMAND ----------

# DBTITLE 1,flu renal
u=spark.sql("""

with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from fren_t)

),


cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'ren' as umc,'flu' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union --no inpact
                     select personid,dt from medadm union  --no inpact
                     select personid,dt from meddisp union  --no inpact
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc --no inpact
                 ) where dt is not null

""").createOrReplaceTempView("fren")

# COMMAND ----------

# MAGIC %md
# MAGIC #####UMC-Pulmomary
# MAGIC

# COMMAND ----------

# DBTITLE 1,Covid Pulmonary
u=spark.sql("""

with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from cpul_t)


),


cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'pul' as umc, 'covid' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union --no inpact
                     select personid,dt from medadm union  --no inpact
                     select personid,dt from meddisp union  --no inpact
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc --no inpact
                 ) where dt is not null

""").createOrReplaceTempView("cpul")

# COMMAND ----------

# DBTITLE 1,flu pulmunary
u=spark.sql("""

with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from fpul_t)


),


cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'pul' as umc, 'flu' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union --no inpact
                     select personid,dt from medadm union  --no inpact
                     select personid,dt from meddisp union  --no inpact
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc --no inpact
                 ) where dt is not null

""").createOrReplaceTempView("fpul")

# COMMAND ----------

# MAGIC %md
# MAGIC #####UMC-Hepatic

# COMMAND ----------

# DBTITLE 1,Covid  hepatic
u=spark.sql("""

with conid as (
select * from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from chep_t)
 
 
),


cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'hep' as umc,'covid' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union --no inpact
                     select personid,dt from medadm union  --no inpact
                     select personid,dt from meddisp union  --no inpact
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc --no inpact
                 ) where dt is not null

""").createOrReplaceTempView("chep")

# COMMAND ----------

# DBTITLE 1,flu hepatic
u=spark.sql("""

with conid as (
select * from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from fhep_t)
 
 
),


cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'hep' as umc,'flu' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union --no inpact
                     select personid,dt from medadm union  --no inpact
                     select personid,dt from meddisp union  --no inpact
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc --no inpact
                 ) where dt is not null

""").createOrReplaceTempView("fhep")

# COMMAND ----------

# MAGIC %md
# MAGIC #####UMC - Neurological 

# COMMAND ----------

# DBTITLE 1,Covid neuro
u=spark.sql("""

with conid as (
select * from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from cneuro_t)
 
 
),


cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'neuro' as umc, 'covid' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union --no inpact
                     select personid,dt from medadm union  --no inpact
                     select personid,dt from meddisp union  --no inpact
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc --no inpact
                 ) where dt is not null

""").createOrReplaceTempView("cneuro")

# COMMAND ----------

# DBTITLE 1,flu neuro
u=spark.sql("""

with conid as (
select * from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from fneuro_t )
 
 
),


cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'neuro' as umc, 'flu' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union --no inpact
                     select personid,dt from medadm union  --no inpact
                     select personid,dt from meddisp union  --no inpact
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc --no inpact
                 ) where dt is not null

""").createOrReplaceTempView("fneuro")

# COMMAND ----------

# MAGIC %md
# MAGIC #####UMC-Metabolic

# COMMAND ----------

# DBTITLE 1,Covid Metabolic
u=spark.sql("""

with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from cmet_t  )
  
),


cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'met' as umc, 'covid' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union --no inpact
                     select personid,dt from medadm union  --no inpact
                     select personid,dt from meddisp union  --no inpact
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc --no inpact
                 ) where dt is not null

""").createOrReplaceTempView("cmet")


# COMMAND ----------

u=spark.sql("""

with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from fmet_t )
  
),


cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'met' as umc, 'flu' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union --no inpact
                     select personid,dt from medadm union  --no inpact
                     select personid,dt from meddisp union  --no inpact
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc --no inpact
                 ) where dt is not null

""").createOrReplaceTempView("fmet")

# COMMAND ----------

# DBTITLE 1,PostPartum
u=spark.sql("""

--PostPartum
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from postptm_t)
 
),


cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'ppatum' as umc, "cf" as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union --no inpact
                     select personid,dt from medadm union  --no inpact
                     select personid,dt from meddisp union  --no inpact
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc --no inpact
                 ) where dt is not null

""").createOrReplaceTempView("ppatum")

# COMMAND ----------

# MAGIC %md
# MAGIC #####UMC-Metabolic  Obsesity

# COMMAND ----------

# MAGIC %md
# MAGIC ######Obessity

# COMMAND ----------

# DBTITLE 1,Covid Obesse
u=spark.sql("""

--Obesse
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from cobs_t)
 
),


cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'obess' as umc,'covid' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union --no inpact
                     select personid,dt from medadm union  --no inpact
                     select personid,dt from meddisp union  --no inpact
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc --no inpact
                 ) where dt is not null

""").createOrReplaceTempView("cobess")

# COMMAND ----------

# DBTITLE 1,flu Obesse
u=spark.sql("""

--Obesse
with conid as (
select conceptid from cdh_truveta.concept 
where 1=1
and codesystem in ('ICD10CM','ICD10PCS') 
and conceptcode in (select conceptcode from fobs_t)
 
),


cond as (select personid,recordeddatetime as dt
            from cdh_truveta.condition 
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.conditioncodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

medreq as (select personid,authoredondatetime as dt 
            from cdh_truveta.medicationrequest
            where 1=1
           and CodeConceptMapId in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

 medadm as (select personid,recordeddatetime as dt 
            from cdh_truveta.medicationadministration
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  meddisp as (select personid, recordeddatetime as dt
            from cdh_truveta.medicationdispense
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.medicationcodeconceptmap where codeconceptid in (select conceptid from conid))
            ),

  lab as (select personid,effectivedatetime as dt
          from cdh_truveta.labresult l
         
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.labresultcodeconceptmap where codeconceptid in (select conceptid from conid))
          and l.NormalizedValueConceptId in (select conceptid from positivelab)
          and l.NormalizedValueConceptId not in (select conceptid from invalidlab)
         ),

  obs as (select personid,recordeddatetime as dt
            from cdh_truveta.observation
            where 1=1
            and codeconceptmapid in (select id from cdh_truveta.observationcodeconceptmap where codeconceptid in (select conceptid from conid))
        ),
  
  proc as (select personid, recordeddatetime as dt
          from cdh_truveta.procedure
          where 1=1
          and codeconceptmapid in (select id from cdh_truveta.procedurecodeconceptmap where codeconceptid in (select conceptid from conid))
        )

  
                select distinct personid,dt,'obess' as umc,'flu' as tp
                from(select personid,dt from cond union
                     select personid,dt from medreq union --no inpact
                     select personid,dt from medadm union  --no inpact
                     select personid,dt from meddisp union  --no inpact
                     select personid,dt from lab union
                     select personid,dt from obs union
                     select personid,dt from proc --no inpact
                 ) where dt is not null

""").createOrReplaceTempView("fobess")

# COMMAND ----------

u=spark.sql("""
select * from preg union
select * from cimcomp union
select * from fimcomp union
select * from ccvd union
select * from fcvd union
select * from chem union
select * from fhem union
select * from cren union
select * from fren union
select * from cpul union
select * from fpul union
select * from chep union
select * from fhep union
select * from cneuro union
select * from fneuro union
select * from cmet union
select * from fmet union
select * from ppatum union
select * from cobess  union
select * from fobess

""").write.mode("overwrite").saveAsTable("cdh_truveta_exploratory.tog0_truveta_lavaumc")

# COMMAND ----------

# MAGIC %sql
# MAGIC --drop table if exists cdh_truveta_exploratory.tog0_truveta_lavaumc
# MAGIC
# MAGIC

# COMMAND ----------

# MAGIC %sql
# MAGIC select * from cdh_truveta_exploratory.tog0_truveta_lavaumc order by personid limit 50
