# Databricks notebook source
dbutils.widgets.text("source_catalog",defaultValue="edav_stg_cdh")
dbutils.widgets.text("source_schema",defaultValue="cdh_premier_v2")
#mandatory parameters and names. The orchestrator will always pass these
dbutils.widgets.text("etl_catalog",defaultValue="edav_stg_cdh")
dbutils.widgets.text("etl_schema",defaultValue="cdh_premier_omop_etl")
dbutils.widgets.text("omop_catalog",defaultValue="edav_stg_cdh")
dbutils.widgets.text("omop_schema",defaultValue="cdh_premier_omop")
dbutils.widgets.text("results_catalog",defaultValue="edav_stg_cdh")
dbutils.widgets.text("results_schema",defaultValue="cdh_premier_atlas_results")

# COMMAND ----------

# MAGIC %sql
# MAGIC WITH cte_all  AS (SELECT cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  , CAST('' as STRING) as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 26662 (TESTICULAR HYPOFUNCTION), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'26662' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_26662' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 26662
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 26662
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 26935 (DISORDER OF ENDOCRINE TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'26935' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_26935' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 26935
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 26935
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 30969 (TESTICULAR HYPERFUNCTION), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'30969' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_30969' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 30969
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 30969
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 73801 (SCROTAL VARICES), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'73801' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_73801' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 73801
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 73801
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 74322 (BENIGN NEOPLASM OF SCROTUM), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'74322' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_74322' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 74322
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 74322
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 78193 (ORCHITIS AND EPIDIDYMITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'78193' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_78193' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 78193
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 78193
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 79758 (PRIMARY MALIGNANT NEOPLASM OF SCROTUM), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'79758' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_79758' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 79758
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 79758
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 141917 (BALANITIS XEROTICA OBLITERANS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'141917' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_141917' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 141917
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 141917
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 192367 (DYSPLASIA OF CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'192367' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_192367' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 192367
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 192367
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 192676 (CERVICAL INTRAEPITHELIAL NEOPLASIA GRADE 1), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'192676' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_192676' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 192676
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 192676
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 192683 (UTEROVAGINAL PROLAPSE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'192683' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_192683' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 192683
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 192683
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 192854 (INTRAMURAL LEIOMYOMA OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'192854' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_192854' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 192854
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 192854
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 192858 (OVARIAN HYPERFUNCTION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'192858' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_192858' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 192858
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 192858
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 193254 (DISORDER OF VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'193254' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_193254' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 193254
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 193254
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 193261 (VAGINOSPASM), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'193261' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_193261' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 193261
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 193261
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 193262 (INFLAMMATORY DISORDER OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'193262' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_193262' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 193262
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 193262
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 193277 (DELIVERIES BY CESAREAN), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'193277' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_193277' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 193277
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 193277
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 193437 (NEOPLASM OF UNCERTAIN BEHAVIOR OF FEMALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'193437' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_193437' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 193437
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 193437
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 193439 (BENIGN NEOPLASM OF BODY OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'193439' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_193439' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 193439
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 193439
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 193522 (ACUTE PROSTATITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'193522' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_193522' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 193522
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 193522
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 193530 (FOLLICULAR CYST OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'193530' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_193530' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 193530
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 193530
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 193739 (OVARIAN FAILURE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'193739' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_193739' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 193739
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 193739
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 193818 (CALCULUS OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'193818' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_193818' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 193818
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 193818
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 194092 (UTERINE PROLAPSE WITHOUT VAGINAL WALL PROLAPSE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'194092' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_194092' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 194092
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 194092
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 194286 (MALIGNANT NEOPLASM OF CORPUS UTERI, EXCLUDING ISTHMUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'194286' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_194286' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 194286
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 194286
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 194412 (DYSPLASIA OF VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'194412' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_194412' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 194412
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 194412
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 194420 (ENDOMETRIOSIS OF FALLOPIAN TUBE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'194420' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_194420' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 194420
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 194420
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 194611 (CARCINOMA IN SITU OF UTERINE CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'194611' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_194611' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 194611
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 194611
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 194696 (DYSMENORRHEA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'194696' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_194696' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 194696
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 194696
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 194871 (TRICHOMONAL VULVOVAGINITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'194871' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_194871' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 194871
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 194871
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 194997 (PROSTATITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'194997' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_194997' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 194997
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 194997
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 195009 (LEUKOPLAKIA OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'195009' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_195009' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 195009
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 195009
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 195012 (INTERMENSTRUAL BLEEDING - IRREGULAR), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'195012' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_195012' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 195012
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 195012
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 195197 (PRIMARY MALIGNANT NEOPLASM OF VULVA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'195197' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_195197' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 195197
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 195197
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 195316 (ATYPICAL ENDOMETRIAL HYPERPLASIA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'195316' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_195316' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 195316
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 195316
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 195321 (POSTMENOPAUSAL BLEEDING), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'195321' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_195321' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 195321
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 195321
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 195483 (PRIMARY MALIGNANT NEOPLASM OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'195483' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_195483' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 195483
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 195483
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 195500 (BENIGN NEOPLASM OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'195500' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_195500' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 195500
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 195500
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 195501 (POLYCYSTIC OVARIES), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'195501' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_195501' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 195501
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 195501
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 195683 (OPEN WOUND OF PENIS WITHOUT COMPLICATION), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'195683' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_195683' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 195683
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 195683
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 195769 (SUBMUCOUS LEIOMYOMA OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'195769' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_195769' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 195769
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 195769
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 195770 (SUBSEROUS LEIOMYOMA OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'195770' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_195770' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 195770
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 195770
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 195793 (NEOPLASM OF UNCERTAIN BEHAVIOR OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'195793' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_195793' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 195793
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 195793
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 195867 (NONINFLAMMATORY DISORDER OF THE VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'195867' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_195867' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 195867
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 195867
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 195873 (LEUKORRHEA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'195873' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_195873' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 195873
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 195873
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 196048 (PRIMARY MALIGNANT NEOPLASM OF VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'196048' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_196048' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 196048
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 196048
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 196051 (OVERLAPPING MALIGNANT NEOPLASM OF FEMALE GENITAL ORGANS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'196051' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_196051' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 196051
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 196051
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 196068 (CARCINOMA IN SITU OF MALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'196068' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_196068' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 196068
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 196068
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 196157 (INDURATIO PENIS PLASTICA), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'196157' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_196157' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 196157
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 196157
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 196158 (DISORDER OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'196158' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_196158' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 196158
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 196158
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 196163 (CERVICITIS AND ENDOCERVICITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'196163' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_196163' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 196163
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 196163
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 196165 (CERVICAL INTRAEPITHELIAL NEOPLASIA GRADE 2), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'196165' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_196165' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 196165
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 196165
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 196168 (IRREGULAR PERIODS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'196168' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_196168' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 196168
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 196168
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 196359 (PRIMARY MALIGNANT NEOPLASM OF UTERINE CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'196359' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_196359' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 196359
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 196359
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 196364 (BENIGN NEOPLASM OF UTERINE CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'196364' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_196364' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 196364
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 196364
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 196473 (HYPERTROPHY OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'196473' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_196473' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 196473
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 196473
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 196734 (DISORDER OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'196734' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_196734' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 196734
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 196734
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 196738 (DISORDER OF MALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'196738' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_196738' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 196738
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 196738
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 196758 (TUMOR OF BODY OF UTERUS AFFECTING PREGNANCY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'196758' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_196758' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 196758
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 196758
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 197032 (HYPERPLASIA OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'197032' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_197032' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 197032
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 197032
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 197039 (MALE GENITAL ORGAN VASCULAR DISEASES), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'197039' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_197039' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 197039
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 197039
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 197044 (FEMALE INFERTILITY ASSOCIATED WITH ANOVULATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'197044' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_197044' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 197044
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 197044
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 197236 (UTERINE LEIOMYOMA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'197236' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_197236' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 197236
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 197236
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 197237 (BENIGN NEOPLASM OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'197237' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_197237' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 197237
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 197237
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 197507 (PRIMARY MALIGNANT NEOPLASM OF MALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'197507' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_197507' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 197507
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 197507
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 197601 (SPERMATOCELE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'197601' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_197601' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 197601
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 197601
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 197605 (INFLAMMATORY DISORDER OF MALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'197605' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_197605' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 197605
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 197605
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 197606 (FEMALE INFERTILITY OF TUBAL ORIGIN), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'197606' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_197606' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 197606
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 197606
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 197607 (EXCESSIVE AND FREQUENT MENSTRUATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'197607' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_197607' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 197607
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 197607
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 197609 (CERVICAL, VAGINAL AND VULVAL INFLAMMATORY DISEASES), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'197609' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_197609' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 197609
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 197609
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 197610 (CYST OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'197610' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_197610' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 197610
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 197610
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 197938 (UTERINE INERTIA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'197938' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_197938' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 197938
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 197938
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 198082 (OVERLAPPING MALIGNANT NEOPLASM OF BODY OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'198082' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_198082' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 198082
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 198082
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 198108 (BENIGN NEOPLASM OF FALLOPIAN TUBES AND UTERINE LIGAMENTS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'198108' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_198108' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 198108
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 198108
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 198194 (FEMALE GENITAL ORGAN SYMPTOMS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'198194' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_198194' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 198194
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 198194
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 198197 (MALE INFERTILITY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'198197' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_198197' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 198197
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 198197
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 198198 (POLYP OF VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'198198' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_198198' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 198198
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 198198
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 198202 (CYSTOCELE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'198202' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_198202' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 198202
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 198202
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 198212 (SPOTTING PER VAGINA IN PREGNANCY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'198212' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_198212' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 198212
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 198212
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 198363 (CANDIDIASIS OF VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'198363' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_198363' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 198363
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 198363
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 198471 (COMPLEX ENDOMETRIAL HYPERPLASIA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'198471' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_198471' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 198471
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 198471
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 198483 (STRICTURE OR ATRESIA OF THE VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'198483' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_198483' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 198483
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 198483
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 198803 (BENIGN PROSTATIC HYPERPLASIA), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'198803' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_198803' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 198803
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 198803
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 198806 (ABSCESS OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'198806' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_198806' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 198806
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 198806
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 199067 (FEMALE PELVIC INFLAMMATORY DISEASE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'199067' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_199067' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 199067
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 199067
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 199078 (VAGINAL WALL PROLAPSE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'199078' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_199078' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 199078
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 199078
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 199752 (SECONDARY MALIGNANT NEOPLASM OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'199752' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_199752' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 199752
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 199752
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 199764 (BENIGN NEOPLASM OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'199764' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_199764' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 199764
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 199764
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 199876 (PROLAPSE OF FEMALE GENITAL ORGANS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'199876' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_199876' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 199876
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 199876
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 199877 (MUCOUS POLYP OF CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'199877' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_199877' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 199877
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 199877
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 199878 (LIGHT AND INFREQUENT MENSTRUATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'199878' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_199878' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 199878
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 199878
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 199881 (ENDOMETRIOSIS OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'199881' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_199881' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 199881
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 199881
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 200051 (PRIMARY MALIGNANT NEOPLASM OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'200051' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_200051' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 200051
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 200051
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 200052 (PRIMARY MALIGNANT NEOPLASM OF UTERINE ADNEXA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'200052' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_200052' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 200052
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 200052
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 200147 (ATROPHY OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'200147' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_200147' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 200147
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 200147
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 200445 (CHRONIC PROSTATITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'200445' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_200445' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 200445
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 200445
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 200452 (DISORDER OF FEMALE GENITAL ORGANS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'200452' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_200452' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 200452
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 200452
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 200461 (ENDOMETRIOSIS OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'200461' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_200461' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 200461
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 200461
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 200670 (BENIGN NEOPLASM OF MALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'200670' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_200670' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 200670
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 200670
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 200675 (NEOPLASM OF UNCERTAIN BEHAVIOR OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'200675' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_200675' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 200675
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 200675
# MAGIC ) denominator
# MAGIC ) cte
# MAGIC )
# MAGIC INSERT INTO ${results_catalog}.${results_schema}.dqdashboard_results
# MAGIC SELECT *
# MAGIC FROM cte_all;
# MAGIC WITH cte_all  AS (SELECT cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  , CAST('' as STRING) as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 200775 (ENDOMETRIAL HYPERPLASIA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'200775' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_200775' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 200775
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 200775
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 200779 (POLYP OF CORPUS UTERI), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'200779' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_200779' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 200779
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 200779
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 200780 (DISORDER OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'200780' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_200780' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 200780
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 200780
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 200962 (PRIMARY MALIGNANT NEOPLASM OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'200962' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_200962' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 200962
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 200962
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 200970 (CARCINOMA IN SITU OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'200970' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_200970' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 200970
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 200970
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 201072 (BENIGN PROSTATIC HYPERTROPHY WITHOUT OUTFLOW OBSTRUCTION), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'201072' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_201072' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 201072
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 201072
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 201078 (ATROPHIC VAGINITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'201078' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_201078' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 201078
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 201078
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 201211 (HERPETIC VULVOVAGINITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'201211' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_201211' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 201211
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 201211
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 201238 (PRIMARY MALIGNANT NEOPLASM OF FEMALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'201238' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_201238' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 201238
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 201238
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 201244 (BENIGN NEOPLASM OF VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'201244' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_201244' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 201244
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 201244
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 201257 (DISORDER OF ENDOCRINE OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'201257' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_201257' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 201257
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 201257
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 201346 (EDEMA OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'201346' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_201346' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 201346
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 201346
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 201355 (EROSION AND ECTROPION OF THE CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'201355' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_201355' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 201355
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 201355
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 201527 (NEOPLASM OF UNCERTAIN BEHAVIOR OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'201527' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_201527' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 201527
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 201527
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 201617 (PROSTATIC CYST), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'201617' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_201617' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 201617
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 201617
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 201625 (MALPOSITION OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'201625' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_201625' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 201625
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 201625
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 201801 (PRIMARY MALIGNANT NEOPLASM OF FALLOPIAN TUBE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'201801' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_201801' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 201801
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 201801
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 201817 (BENIGN NEOPLASM OF FEMALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'201817' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_201817' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 201817
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 201817
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 201823 (BENIGN NEOPLASM OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'201823' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_201823' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 201823
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 201823
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 201907 (EDEMA OF MALE GENITAL ORGANS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'201907' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_201907' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 201907
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 201907
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 201909 (FEMALE INFERTILITY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'201909' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_201909' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 201909
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 201909
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 201913 (TORSION OF THE OVARY, OVARIAN PEDICLE OR FALLOPIAN TUBE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'201913' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_201913' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 201913
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 201913
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 314409 (VASCULAR DISORDER OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'314409' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_314409' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 314409
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 314409
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 315586 (PRIAPISM), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'315586' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_315586' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 315586
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 315586
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 433716 (PRIMARY MALIGNANT NEOPLASM OF TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'433716' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_433716' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 433716
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 433716
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 434251 (INJURY OF MALE EXTERNAL GENITAL ORGANS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'434251' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_434251' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 434251
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 434251
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 435315 (TORSION OF TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'435315' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_435315' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 435315
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 435315
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 435648 (RETRACTILE TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'435648' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_435648' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 435648
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 435648
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 436155 (REDUNDANT PREPUCE AND PHIMOSIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'436155' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_436155' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 436155
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 436155
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 436358 (PRIMARY MALIGNANT NEOPLASM OF EXOCERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'436358' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_436358' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 436358
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 436358
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 436366 (BENIGN NEOPLASM OF TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'436366' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_436366' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 436366
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 436366
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 436466 (BALANOPOSTHITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'436466' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_436466' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 436466
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 436466
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 437501 (PRIMARY MALIGNANT NEOPLASM OF LABIA MAJORA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'437501' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_437501' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 437501
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 437501
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 437655 (UNDESCENDED TESTICLE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'437655' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_437655' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 437655
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 437655
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 438477 (ATROPHY OF TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'438477' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_438477' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 438477
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 438477
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 439871 (HEMOSPERMIA), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'439871' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_439871' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 439871
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 439871
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 440971 (NEOPLASM OF UNCERTAIN BEHAVIOR OF TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'440971' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_440971' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 440971
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 440971
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 441068 (TORSION OF APPENDIX OF TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'441068' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_441068' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 441068
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 441068
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 441077 (STENOSIS OF CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'441077' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_441077' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 441077
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 441077
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 441805 (PRIMARY MALIGNANT NEOPLASM OF ENDOCERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'441805' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_441805' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 441805
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 441805
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 442781 (DISORDER OF UTERINE CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'442781' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_442781' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 442781
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 442781
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 443211 (BENIGN PROSTATIC HYPERTROPHY WITH OUTFLOW OBSTRUCTION), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'443211' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_443211' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 443211
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 443211
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 443435 (PRIMARY UTERINE INERTIA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'443435' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_443435' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 443435
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 443435
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 443800 (AMENORRHEA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'443800' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_443800' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 443800
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 443800
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 444078 (INFLAMMATION OF CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'444078' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_444078' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 444078
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 444078
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 444106 (CANDIDIASIS OF VULVA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'444106' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_444106' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 444106
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 444106
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2003947 (CLOSED [PERCUTANEOUS] [NEEDLE] BIOPSY OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2003947' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2003947' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2003947
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2003947
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2003966 (OTHER TRANSURETHRAL PROSTATECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2003966' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2003966' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2003966
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2003966
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2003983 (OTHER PROSTATECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2003983' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2003983' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2003983
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2003983
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2004031 (OTHER REPAIR OF SCROTUM AND TUNICA VAGINALIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2004031' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2004031' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2004031
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2004031
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2004063 (UNILATERAL ORCHIECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2004063' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2004063' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2004063
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2004063
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2004070 (OTHER REPAIR OF TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2004070' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2004070' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2004070
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2004070
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2004090 (EXCISION OF VARICOCELE AND HYDROCELE OF SPERMATIC CORD), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2004090' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2004090' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2004090
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2004090
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2004164 (LOCAL EXCISION OR DESTRUCTION OF LESION OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2004164' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2004164' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2004164
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2004164
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2004263 (OTHER REMOVAL OF BOTH OVARIES AND TUBES AT SAME OPERATIVE EPISODE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2004263' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2004263' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2004263
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2004263
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2004329 (OTHER BILATERAL DESTRUCTION OR OCCLUSION OF FALLOPIAN TUBES), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2004329' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2004329' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2004329
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2004329
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2004342 (REMOVAL OF BOTH FALLOPIAN TUBES AT SAME OPERATIVE EPISODE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2004342' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2004342' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2004342
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2004342
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2004443 (CLOSED BIOPSY OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2004443' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2004443' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2004443
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2004443
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2004627 (VAGINAL SUSPENSION AND FIXATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2004627' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2004627' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2004627
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2004627
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2109825 (TRANSURETHRAL ELECTROSURGICAL RESECTION OF PROSTATE, INCLUDING CONTROL OF POSTOPERATIVE BLEEDING, COMPLETE (VASECTOMY, MEATOTOMY, CYSTOURETHROSCOPY, URETHRAL CALIBRATION AND/OR DILATION, AND INTERNAL URETHROTOMY ARE INCLUDED)), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2109825' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2109825' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2109825
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2109825
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2109833 (LASER VAPORIZATION OF PROSTATE, INCLUDING CONTROL OF POSTOPERATIVE BLEEDING, COMPLETE (VASECTOMY, MEATOTOMY, CYSTOURETHROSCOPY, URETHRAL CALIBRATION AND/OR DILATION, INTERNAL URETHROTOMY AND TRANSURETHRAL RESECTION OF PROSTATE ARE INCLUDED IF PERFORMED)), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2109833' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2109833' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2109833
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2109833
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2109900 (DESTRUCTION OF LESION(S), PENIS (EG, CONDYLOMA, PAPILLOMA, MOLLUSCUM CONTAGIOSUM, HERPETIC VESICLE), SIMPLE CHEMICAL), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2109900' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2109900' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2109900
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2109900
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2109902 (DESTRUCTION OF LESION(S), PENIS (EG, CONDYLOMA, PAPILLOMA, MOLLUSCUM CONTAGIOSUM, HERPETIC VESICLE), SIMPLE CRYOSURGERY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2109902' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2109902' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2109902
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2109902
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2109905 (DESTRUCTION OF LESION(S), PENIS (EG, CONDYLOMA, PAPILLOMA, MOLLUSCUM CONTAGIOSUM, HERPETIC VESICLE), EXTENSIVE (EG, LASER SURGERY, ELECTROSURGERY, CRYOSURGERY, CHEMOSURGERY)), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2109905' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2109905' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2109905
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2109905
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2109906 (BIOPSY OF PENIS, (SEPARATE PROCEDURE)), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2109906' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2109906' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2109906
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2109906
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2109916 (CIRCUMCISION, USING CLAMP OR OTHER DEVICE WITH REGIONAL DORSAL PENILE OR RING BLOCK), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2109916' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2109916' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2109916
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2109916
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2109968 (FORESKIN MANIPULATION INCLUDING LYSIS OF PREPUTIAL ADHESIONS AND STRETCHING), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2109968' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2109968' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2109968
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2109968
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2109973 (ORCHIECTOMY, SIMPLE (INCLUDING SUBCAPSULAR), WITH OR WITHOUT TESTICULAR PROSTHESIS, SCROTAL OR INGUINAL APPROACH), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2109973' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2109973' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2109973
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2109973
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2109981 (ORCHIOPEXY, INGUINAL APPROACH, WITH OR WITHOUT HERNIA REPAIR), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2109981' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2109981' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2109981
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2109981
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110004 (DRAINAGE OF SCROTAL WALL ABSCESS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110004' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110004' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110004
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110004
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110011 (VASECTOMY, UNILATERAL OR BILATERAL (SEPARATE PROCEDURE), INCLUDING POSTOPERATIVE SEMEN EXAMINATION(S)), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110011' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110011' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110011
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110011
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110026 (BIOPSY, PROSTATE NEEDLE OR PUNCH, SINGLE OR MULTIPLE, ANY APPROACH), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110026' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110026' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110026
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110026
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110039 (PROSTATECTOMY, RETROPUBIC RADICAL, WITH OR WITHOUT NERVE SPARING WITH BILATERAL PELVIC LYMPHADENECTOMY, INCLUDING EXTERNAL ILIAC, HYPOGASTRIC, AND OBTURATOR NODES), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110039' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110039' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110039
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110039
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110044 (LAPAROSCOPY, SURGICAL PROSTATECTOMY, RETROPUBIC RADICAL, INCLUDING NERVE SPARING, INCLUDES ROBOTIC ASSISTANCE, WHEN PERFORMED), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110044' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110044' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110044
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110044
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110078 (COLPOSCOPY OF THE VULVA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110078' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110078' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110078
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110078
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110116 (COLPOPEXY, VAGINAL EXTRA-PERITONEAL APPROACH (SACROSPINOUS, ILIOCOCCYGEUS)), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110116' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110116' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110116
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110116
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110142 (LAPAROSCOPY, SURGICAL, COLPOPEXY (SUSPENSION OF VAGINAL APEX)), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110142' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110142' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110142
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110142
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110144 (COLPOSCOPY OF THE CERVIX INCLUDING UPPER/ADJACENT VAGINA, WITH BIOPSY(S) OF THE CERVIX AND ENDOCERVICAL CURETTAGE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110144' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110144' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110144
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110144
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110169 (ENDOMETRIAL SAMPLING (BIOPSY) WITH OR WITHOUT ENDOCERVICAL SAMPLING (BIOPSY), WITHOUT CERVICAL DILATION, ANY METHOD (SEPARATE PROCEDURE)), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110169' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110169' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110169
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110169
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110175 (TOTAL ABDOMINAL HYSTERECTOMY (CORPUS AND CERVIX), WITH OR WITHOUT REMOVAL OF TUBE(S), WITH OR WITHOUT REMOVAL OF OVARY(S)), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110175' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110175' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110175
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110175
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110194 (INSERTION OF INTRAUTERINE DEVICE (IUD)), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110194' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110194' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110194
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110194
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110195 (REMOVAL OF INTRAUTERINE DEVICE (IUD)), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110195' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110195' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110195
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110195
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110203 (ENDOMETRIAL ABLATION, THERMAL, WITHOUT HYSTEROSCOPIC GUIDANCE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110203' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110203' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110203
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110203
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110222 (HYSTEROSCOPY, SURGICAL WITH SAMPLING (BIOPSY) OF ENDOMETRIUM AND/OR POLYPECTOMY, WITH OR WITHOUT D & C), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110222' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110222' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110222
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110222
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110227 (HYSTEROSCOPY, SURGICAL WITH ENDOMETRIAL ABLATION (EG, ENDOMETRIAL RESECTION, ELECTROSURGICAL ABLATION, THERMOABLATION)), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110227' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110227' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110227
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110227
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110230 (LAPAROSCOPY, SURGICAL, WITH TOTAL HYSTERECTOMY, FOR UTERUS 250 G OR LESS WITH REMOVAL OF TUBE(S) AND/OR OVARY(S)), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110230' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110230' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110230
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110230
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110307 (ROUTINE OBSTETRIC CARE INCLUDING ANTEPARTUM CARE, VAGINAL DELIVERY (WITH OR WITHOUT EPISIOTOMY, AND/OR FORCEPS) AND POSTPARTUM CARE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110307' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110307' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110307
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110307
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110315 (ROUTINE OBSTETRIC CARE INCLUDING ANTEPARTUM CARE, CESAREAN DELIVERY, AND POSTPARTUM CARE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110315' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110315' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110315
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110315
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110316 (CESAREAN DELIVERY ONLY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110316' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110316' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110316
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110316
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110317 (CESAREAN DELIVERY ONLY, INCLUDING POSTPARTUM CARE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110317' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110317' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110317
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110317
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2110326 (TREATMENT OF MISSED ABORTION, COMPLETED SURGICALLY FIRST TRIMESTER), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2110326' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110326' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110326
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2110326
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2211747 (ULTRASOUND, PREGNANT UTERUS, REAL TIME WITH IMAGE DOCUMENTATION, FETAL AND MATERNAL EVALUATION, FIRST TRIMESTER (< 14 WEEKS 0 DAYS), TRANSABDOMINAL APPROACH SINGLE OR FIRST GESTATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2211747' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2211747' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2211747
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2211747
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2211749 (ULTRASOUND, PREGNANT UTERUS, REAL TIME WITH IMAGE DOCUMENTATION, FETAL AND MATERNAL EVALUATION, AFTER FIRST TRIMESTER (> OR = 14 WEEKS 0 DAYS), TRANSABDOMINAL APPROACH SINGLE OR FIRST GESTATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2211749' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2211749' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2211749
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2211749
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2211751 (ULTRASOUND, PREGNANT UTERUS, REAL TIME WITH IMAGE DOCUMENTATION, FETAL AND MATERNAL EVALUATION PLUS DETAILED FETAL ANATOMIC EXAMINATION, TRANSABDOMINAL APPROACH SINGLE OR FIRST GESTATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2211751' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2211751' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2211751
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2211751
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2211753 (ULTRASOUND, PREGNANT UTERUS, REAL TIME WITH IMAGE DOCUMENTATION, FIRST TRIMESTER FETAL NUCHAL TRANSLUCENCY MEASUREMENT, TRANSABDOMINAL OR TRANSVAGINAL APPROACH SINGLE OR FIRST GESTATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2211753' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2211753' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2211753
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2211753
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2211755 (ULTRASOUND, PREGNANT UTERUS, REAL TIME WITH IMAGE DOCUMENTATION, LIMITED (EG, FETAL HEART BEAT, PLACENTAL LOCATION, FETAL POSITION AND/OR QUALITATIVE AMNIOTIC FLUID VOLUME), 1 OR MORE FETUSES), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2211755' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2211755' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2211755
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2211755
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2211756 (ULTRASOUND, PREGNANT UTERUS, REAL TIME WITH IMAGE DOCUMENTATION, FOLLOW-UP (EG, RE-EVALUATION OF FETAL SIZE BY MEASURING STANDARD GROWTH PARAMETERS AND AMNIOTIC FLUID VOLUME, RE-EVALUATION OF ORGAN SYSTEM(S) SUSPECTED OR CONFIRMED TO BE ABNORMAL ON A PREV), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2211756' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2211756' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2211756
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2211756
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2211757 (ULTRASOUND, PREGNANT UTERUS, REAL TIME WITH IMAGE DOCUMENTATION, TRANSVAGINAL), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2211757' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2211757' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2211757
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2211757
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2211765 (ULTRASOUND, TRANSVAGINAL), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2211765' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2211765' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2211765
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2211765
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2211769 (ULTRASOUND, SCROTUM AND CONTENTS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2211769' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2211769' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2211769
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2211769
# MAGIC ) denominator
# MAGIC ) cte
# MAGIC )
# MAGIC INSERT INTO ${results_catalog}.${results_schema}.dqdashboard_results
# MAGIC SELECT *
# MAGIC FROM cte_all;
# MAGIC WITH cte_all  AS (SELECT cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  , CAST('' as STRING) as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2617204 (CERVICAL OR VAGINAL CANCER SCREENING, PELVIC AND CLINICAL BREAST EXAMINATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2617204' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2617204' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2617204
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2617204
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2721063 (ANNUAL GYNECOLOGICAL EXAMINATION, NEW PATIENT), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2721063' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2721063' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2721063
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2721063
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2721064 (ANNUAL GYNECOLOGICAL EXAMINATION, ESTABLISHED PATIENT), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2721064' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2721064' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2721064
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2721064
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2780478 (RESECTION OF PROSTATE, PERCUTANEOUS ENDOSCOPIC APPROACH), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2780478' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2780478' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2780478
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2780478
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 2780523 (RESECTION OF PREPUCE, EXTERNAL APPROACH), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'2780523' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_2780523' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 2780523
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 2780523
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4005743 (FEMALE STERILITY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4005743' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4005743' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4005743
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4005743
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4005933 (HYPOSPADIAS, PENILE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4005933' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4005933' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4005933
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4005933
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4012343 (VAGINAL DISCHARGE SYMPTOM), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4012343' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4012343' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4012343
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4012343
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4016155 (PROSTATISM), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4016155' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4016155' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4016155
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4016155
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4021531 (TOTAL ABDOMINAL HYSTERECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4021531' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4021531' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4021531
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4021531
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4032594 (INFLAMMATION OF SCROTUM), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4032594' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4032594' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4032594
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4032594
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4032622 (LAPAROSCOPIC SUPRACERVICAL HYSTERECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4032622' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4032622' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4032622
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4032622
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4038747 (OBSTETRIC EXAMINATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4038747' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4038747' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4038747
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4038747
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4048225 (NEOPLASM OF ENDOMETRIUM), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4048225' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4048225' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4048225
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4048225
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4050091 (OPEN WOUND OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4050091' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4050091' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4050091
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4050091
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4051956 (VULVOVAGINAL DISEASE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4051956' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4051956' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4051956
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4051956
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4052532 (HYSTEROSCOPY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4052532' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4052532' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4052532
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4052532
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4054550 (OPEN WOUND OF SCROTUM AND TESTES), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4054550' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4054550' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4054550
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4054550
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4056903 (VAGINITIS ASSOCIATED WITH ANOTHER DISORDER), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4056903' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4056903' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4056903
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4056903
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4058792 (DOUCHE OF VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4058792' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4058792' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4058792
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4058792
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4060207 (VULVAL IRRITATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4060207' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4060207' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4060207
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4060207
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4060556 (UTERINE SCAR FROM PREVIOUS SURGERY IN PREGNANCY, CHILDBIRTH AND THE PUERPERIUM), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4060556' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4060556' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4060556
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4060556
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4060558 (UTERINE SCAR FROM PREVIOUS SURGERY IN PREGNANCY, CHILDBIRTH AND THE PUERPERIUM - DELIVERED), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4060558' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4060558' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4060558
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4060558
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4060559 (UTERINE SCAR FROM PREVIOUS SURGERY IN PREGNANCY, CHILDBIRTH AND THE PUERPERIUM WITH ANTENATAL PROBLEM), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4060559' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4060559' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4060559
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4060559
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4061050 (SUBACUTE AND CHRONIC VAGINITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4061050' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4061050' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4061050
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4061050
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4071874 (PAIN IN SCROTUM), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4071874' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4071874' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4071874
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4071874
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4073700 (TRANSURETHRAL LASER PROSTATECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4073700' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4073700' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4073700
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4073700
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4081648 (ACUTE VAGINITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4081648' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4081648' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4081648
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4081648
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4083772 (ECHOGRAPHY OF SCROTUM AND CONTENTS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4083772' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4083772' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4083772
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4083772
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4090039 (PENILE ARTERIAL INSUFFICIENCY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4090039' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4090039' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4090039
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4090039
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4092515 (MALIGNANT NEOPLASM, OVERLAPPING LESION OF CERVIX UTERI), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4092515' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4092515' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4092515
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4092515
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4093346 (LARGE PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4093346' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4093346' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4093346
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4093346
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4095940 (FINDING OF PATTERN OF MENSTRUAL CYCLE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4095940' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4095940' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4095940
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4095940
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4096783 (RADICAL PROSTATECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4096783' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4096783' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4096783
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4096783
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4109081 (PAIN IN PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4109081' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4109081' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4109081
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4109081
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4127886 (HYSTERECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4127886' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4127886' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4127886
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4127886
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4128329 (MENOPAUSE PRESENT), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4128329' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4128329' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4128329
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4128329
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4129155 (VAGINAL BLEEDING), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4129155' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4129155' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4129155
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4129155
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4138738 (VAGINAL HYSTERECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4138738' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4138738' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4138738
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4138738
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4140828 (ACUTE VULVITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4140828' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4140828' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4140828
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4140828
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4141940 (ENDOMETRIAL ABLATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4141940' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4141940' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4141940
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4141940
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4143116 (AZOOSPERMIA), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4143116' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4143116' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4143116
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4143116
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4146777 (RADICAL ABDOMINAL HYSTERECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4146777' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4146777' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4146777
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4146777
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4147021 (CONTUSION, SCROTUM OR TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4147021' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4147021' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4147021
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4147021
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4149084 (VAGINITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4149084' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4149084' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4149084
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4149084
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4150042 (VAGINAL ULCER), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4150042' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4150042' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4150042
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4150042
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4150816 (BICORNUATE UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4150816' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4150816' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4150816
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4150816
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4155529 (MECHANICAL COMPLICATION OF INTRAUTERINE CONTRACEPTIVE DEVICE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4155529' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4155529' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4155529
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4155529
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4156113 (MALIGNANT NEOPLASM OF BODY OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4156113' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4156113' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4156113
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4156113
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4161944 (LOW CERVICAL CESAREAN SECTION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4161944' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4161944' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4161944
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4161944
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4162860 (PRIMARY MALIGNANT NEOPLASM OF BODY OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4162860' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4162860' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4162860
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4162860
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4163261 (MALIGNANT TUMOR OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4163261' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4163261' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4163261
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4163261
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4171394 (ABNORMAL MENSTRUAL CYCLE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4171394' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4171394' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4171394
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4171394
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4171915 (ORCHITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4171915' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4171915' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4171915
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4171915
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4180978 (VULVOVAGINITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4180978' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4180978' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4180978
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4180978
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4181912 (CONE BIOPSY OF CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4181912' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4181912' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4181912
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4181912
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4194652 (PRURITUS OF VULVA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4194652' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4194652' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4194652
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4194652
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4199600 (CANDIDAL BALANITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4199600' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4199600' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4199600
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4199600
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4234536 (TRANSURETHRAL PROSTATECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4234536' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4234536' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4234536
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4234536
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4235215 (SWELLING OF TESTICLE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4235215' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4235215' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4235215
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4235215
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4238715 (REMOVAL OF INTRAUTERINE DEVICE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4238715' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4238715' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4238715
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4238715
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4243919 (INCISION OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4243919' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4243919' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4243919
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4243919
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4260520 (BALANITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4260520' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4260520' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4260520
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4260520
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4270932 (PAIN IN TESTICLE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4270932' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4270932' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4270932
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4270932
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4275113 (INSERTION OF INTRAUTERINE CONTRACEPTIVE DEVICE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4275113' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4275113' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4275113
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4275113
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4279913 (PRIMARY OVARIAN FAILURE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4279913' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4279913' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4279913
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4279913
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4281030 (SECONDARY MALIGNANT NEOPLASM OF RIGHT OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4281030' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4281030' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4281030
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4281030
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4294393 (ULCER OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4294393' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4294393' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4294393
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4294393
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4294805 (LAPAROSCOPIC-ASSISTED VAGINAL HYSTERECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4294805' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4294805' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4294805
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4294805
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4295261 (POSTMENOPAUSAL STATE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4295261' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4295261' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4295261
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4295261
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4303258 (BACTERIAL VAGINOSIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4303258' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4303258' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4303258
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4303258
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4306780 (GYNECOLOGIC EXAMINATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4306780' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4306780' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4306780
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4306780
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4310552 (ORCHIDOPEXY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4310552' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4310552' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4310552
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4310552
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4320332 (HYDROCELE OF TUNICA VAGINALIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4320332' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4320332' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4320332
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4320332
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4321575 (LYSIS OF PENILE ADHESIONS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4321575' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4321575' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4321575
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4321575
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4330583 (VASECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4330583' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_procedure_occurrence_procedure_concept_id_4330583' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID = 4330583
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE PROCEDURE_CONCEPT_ID = 4330583
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 4339088 (TESTICULAR MASS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4339088' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_4339088' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 4339088
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 4339088
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 40481080 (BENIGN LOCALIZED HYPERPLASIA OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'40481080' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_40481080' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 40481080
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 40481080
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 40482030 (DYSPLASIA OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'40482030' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_40482030' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 40482030
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 40482030
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 40482406 (LOW LYING PLACENTA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'40482406' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_40482406' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 40482406
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 40482406
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 40483613 (INFLAMMATORY DISEASE OF FEMALE GENITAL STRUCTURE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'40483613' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_40483613' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 40483613
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 40483613
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 40490888 (HERNIATION OF RECTUM INTO VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'40490888' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_40490888' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 40490888
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 40490888
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 42709954 (PHIMOSIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'42709954' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_42709954' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 42709954
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 42709954
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 45757415 (BENIGN ENDOMETRIAL HYPERPLASIA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'45757415' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_45757415' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 45757415
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 45757415
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 45766654 (DISORDER OF SKIN OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'45766654' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_45766654' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 45766654
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 45766654
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 45770892 (PRIMARY MALIGNANT NEOPLASM OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'45770892' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_45770892' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 45770892
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 45770892
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGender' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For a CONCEPT_ID 45772671 (NODULAR PROSTATE WITHOUT URINARY OBSTRUCTION), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'45772671' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegender_condition_occurrence_condition_concept_id_45772671' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID = 45772671
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE CONDITION_CONCEPT_ID = 45772671
# MAGIC ) denominator
# MAGIC ) cte
# MAGIC )
# MAGIC INSERT INTO ${results_catalog}.${results_schema}.dqdashboard_results
# MAGIC SELECT *
# MAGIC FROM cte_all;
# MAGIC

# COMMAND ----------

# MAGIC %sql
# MAGIC WITH cte_all  AS (SELECT cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  , CAST('' as STRING) as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the CONDITION_ERA_START_DATE field of the CONDITION_ERA table that occurs prior to birth.' as check_description
# MAGIC  ,'CONDITION_ERA' as cdm_table_name
# MAGIC  ,'CONDITION_ERA_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_condition_era_condition_era_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_ERA.CONDITION_ERA_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_ERA_START_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.CONDITION_ERA_START_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC  WHERE cdmTable.CONDITION_ERA_START_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the CONDITION_ERA_END_DATE field of the CONDITION_ERA table that occurs prior to birth.' as check_description
# MAGIC  ,'CONDITION_ERA' as cdm_table_name
# MAGIC  ,'CONDITION_ERA_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_condition_era_condition_era_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_ERA.CONDITION_ERA_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_ERA_END_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.CONDITION_ERA_END_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC  WHERE cdmTable.CONDITION_ERA_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the CONDITION_START_DATE field of the CONDITION_OCCURRENCE table that occurs prior to birth.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_condition_occurrence_condition_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_START_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.CONDITION_START_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.CONDITION_START_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the CONDITION_START_DATETIME field of the CONDITION_OCCURRENCE table that occurs prior to birth.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_START_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_condition_occurrence_condition_start_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.CONDITION_START_DATETIME' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_START_DATETIME IS NOT NULL AND 
# MAGIC  CAST(cdmTable.CONDITION_START_DATETIME AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.CONDITION_START_DATETIME IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the CONDITION_END_DATE field of the CONDITION_OCCURRENCE table that occurs prior to birth.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_condition_occurrence_condition_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.CONDITION_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_END_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.CONDITION_END_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.CONDITION_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the CONDITION_END_DATETIME field of the CONDITION_OCCURRENCE table that occurs prior to birth.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_END_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_condition_occurrence_condition_end_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.CONDITION_END_DATETIME' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.CONDITION_END_DATETIME IS NOT NULL AND 
# MAGIC  CAST(cdmTable.CONDITION_END_DATETIME AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.CONDITION_END_DATETIME IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DEATH_DATE field of the DEATH table that occurs prior to birth.' as check_description
# MAGIC  ,'DEATH' as cdm_table_name
# MAGIC  ,'DEATH_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_death_death_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEATH.DEATH_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEATH cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.DEATH_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.DEATH_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEATH cdmTable
# MAGIC  WHERE cdmTable.DEATH_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the death_timestamp field of the DEATH table that occurs prior to birth.' as check_description
# MAGIC  ,'DEATH' as cdm_table_name
# MAGIC  ,'death_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_death_death_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEATH.death_timestamp' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEATH cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.death_timestamp IS NOT NULL AND 
# MAGIC  CAST(cdmTable.death_timestamp AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEATH cdmTable
# MAGIC  WHERE cdmTable.death_timestamp IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DEVICE_EXPOSURE_START_DATE field of the DEVICE_EXPOSURE table that occurs prior to birth.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'DEVICE_EXPOSURE_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_device_exposure_device_exposure_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.DEVICE_EXPOSURE_START_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DEVICE_EXPOSURE_START_DATETIME field of the DEVICE_EXPOSURE table that occurs prior to birth.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'DEVICE_EXPOSURE_START_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_device_exposure_device_exposure_start_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_START_DATETIME IS NOT NULL AND 
# MAGIC  CAST(cdmTable.DEVICE_EXPOSURE_START_DATETIME AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_START_DATETIME IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DEVICE_EXPOSURE_END_DATE field of the DEVICE_EXPOSURE table that occurs prior to birth.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'DEVICE_EXPOSURE_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_device_exposure_device_exposure_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_END_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.DEVICE_EXPOSURE_END_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DEVICE_EXPOSURE_END_DATETIME field of the DEVICE_EXPOSURE table that occurs prior to birth.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'DEVICE_EXPOSURE_END_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_device_exposure_device_exposure_end_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_END_DATETIME IS NOT NULL AND 
# MAGIC  CAST(cdmTable.DEVICE_EXPOSURE_END_DATETIME AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_END_DATETIME IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DOSE_ERA_START_DATE field of the DOSE_ERA table that occurs prior to birth.' as check_description
# MAGIC  ,'DOSE_ERA' as cdm_table_name
# MAGIC  ,'DOSE_ERA_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_dose_era_dose_era_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.DOSE_ERA_START_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.DOSE_ERA_START_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC  WHERE cdmTable.DOSE_ERA_START_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DOSE_ERA_END_DATE field of the DOSE_ERA table that occurs prior to birth.' as check_description
# MAGIC  ,'DOSE_ERA' as cdm_table_name
# MAGIC  ,'DOSE_ERA_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_dose_era_dose_era_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DOSE_ERA.DOSE_ERA_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.DOSE_ERA_END_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.DOSE_ERA_END_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC  WHERE cdmTable.DOSE_ERA_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DRUG_ERA_START_DATE field of the DRUG_ERA table that occurs prior to birth.' as check_description
# MAGIC  ,'DRUG_ERA' as cdm_table_name
# MAGIC  ,'DRUG_ERA_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_drug_era_drug_era_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_ERA.DRUG_ERA_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.DRUG_ERA_START_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.DRUG_ERA_START_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC  WHERE cdmTable.DRUG_ERA_START_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DRUG_ERA_END_DATE field of the DRUG_ERA table that occurs prior to birth.' as check_description
# MAGIC  ,'DRUG_ERA' as cdm_table_name
# MAGIC  ,'DRUG_ERA_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_drug_era_drug_era_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_ERA.DRUG_ERA_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.DRUG_ERA_END_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.DRUG_ERA_END_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC  WHERE cdmTable.DRUG_ERA_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DRUG_EXPOSURE_START_DATE field of the DRUG_EXPOSURE table that occurs prior to birth.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'DRUG_EXPOSURE_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_drug_exposure_drug_exposure_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_START_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.DRUG_EXPOSURE_START_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_START_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DRUG_EXPOSURE_START_DATETIME field of the DRUG_EXPOSURE table that occurs prior to birth.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'DRUG_EXPOSURE_START_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_drug_exposure_drug_exposure_start_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATETIME' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_START_DATETIME IS NOT NULL AND 
# MAGIC  CAST(cdmTable.DRUG_EXPOSURE_START_DATETIME AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_START_DATETIME IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DRUG_EXPOSURE_END_DATE field of the DRUG_EXPOSURE table that occurs prior to birth.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'DRUG_EXPOSURE_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_drug_exposure_drug_exposure_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.DRUG_EXPOSURE_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_END_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.DRUG_EXPOSURE_END_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DRUG_EXPOSURE_END_DATETIME field of the DRUG_EXPOSURE table that occurs prior to birth.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'DRUG_EXPOSURE_END_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_drug_exposure_drug_exposure_end_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.DRUG_EXPOSURE_END_DATETIME' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_END_DATETIME IS NOT NULL AND 
# MAGIC  CAST(cdmTable.DRUG_EXPOSURE_END_DATETIME AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_END_DATETIME IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the VERBATIM_END_DATE field of the DRUG_EXPOSURE table that occurs prior to birth.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'VERBATIM_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_drug_exposure_verbatim_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.VERBATIM_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.VERBATIM_END_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.VERBATIM_END_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.VERBATIM_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the MEASUREMENT_DATE field of the MEASUREMENT table that occurs prior to birth.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_measurement_measurement_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.MEASUREMENT_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.MEASUREMENT_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.MEASUREMENT_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.MEASUREMENT_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the MEASUREMENT_DATETIME field of the MEASUREMENT table that occurs prior to birth.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_measurement_measurement_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.MEASUREMENT_DATETIME' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.MEASUREMENT_DATETIME IS NOT NULL AND 
# MAGIC  CAST(cdmTable.MEASUREMENT_DATETIME AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.MEASUREMENT_DATETIME IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the NOTE_DATE field of the NOTE table that occurs prior to birth.' as check_description
# MAGIC  ,'NOTE' as cdm_table_name
# MAGIC  ,'NOTE_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_note_note_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE.NOTE_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.NOTE_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.NOTE_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  WHERE cdmTable.NOTE_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the note_timestamp field of the NOTE table that occurs prior to birth.' as check_description
# MAGIC  ,'NOTE' as cdm_table_name
# MAGIC  ,'note_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_note_note_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE.note_timestamp' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.note_timestamp IS NOT NULL AND 
# MAGIC  CAST(cdmTable.note_timestamp AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  WHERE cdmTable.note_timestamp IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the OBSERVATION_DATE field of the OBSERVATION table that occurs prior to birth.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'OBSERVATION_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_observation_observation_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.OBSERVATION_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.OBSERVATION_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.OBSERVATION_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  WHERE cdmTable.OBSERVATION_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the OBSERVATION_DATETIME field of the OBSERVATION table that occurs prior to birth.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'OBSERVATION_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_observation_observation_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.OBSERVATION_DATETIME' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.OBSERVATION_DATETIME IS NOT NULL AND 
# MAGIC  CAST(cdmTable.OBSERVATION_DATETIME AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  WHERE cdmTable.OBSERVATION_DATETIME IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the OBSERVATION_PERIOD_START_DATE field of the OBSERVATION_PERIOD table that occurs prior to birth.' as check_description
# MAGIC  ,'OBSERVATION_PERIOD' as cdm_table_name
# MAGIC  ,'OBSERVATION_PERIOD_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_observation_period_observation_period_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION_PERIOD cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.OBSERVATION_PERIOD_START_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION_PERIOD cdmTable
# MAGIC  WHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the OBSERVATION_PERIOD_END_DATE field of the OBSERVATION_PERIOD table that occurs prior to birth.' as check_description
# MAGIC  ,'OBSERVATION_PERIOD' as cdm_table_name
# MAGIC  ,'OBSERVATION_PERIOD_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_observation_period_observation_period_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION_PERIOD.OBSERVATION_PERIOD_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION_PERIOD cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.OBSERVATION_PERIOD_END_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.OBSERVATION_PERIOD_END_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION_PERIOD cdmTable
# MAGIC  WHERE cdmTable.OBSERVATION_PERIOD_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the PAYER_PLAN_PERIOD_START_DATE field of the PAYER_PLAN_PERIOD table that occurs prior to birth.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'PAYER_PLAN_PERIOD_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_payer_plan_period_payer_plan_period_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.PAYER_PLAN_PERIOD_START_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  WHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the PAYER_PLAN_PERIOD_END_DATE field of the PAYER_PLAN_PERIOD table that occurs prior to birth.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'PAYER_PLAN_PERIOD_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_payer_plan_period_payer_plan_period_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.PAYER_PLAN_PERIOD_END_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  WHERE cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the PROCEDURE_DATE field of the PROCEDURE_OCCURRENCE table that occurs prior to birth.' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_procedure_occurrence_procedure_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROCEDURE_OCCURRENCE.PROCEDURE_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.PROCEDURE_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.PROCEDURE_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the PROCEDURE_DATETIME field of the PROCEDURE_OCCURRENCE table that occurs prior to birth.' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_procedure_occurrence_procedure_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROCEDURE_OCCURRENCE.PROCEDURE_DATETIME' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_DATETIME IS NOT NULL AND 
# MAGIC  CAST(cdmTable.PROCEDURE_DATETIME AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.PROCEDURE_DATETIME IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the SPECIMEN_DATE field of the SPECIMEN table that occurs prior to birth.' as check_description
# MAGIC  ,'SPECIMEN' as cdm_table_name
# MAGIC  ,'SPECIMEN_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_specimen_specimen_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'SPECIMEN.SPECIMEN_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.SPECIMEN_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.SPECIMEN_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  WHERE cdmTable.SPECIMEN_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the specimen_timestamp field of the SPECIMEN table that occurs prior to birth.' as check_description
# MAGIC  ,'SPECIMEN' as cdm_table_name
# MAGIC  ,'specimen_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_specimen_specimen_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'SPECIMEN.specimen_timestamp' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.specimen_timestamp IS NOT NULL AND 
# MAGIC  CAST(cdmTable.specimen_timestamp AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  WHERE cdmTable.specimen_timestamp IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the VISIT_DETAIL_START_DATE field of the VISIT_DETAIL table that occurs prior to birth.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'VISIT_DETAIL_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_visit_detail_visit_detail_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.VISIT_DETAIL_START_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.VISIT_DETAIL_START_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.VISIT_DETAIL_START_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the visit_detail_start_timestamp field of the VISIT_DETAIL table that occurs prior to birth.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'visit_detail_start_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_visit_detail_visit_detail_start_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.visit_detail_start_timestamp' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.visit_detail_start_timestamp IS NOT NULL AND 
# MAGIC  CAST(cdmTable.visit_detail_start_timestamp AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.visit_detail_start_timestamp IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the VISIT_DETAIL_END_DATE field of the VISIT_DETAIL table that occurs prior to birth.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'VISIT_DETAIL_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_visit_detail_visit_detail_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.VISIT_DETAIL_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.VISIT_DETAIL_END_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.VISIT_DETAIL_END_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.VISIT_DETAIL_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the visit_detail_end_timestamp field of the VISIT_DETAIL table that occurs prior to birth.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'visit_detail_end_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_visit_detail_visit_detail_end_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.visit_detail_end_timestamp' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.visit_detail_end_timestamp IS NOT NULL AND 
# MAGIC  CAST(cdmTable.visit_detail_end_timestamp AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.visit_detail_end_timestamp IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the VISIT_START_DATE field of the VISIT_OCCURRENCE table that occurs prior to birth.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'VISIT_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_visit_occurrence_visit_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.VISIT_START_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.VISIT_START_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.VISIT_START_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the visit_start_timestamp field of the VISIT_OCCURRENCE table that occurs prior to birth.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'visit_start_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_visit_occurrence_visit_start_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.visit_start_timestamp' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.visit_start_timestamp IS NOT NULL AND 
# MAGIC  CAST(cdmTable.visit_start_timestamp AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.visit_start_timestamp IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the VISIT_END_DATE field of the VISIT_OCCURRENCE table that occurs prior to birth.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'VISIT_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_visit_occurrence_visit_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.VISIT_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.VISIT_END_DATE IS NOT NULL AND 
# MAGIC  CAST(cdmTable.VISIT_END_DATE AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.VISIT_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleAfterBirth' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the visit_end_timestamp field of the VISIT_OCCURRENCE table that occurs prior to birth.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'visit_end_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_after_birth.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausibleafterbirth_visit_occurrence_visit_end_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.visit_end_timestamp' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p 
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  WHERE cdmTable.visit_end_timestamp IS NOT NULL AND 
# MAGIC  CAST(cdmTable.visit_end_timestamp AS DATE) < COALESCE(
# MAGIC  p.birth_timestamp, 
# MAGIC  CAST(CONCAT(
# MAGIC  p.year_of_birth,
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.month_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  ),
# MAGIC  COALESCE(
# MAGIC  RIGHT('0' || CAST(p.day_of_birth AS STRING), 2),
# MAGIC  '01'
# MAGIC  )
# MAGIC  ) AS DATE)
# MAGIC  )
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.visit_end_timestamp IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte
# MAGIC )
# MAGIC INSERT INTO ${results_catalog}.${results_schema}.dqdashboard_results
# MAGIC SELECT *
# MAGIC FROM cte_all;
# MAGIC

# COMMAND ----------

# MAGIC %sql
# MAGIC -- field_plausiblestartbeforeend
# MAGIC
# MAGIC WITH cte_all  AS (SELECT cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  , CAST('' as STRING) as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleStartBeforeEnd' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a value in the CONDITION_ERA_START_DATE field of the CONDITION_ERA that occurs after the date in the CONDITION_ERA_END_DATE.' as check_description
# MAGIC  ,'CONDITION_ERA' as cdm_table_name
# MAGIC  ,'CONDITION_ERA_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_start_before_end.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblestartbeforeend_condition_era_condition_era_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_ERA.CONDITION_ERA_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC  WHERE cdmTable.CONDITION_ERA_START_DATE IS NOT NULL 
# MAGIC  AND cdmTable.CONDITION_ERA_END_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.CONDITION_ERA_START_DATE AS DATE) > CAST(cdmTable.CONDITION_ERA_END_DATE AS DATE)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC  WHERE cdmTable.CONDITION_ERA_START_DATE IS NOT NULL 
# MAGIC  AND cdmTable.CONDITION_ERA_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleStartBeforeEnd' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a value in the CONDITION_START_DATE field of the CONDITION_OCCURRENCE that occurs after the date in the CONDITION_END_DATE.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_start_before_end.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblestartbeforeend_condition_occurrence_condition_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.CONDITION_START_DATE IS NOT NULL 
# MAGIC  AND cdmTable.CONDITION_END_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.CONDITION_START_DATE AS DATE) > CAST(cdmTable.CONDITION_END_DATE AS DATE)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.CONDITION_START_DATE IS NOT NULL 
# MAGIC  AND cdmTable.CONDITION_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleStartBeforeEnd' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a value in the CONDITION_START_DATETIME field of the CONDITION_OCCURRENCE that occurs after the date in the CONDITION_END_DATETIME.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_START_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_start_before_end.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblestartbeforeend_condition_occurrence_condition_start_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.CONDITION_START_DATETIME' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.CONDITION_START_DATETIME IS NOT NULL 
# MAGIC  AND cdmTable.CONDITION_END_DATETIME IS NOT NULL 
# MAGIC  AND CAST(cdmTable.CONDITION_START_DATETIME AS DATE) > CAST(cdmTable.CONDITION_END_DATETIME AS DATE)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.CONDITION_START_DATETIME IS NOT NULL 
# MAGIC  AND cdmTable.CONDITION_END_DATETIME IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleStartBeforeEnd' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a value in the DEVICE_EXPOSURE_START_DATE field of the DEVICE_EXPOSURE that occurs after the date in the DEVICE_EXPOSURE_END_DATE.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'DEVICE_EXPOSURE_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_start_before_end.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblestartbeforeend_device_exposure_device_exposure_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NOT NULL 
# MAGIC  AND cdmTable.DEVICE_EXPOSURE_END_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.DEVICE_EXPOSURE_START_DATE AS DATE) > CAST(cdmTable.DEVICE_EXPOSURE_END_DATE AS DATE)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NOT NULL 
# MAGIC  AND cdmTable.DEVICE_EXPOSURE_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleStartBeforeEnd' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a value in the DEVICE_EXPOSURE_START_DATETIME field of the DEVICE_EXPOSURE that occurs after the date in the DEVICE_EXPOSURE_END_DATETIME.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'DEVICE_EXPOSURE_START_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_start_before_end.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblestartbeforeend_device_exposure_device_exposure_start_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_START_DATETIME IS NOT NULL 
# MAGIC  AND cdmTable.DEVICE_EXPOSURE_END_DATETIME IS NOT NULL 
# MAGIC  AND CAST(cdmTable.DEVICE_EXPOSURE_START_DATETIME AS DATE) > CAST(cdmTable.DEVICE_EXPOSURE_END_DATETIME AS DATE)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_START_DATETIME IS NOT NULL 
# MAGIC  AND cdmTable.DEVICE_EXPOSURE_END_DATETIME IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleStartBeforeEnd' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a value in the DOSE_ERA_START_DATE field of the DOSE_ERA that occurs after the date in the DOSE_ERA_END_DATE.' as check_description
# MAGIC  ,'DOSE_ERA' as cdm_table_name
# MAGIC  ,'DOSE_ERA_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_start_before_end.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblestartbeforeend_dose_era_dose_era_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC  WHERE cdmTable.DOSE_ERA_START_DATE IS NOT NULL 
# MAGIC  AND cdmTable.DOSE_ERA_END_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.DOSE_ERA_START_DATE AS DATE) > CAST(cdmTable.DOSE_ERA_END_DATE AS DATE)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC  WHERE cdmTable.DOSE_ERA_START_DATE IS NOT NULL 
# MAGIC  AND cdmTable.DOSE_ERA_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleStartBeforeEnd' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a value in the DRUG_ERA_START_DATE field of the DRUG_ERA that occurs after the date in the DRUG_ERA_END_DATE.' as check_description
# MAGIC  ,'DRUG_ERA' as cdm_table_name
# MAGIC  ,'DRUG_ERA_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_start_before_end.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblestartbeforeend_drug_era_drug_era_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_ERA.DRUG_ERA_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC  WHERE cdmTable.DRUG_ERA_START_DATE IS NOT NULL 
# MAGIC  AND cdmTable.DRUG_ERA_END_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.DRUG_ERA_START_DATE AS DATE) > CAST(cdmTable.DRUG_ERA_END_DATE AS DATE)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC  WHERE cdmTable.DRUG_ERA_START_DATE IS NOT NULL 
# MAGIC  AND cdmTable.DRUG_ERA_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleStartBeforeEnd' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a value in the DRUG_EXPOSURE_START_DATE field of the DRUG_EXPOSURE that occurs after the date in the DRUG_EXPOSURE_END_DATE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'DRUG_EXPOSURE_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_start_before_end.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblestartbeforeend_drug_exposure_drug_exposure_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_START_DATE IS NOT NULL 
# MAGIC  AND cdmTable.DRUG_EXPOSURE_END_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.DRUG_EXPOSURE_START_DATE AS DATE) > CAST(cdmTable.DRUG_EXPOSURE_END_DATE AS DATE)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_START_DATE IS NOT NULL 
# MAGIC  AND cdmTable.DRUG_EXPOSURE_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleStartBeforeEnd' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a value in the DRUG_EXPOSURE_START_DATETIME field of the DRUG_EXPOSURE that occurs after the date in the DRUG_EXPOSURE_END_DATETIME.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'DRUG_EXPOSURE_START_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_start_before_end.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblestartbeforeend_drug_exposure_drug_exposure_start_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATETIME' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_START_DATETIME IS NOT NULL 
# MAGIC  AND cdmTable.DRUG_EXPOSURE_END_DATETIME IS NOT NULL 
# MAGIC  AND CAST(cdmTable.DRUG_EXPOSURE_START_DATETIME AS DATE) > CAST(cdmTable.DRUG_EXPOSURE_END_DATETIME AS DATE)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_START_DATETIME IS NOT NULL 
# MAGIC  AND cdmTable.DRUG_EXPOSURE_END_DATETIME IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleStartBeforeEnd' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a value in the OBSERVATION_PERIOD_START_DATE field of the OBSERVATION_PERIOD that occurs after the date in the OBSERVATION_PERIOD_END_DATE.' as check_description
# MAGIC  ,'OBSERVATION_PERIOD' as cdm_table_name
# MAGIC  ,'OBSERVATION_PERIOD_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_start_before_end.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblestartbeforeend_observation_period_observation_period_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION_PERIOD cdmTable
# MAGIC  WHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NOT NULL 
# MAGIC  AND cdmTable.OBSERVATION_PERIOD_END_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.OBSERVATION_PERIOD_START_DATE AS DATE) > CAST(cdmTable.OBSERVATION_PERIOD_END_DATE AS DATE)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION_PERIOD cdmTable
# MAGIC  WHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NOT NULL 
# MAGIC  AND cdmTable.OBSERVATION_PERIOD_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleStartBeforeEnd' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a value in the PAYER_PLAN_PERIOD_START_DATE field of the PAYER_PLAN_PERIOD that occurs after the date in the PAYER_PLAN_PERIOD_END_DATE.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'PAYER_PLAN_PERIOD_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_start_before_end.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblestartbeforeend_payer_plan_period_payer_plan_period_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  WHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NOT NULL 
# MAGIC  AND cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.PAYER_PLAN_PERIOD_START_DATE AS DATE) > CAST(cdmTable.PAYER_PLAN_PERIOD_END_DATE AS DATE)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  WHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NOT NULL 
# MAGIC  AND cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleStartBeforeEnd' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a value in the VISIT_DETAIL_START_DATE field of the VISIT_DETAIL that occurs after the date in the VISIT_DETAIL_END_DATE.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'VISIT_DETAIL_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_start_before_end.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblestartbeforeend_visit_detail_visit_detail_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.VISIT_DETAIL_START_DATE IS NOT NULL 
# MAGIC  AND cdmTable.visit_detail_end_date IS NOT NULL 
# MAGIC  AND CAST(cdmTable.VISIT_DETAIL_START_DATE AS DATE) > CAST(cdmTable.visit_detail_end_date AS DATE)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.VISIT_DETAIL_START_DATE IS NOT NULL 
# MAGIC  AND cdmTable.visit_detail_end_date IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleStartBeforeEnd' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a value in the visit_detail_start_timestamp field of the VISIT_DETAIL that occurs after the date in the visit_detail_end_timestamp.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'visit_detail_start_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_start_before_end.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblestartbeforeend_visit_detail_visit_detail_start_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.visit_detail_start_timestamp' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.visit_detail_start_timestamp IS NOT NULL 
# MAGIC  AND cdmTable.visit_detail_end_timestamp IS NOT NULL 
# MAGIC  AND CAST(cdmTable.visit_detail_start_timestamp AS DATE) > CAST(cdmTable.visit_detail_end_timestamp AS DATE)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.visit_detail_start_timestamp IS NOT NULL 
# MAGIC  AND cdmTable.visit_detail_end_timestamp IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleStartBeforeEnd' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a value in the VISIT_START_DATE field of the VISIT_OCCURRENCE that occurs after the date in the VISIT_END_DATE.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'VISIT_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_start_before_end.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblestartbeforeend_visit_occurrence_visit_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.VISIT_START_DATE IS NOT NULL 
# MAGIC  AND cdmTable.VISIT_END_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.VISIT_START_DATE AS DATE) > CAST(cdmTable.VISIT_END_DATE AS DATE)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.VISIT_START_DATE IS NOT NULL 
# MAGIC  AND cdmTable.VISIT_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleStartBeforeEnd' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a value in the visit_start_timestamp field of the VISIT_OCCURRENCE that occurs after the date in the visit_end_timestamp.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'visit_start_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_start_before_end.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblestartbeforeend_visit_occurrence_visit_start_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.visit_start_timestamp' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.visit_start_timestamp IS NOT NULL 
# MAGIC  AND cdmTable.visit_end_timestamp IS NOT NULL 
# MAGIC  AND CAST(cdmTable.visit_start_timestamp AS DATE) > CAST(cdmTable.visit_end_timestamp AS DATE)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.visit_start_timestamp IS NOT NULL 
# MAGIC  AND cdmTable.visit_end_timestamp IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte
# MAGIC )
# MAGIC INSERT INTO ${results_catalog}.${results_schema}.dqdashboard_results
# MAGIC SELECT *
# MAGIC FROM cte_all;
# MAGIC

# COMMAND ----------

# MAGIC %sql
# MAGIC -- concept_plausibel gender use descendants
# MAGIC
# MAGIC WITH cte_all  AS (SELECT cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  , CAST('' as STRING) as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGenderUseDescendants' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For descendants of CONCEPT_ID 4090861, 4025213 (MALE GENITALIA FINDING, MALE REPRODUCTIVE FINDING), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4090861, 4025213' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender_use_descendants.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegenderusedescendants_condition_occurrence_condition_concept_id_4090861,4025213' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 2 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 2 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,2 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.concept_ancestor ca
# MAGIC  ON ca.descendant_concept_id = cdmTable.CONDITION_CONCEPT_ID
# MAGIC  WHERE ca.ancestor_concept_id IN (4090861, 4025213)
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.concept_ancestor ca
# MAGIC  ON ca.descendant_concept_id = cdmTable.CONDITION_CONCEPT_ID
# MAGIC  WHERE ca.ancestor_concept_id IN (4090861, 4025213)
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGenderUseDescendants' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For descendants of CONCEPT_ID 4095793 , 443343, 4024004 , 4172857, 444094 , 197810, 4158481 (FEMALE GENITALIA FINDING, DISORDER OF INTRAUTERINE CONTRACEPTIVE DEVICE, MENOPAUSE FINDING, DISORDER OF FEMALE GENITAL SYSTEM, MALIGNANT NEOPLASM OF UTERINE ADNEXA, FINDING RELATED TO PREGNANCY, FEMALE REPRODUCTIVE FINDING), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4095793 , 443343, 4024004 , 4172857, 444094 , 197810, 4158481' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender_use_descendants.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegenderusedescendants_condition_occurrence_condition_concept_id_4095793,443343,4024004,4172857,444094,197810,4158481' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 2 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 2 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,2 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.concept_ancestor ca
# MAGIC  ON ca.descendant_concept_id = cdmTable.CONDITION_CONCEPT_ID
# MAGIC  WHERE ca.ancestor_concept_id IN (4095793 , 443343, 4024004 , 4172857, 444094 , 197810, 4158481)
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.concept_ancestor ca
# MAGIC  ON ca.descendant_concept_id = cdmTable.CONDITION_CONCEPT_ID
# MAGIC  WHERE ca.ancestor_concept_id IN (4095793 , 443343, 4024004 , 4172857, 444094 , 197810, 4158481)
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGenderUseDescendants' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For descendants of CONCEPT_ID 4041261 (PROCEDURE ON FEMALE GENITAL SYSTEM), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4041261' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender_use_descendants.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegenderusedescendants_procedure_occurrence_procedure_concept_id_4041261' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 2 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 2 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,2 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.concept_ancestor ca
# MAGIC  ON ca.descendant_concept_id = cdmTable.PROCEDURE_CONCEPT_ID
# MAGIC  WHERE ca.ancestor_concept_id IN (4041261)
# MAGIC  AND p.gender_concept_id <> 8532 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.concept_ancestor ca
# MAGIC  ON ca.descendant_concept_id = cdmTable.PROCEDURE_CONCEPT_ID
# MAGIC  WHERE ca.ancestor_concept_id IN (4041261)
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleGenderUseDescendants' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'For descendants of CONCEPT_ID 4250917, 4077750, 4043199, 4040577 (OPERATION ON PROSTATE, OPERATION ON SCROTUM, PROCEDURE ON PENIS, PROCEDURE ON TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4250917, 4077750, 4043199, 4040577' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_gender_use_descendants.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Validation' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausiblegenderusedescendants_procedure_occurrence_procedure_concept_id_4250917,4077750,4043199,4040577' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 2 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 2 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,2 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.person p
# MAGIC  ON cdmTable.person_id = p.person_id
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.concept_ancestor ca
# MAGIC  ON ca.descendant_concept_id = cdmTable.PROCEDURE_CONCEPT_ID
# MAGIC  WHERE ca.ancestor_concept_id IN (4250917, 4077750, 4043199, 4040577)
# MAGIC  AND p.gender_concept_id <> 8507 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.concept_ancestor ca
# MAGIC  ON ca.descendant_concept_id = cdmTable.PROCEDURE_CONCEPT_ID
# MAGIC  WHERE ca.ancestor_concept_id IN (4250917, 4077750, 4043199, 4040577)
# MAGIC ) denominator
# MAGIC ) cte
# MAGIC )
# MAGIC INSERT INTO ${results_catalog}.${results_schema}.dqdashboard_results
# MAGIC SELECT *
# MAGIC FROM cte_all;
# MAGIC

# COMMAND ----------

# MAGIC %sql
# MAGIC -- field measurevaluecompleteness
# MAGIC
# MAGIC WITH cte_all  AS (SELECT cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  , CAST('' as STRING) as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CARE_SITE_ID of the CARE_SITE.' as check_description
# MAGIC  ,'CARE_SITE' as cdm_table_name
# MAGIC  ,'CARE_SITE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_care_site_care_site_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CARE_SITE.CARE_SITE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CARE_SITE cdmTable
# MAGIC  WHERE cdmTable.CARE_SITE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CARE_SITE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CARE_SITE_NAME of the CARE_SITE.' as check_description
# MAGIC  ,'CARE_SITE' as cdm_table_name
# MAGIC  ,'CARE_SITE_NAME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_care_site_care_site_name' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CARE_SITE.CARE_SITE_NAME' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CARE_SITE cdmTable
# MAGIC  WHERE cdmTable.CARE_SITE_NAME IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CARE_SITE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PLACE_OF_SERVICE_CONCEPT_ID of the CARE_SITE.' as check_description
# MAGIC  ,'CARE_SITE' as cdm_table_name
# MAGIC  ,'PLACE_OF_SERVICE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_care_site_place_of_service_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CARE_SITE.PLACE_OF_SERVICE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CARE_SITE cdmTable
# MAGIC  WHERE cdmTable.PLACE_OF_SERVICE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CARE_SITE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the LOCATION_ID of the CARE_SITE.' as check_description
# MAGIC  ,'CARE_SITE' as cdm_table_name
# MAGIC  ,'LOCATION_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_care_site_location_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CARE_SITE.LOCATION_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CARE_SITE cdmTable
# MAGIC  WHERE cdmTable.LOCATION_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CARE_SITE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CARE_SITE_SOURCE_VALUE of the CARE_SITE.' as check_description
# MAGIC  ,'CARE_SITE' as cdm_table_name
# MAGIC  ,'CARE_SITE_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_care_site_care_site_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CARE_SITE.CARE_SITE_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CARE_SITE cdmTable
# MAGIC  WHERE cdmTable.CARE_SITE_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CARE_SITE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PLACE_OF_SERVICE_SOURCE_VALUE of the CARE_SITE.' as check_description
# MAGIC  ,'CARE_SITE' as cdm_table_name
# MAGIC  ,'PLACE_OF_SERVICE_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_care_site_place_of_service_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CARE_SITE.PLACE_OF_SERVICE_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CARE_SITE cdmTable
# MAGIC  WHERE cdmTable.PLACE_OF_SERVICE_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CARE_SITE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CONDITION_ERA_ID of the CONDITION_ERA.' as check_description
# MAGIC  ,'CONDITION_ERA' as cdm_table_name
# MAGIC  ,'CONDITION_ERA_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_era_condition_era_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_ERA.CONDITION_ERA_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC  WHERE cdmTable.CONDITION_ERA_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PERSON_ID of the CONDITION_ERA.' as check_description
# MAGIC  ,'CONDITION_ERA' as cdm_table_name
# MAGIC  ,'PERSON_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_era_person_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_ERA.PERSON_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC  WHERE cdmTable.PERSON_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CONDITION_CONCEPT_ID of the CONDITION_ERA.' as check_description
# MAGIC  ,'CONDITION_ERA' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_era_condition_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_ERA.CONDITION_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CONDITION_ERA_START_DATE of the CONDITION_ERA.' as check_description
# MAGIC  ,'CONDITION_ERA' as cdm_table_name
# MAGIC  ,'CONDITION_ERA_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_era_condition_era_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_ERA.CONDITION_ERA_START_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC  WHERE cdmTable.CONDITION_ERA_START_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CONDITION_ERA_END_DATE of the CONDITION_ERA.' as check_description
# MAGIC  ,'CONDITION_ERA' as cdm_table_name
# MAGIC  ,'CONDITION_ERA_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_era_condition_era_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_ERA.CONDITION_ERA_END_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC  WHERE cdmTable.CONDITION_ERA_END_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CONDITION_OCCURRENCE_COUNT of the CONDITION_ERA.' as check_description
# MAGIC  ,'CONDITION_ERA' as cdm_table_name
# MAGIC  ,'CONDITION_OCCURRENCE_COUNT' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_era_condition_occurrence_count' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_ERA.CONDITION_OCCURRENCE_COUNT' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC  WHERE cdmTable.CONDITION_OCCURRENCE_COUNT IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CONDITION_OCCURRENCE_ID of the CONDITION_OCCURRENCE.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_OCCURRENCE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_occurrence_condition_occurrence_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.CONDITION_OCCURRENCE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.CONDITION_OCCURRENCE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PERSON_ID of the CONDITION_OCCURRENCE.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PERSON_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_occurrence_person_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.PERSON_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.PERSON_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CONDITION_CONCEPT_ID of the CONDITION_OCCURRENCE.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_occurrence_condition_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.CONDITION_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CONDITION_START_DATE of the CONDITION_OCCURRENCE.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_occurrence_condition_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.CONDITION_START_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CONDITION_START_DATETIME of the CONDITION_OCCURRENCE.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_START_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_occurrence_condition_start_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.CONDITION_START_DATETIME' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.CONDITION_START_DATETIME IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CONDITION_END_DATE of the CONDITION_OCCURRENCE.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_occurrence_condition_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.CONDITION_END_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.CONDITION_END_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CONDITION_END_DATETIME of the CONDITION_OCCURRENCE.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_END_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_occurrence_condition_end_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.CONDITION_END_DATETIME' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.CONDITION_END_DATETIME IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CONDITION_TYPE_CONCEPT_ID of the CONDITION_OCCURRENCE.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_TYPE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_occurrence_condition_type_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.CONDITION_TYPE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.CONDITION_TYPE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CONDITION_STATUS_CONCEPT_ID of the CONDITION_OCCURRENCE.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_STATUS_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_occurrence_condition_status_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.CONDITION_STATUS_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.CONDITION_STATUS_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the STOP_REASON of the CONDITION_OCCURRENCE.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'STOP_REASON' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_occurrence_stop_reason' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.STOP_REASON' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.STOP_REASON IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PROVIDER_ID of the CONDITION_OCCURRENCE.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROVIDER_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_occurrence_provider_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.PROVIDER_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.PROVIDER_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the CONDITION_OCCURRENCE.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'VISIT_OCCURRENCE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_occurrence_visit_occurrence_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.VISIT_OCCURRENCE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the CONDITION_OCCURRENCE.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'VISIT_DETAIL_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_occurrence_visit_detail_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.VISIT_DETAIL_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.VISIT_DETAIL_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CONDITION_SOURCE_VALUE of the CONDITION_OCCURRENCE.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_occurrence_condition_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.CONDITION_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.CONDITION_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CONDITION_SOURCE_CONCEPT_ID of the CONDITION_OCCURRENCE.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_SOURCE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_occurrence_condition_source_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.CONDITION_SOURCE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.CONDITION_SOURCE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CONDITION_STATUS_SOURCE_VALUE of the CONDITION_OCCURRENCE.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_STATUS_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_condition_occurrence_condition_status_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.CONDITION_STATUS_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.CONDITION_STATUS_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the COST_ID of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'COST_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_cost_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.COST_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.COST_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the COST_EVENT_ID of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'COST_EVENT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_cost_event_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.COST_EVENT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.COST_EVENT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the COST_DOMAIN_ID of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'COST_DOMAIN_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_cost_domain_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.COST_DOMAIN_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.COST_DOMAIN_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the COST_TYPE_CONCEPT_ID of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'COST_TYPE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_cost_type_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.COST_TYPE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.COST_TYPE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CURRENCY_CONCEPT_ID of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'CURRENCY_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_currency_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.CURRENCY_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.CURRENCY_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the TOTAL_CHARGE of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'TOTAL_CHARGE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_total_charge' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.TOTAL_CHARGE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.TOTAL_CHARGE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the TOTAL_COST of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'TOTAL_COST' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_total_cost' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.TOTAL_COST' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.TOTAL_COST IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the TOTAL_PAID of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'TOTAL_PAID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_total_paid' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.TOTAL_PAID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.TOTAL_PAID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PAID_BY_PAYER of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'PAID_BY_PAYER' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_paid_by_payer' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.PAID_BY_PAYER' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.PAID_BY_PAYER IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PAID_BY_PATIENT of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'PAID_BY_PATIENT' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_paid_by_patient' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.PAID_BY_PATIENT' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.PAID_BY_PATIENT IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PAID_PATIENT_COPAY of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'PAID_PATIENT_COPAY' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_paid_patient_copay' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.PAID_PATIENT_COPAY' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.PAID_PATIENT_COPAY IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PAID_PATIENT_COINSURANCE of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'PAID_PATIENT_COINSURANCE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_paid_patient_coinsurance' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.PAID_PATIENT_COINSURANCE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.PAID_PATIENT_COINSURANCE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PAID_PATIENT_DEDUCTIBLE of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'PAID_PATIENT_DEDUCTIBLE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_paid_patient_deductible' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.PAID_PATIENT_DEDUCTIBLE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.PAID_PATIENT_DEDUCTIBLE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PAID_BY_PRIMARY of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'PAID_BY_PRIMARY' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_paid_by_primary' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.PAID_BY_PRIMARY' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.PAID_BY_PRIMARY IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PAID_INGREDIENT_COST of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'PAID_INGREDIENT_COST' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_paid_ingredient_cost' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.PAID_INGREDIENT_COST' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.PAID_INGREDIENT_COST IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PAID_DISPENSING_FEE of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'PAID_DISPENSING_FEE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_paid_dispensing_fee' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.PAID_DISPENSING_FEE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.PAID_DISPENSING_FEE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PAYER_PLAN_PERIOD_ID of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'PAYER_PLAN_PERIOD_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_payer_plan_period_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.PAYER_PLAN_PERIOD_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.PAYER_PLAN_PERIOD_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the AMOUNT_ALLOWED of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'AMOUNT_ALLOWED' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_amount_allowed' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.AMOUNT_ALLOWED' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.AMOUNT_ALLOWED IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the REVENUE_CODE_CONCEPT_ID of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'REVENUE_CODE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_revenue_code_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.REVENUE_CODE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.REVENUE_CODE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the REVENUE_CODE_SOURCE_VALUE of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'REVENUE_CODE_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_revenue_code_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.REVENUE_CODE_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.REVENUE_CODE_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DRG_CONCEPT_ID of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'DRG_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_drg_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.DRG_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.DRG_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DRG_SOURCE_VALUE of the COST.' as check_description
# MAGIC  ,'COST' as cdm_table_name
# MAGIC  ,'DRG_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_cost_drg_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'COST.DRG_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC  WHERE cdmTable.DRG_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.COST cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CAUSE_CONCEPT_ID of the DEATH.' as check_description
# MAGIC  ,'DEATH' as cdm_table_name
# MAGIC  ,'CAUSE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_death_cause_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEATH.CAUSE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEATH cdmTable
# MAGIC  WHERE cdmTable.CAUSE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEATH cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CAUSE_SOURCE_CONCEPT_ID of the DEATH.' as check_description
# MAGIC  ,'DEATH' as cdm_table_name
# MAGIC  ,'CAUSE_SOURCE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_death_cause_source_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEATH.CAUSE_SOURCE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEATH cdmTable
# MAGIC  WHERE cdmTable.CAUSE_SOURCE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEATH cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CAUSE_SOURCE_VALUE of the DEATH.' as check_description
# MAGIC  ,'DEATH' as cdm_table_name
# MAGIC  ,'CAUSE_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_death_cause_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEATH.CAUSE_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEATH cdmTable
# MAGIC  WHERE cdmTable.CAUSE_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEATH cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DEATH_DATE of the DEATH.' as check_description
# MAGIC  ,'DEATH' as cdm_table_name
# MAGIC  ,'DEATH_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_death_death_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEATH.DEATH_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEATH cdmTable
# MAGIC  WHERE cdmTable.DEATH_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEATH cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the death_timestamp of the DEATH.' as check_description
# MAGIC  ,'DEATH' as cdm_table_name
# MAGIC  ,'death_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_death_death_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEATH.death_timestamp' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEATH cdmTable
# MAGIC  WHERE cdmTable.death_timestamp IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEATH cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DEATH_TYPE_CONCEPT_ID of the DEATH.' as check_description
# MAGIC  ,'DEATH' as cdm_table_name
# MAGIC  ,'DEATH_TYPE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_death_death_type_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEATH.DEATH_TYPE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEATH cdmTable
# MAGIC  WHERE cdmTable.DEATH_TYPE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEATH cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PERSON_ID of the DEATH.' as check_description
# MAGIC  ,'DEATH' as cdm_table_name
# MAGIC  ,'PERSON_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_death_person_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEATH.PERSON_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEATH cdmTable
# MAGIC  WHERE cdmTable.PERSON_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEATH cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DEVICE_EXPOSURE_ID of the DEVICE_EXPOSURE.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'DEVICE_EXPOSURE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_device_exposure_device_exposure_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.DEVICE_EXPOSURE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PERSON_ID of the DEVICE_EXPOSURE.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'PERSON_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_device_exposure_person_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.PERSON_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.PERSON_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DEVICE_CONCEPT_ID of the DEVICE_EXPOSURE.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'DEVICE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_device_exposure_device_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.DEVICE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DEVICE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DEVICE_EXPOSURE_START_DATE of the DEVICE_EXPOSURE.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'DEVICE_EXPOSURE_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_device_exposure_device_exposure_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DEVICE_EXPOSURE_START_DATETIME of the DEVICE_EXPOSURE.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'DEVICE_EXPOSURE_START_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_device_exposure_device_exposure_start_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_START_DATETIME IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DEVICE_EXPOSURE_END_DATE of the DEVICE_EXPOSURE.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'DEVICE_EXPOSURE_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_device_exposure_device_exposure_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_END_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DEVICE_EXPOSURE_END_DATETIME of the DEVICE_EXPOSURE.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'DEVICE_EXPOSURE_END_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_device_exposure_device_exposure_end_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_END_DATETIME IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DEVICE_TYPE_CONCEPT_ID of the DEVICE_EXPOSURE.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'DEVICE_TYPE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_device_exposure_device_type_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.DEVICE_TYPE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DEVICE_TYPE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the UNIQUE_DEVICE_ID of the DEVICE_EXPOSURE.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'UNIQUE_DEVICE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_device_exposure_unique_device_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.UNIQUE_DEVICE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.UNIQUE_DEVICE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the QUANTITY of the DEVICE_EXPOSURE.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'QUANTITY' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_device_exposure_quantity' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.QUANTITY' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.QUANTITY IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PROVIDER_ID of the DEVICE_EXPOSURE.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'PROVIDER_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_device_exposure_provider_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.PROVIDER_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.PROVIDER_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the DEVICE_EXPOSURE.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'VISIT_OCCURRENCE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_device_exposure_visit_occurrence_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.VISIT_OCCURRENCE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the DEVICE_EXPOSURE.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'VISIT_DETAIL_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_device_exposure_visit_detail_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.VISIT_DETAIL_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.VISIT_DETAIL_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DEVICE_SOURCE_VALUE of the DEVICE_EXPOSURE.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'DEVICE_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_device_exposure_device_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.DEVICE_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DEVICE_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DEVICE_SOURCE_CONCEPT_ID of the DEVICE_EXPOSURE.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'DEVICE_SOURCE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_device_exposure_device_source_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.DEVICE_SOURCE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DEVICE_SOURCE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DOSE_ERA_ID of the DOSE_ERA.' as check_description
# MAGIC  ,'DOSE_ERA' as cdm_table_name
# MAGIC  ,'DOSE_ERA_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_dose_era_dose_era_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DOSE_ERA.DOSE_ERA_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC  WHERE cdmTable.DOSE_ERA_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PERSON_ID of the DOSE_ERA.' as check_description
# MAGIC  ,'DOSE_ERA' as cdm_table_name
# MAGIC  ,'PERSON_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_dose_era_person_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DOSE_ERA.PERSON_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC  WHERE cdmTable.PERSON_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DRUG_CONCEPT_ID of the DOSE_ERA.' as check_description
# MAGIC  ,'DOSE_ERA' as cdm_table_name
# MAGIC  ,'DRUG_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_dose_era_drug_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DOSE_ERA.DRUG_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC  WHERE cdmTable.DRUG_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the UNIT_CONCEPT_ID of the DOSE_ERA.' as check_description
# MAGIC  ,'DOSE_ERA' as cdm_table_name
# MAGIC  ,'UNIT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_dose_era_unit_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DOSE_ERA.UNIT_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC  WHERE cdmTable.UNIT_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DOSE_VALUE of the DOSE_ERA.' as check_description
# MAGIC  ,'DOSE_ERA' as cdm_table_name
# MAGIC  ,'DOSE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_dose_era_dose_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DOSE_ERA.DOSE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC  WHERE cdmTable.DOSE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DOSE_ERA_START_DATE of the DOSE_ERA.' as check_description
# MAGIC  ,'DOSE_ERA' as cdm_table_name
# MAGIC  ,'DOSE_ERA_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_dose_era_dose_era_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC  WHERE cdmTable.DOSE_ERA_START_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DOSE_ERA_END_DATE of the DOSE_ERA.' as check_description
# MAGIC  ,'DOSE_ERA' as cdm_table_name
# MAGIC  ,'DOSE_ERA_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_dose_era_dose_era_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DOSE_ERA.DOSE_ERA_END_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC  WHERE cdmTable.DOSE_ERA_END_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DRUG_ERA_ID of the DRUG_ERA.' as check_description
# MAGIC  ,'DRUG_ERA' as cdm_table_name
# MAGIC  ,'DRUG_ERA_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_era_drug_era_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_ERA.DRUG_ERA_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC  WHERE cdmTable.DRUG_ERA_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PERSON_ID of the DRUG_ERA.' as check_description
# MAGIC  ,'DRUG_ERA' as cdm_table_name
# MAGIC  ,'PERSON_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_era_person_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_ERA.PERSON_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC  WHERE cdmTable.PERSON_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DRUG_CONCEPT_ID of the DRUG_ERA.' as check_description
# MAGIC  ,'DRUG_ERA' as cdm_table_name
# MAGIC  ,'DRUG_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_era_drug_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_ERA.DRUG_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC  WHERE cdmTable.DRUG_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DRUG_ERA_START_DATE of the DRUG_ERA.' as check_description
# MAGIC  ,'DRUG_ERA' as cdm_table_name
# MAGIC  ,'DRUG_ERA_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_era_drug_era_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_ERA.DRUG_ERA_START_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC  WHERE cdmTable.DRUG_ERA_START_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DRUG_ERA_END_DATE of the DRUG_ERA.' as check_description
# MAGIC  ,'DRUG_ERA' as cdm_table_name
# MAGIC  ,'DRUG_ERA_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_era_drug_era_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_ERA.DRUG_ERA_END_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC  WHERE cdmTable.DRUG_ERA_END_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DRUG_EXPOSURE_COUNT of the DRUG_ERA.' as check_description
# MAGIC  ,'DRUG_ERA' as cdm_table_name
# MAGIC  ,'DRUG_EXPOSURE_COUNT' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_era_drug_exposure_count' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_ERA.DRUG_EXPOSURE_COUNT' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_COUNT IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the GAP_DAYS of the DRUG_ERA.' as check_description
# MAGIC  ,'DRUG_ERA' as cdm_table_name
# MAGIC  ,'GAP_DAYS' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_era_gap_days' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_ERA.GAP_DAYS' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC  WHERE cdmTable.GAP_DAYS IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DRUG_EXPOSURE_ID of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'DRUG_EXPOSURE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_drug_exposure_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.DRUG_EXPOSURE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PERSON_ID of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'PERSON_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_person_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.PERSON_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.PERSON_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DRUG_CONCEPT_ID of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'DRUG_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_drug_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.DRUG_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DRUG_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DRUG_EXPOSURE_START_DATE of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'DRUG_EXPOSURE_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_drug_exposure_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_START_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DRUG_EXPOSURE_START_DATETIME of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'DRUG_EXPOSURE_START_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_drug_exposure_start_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATETIME' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_START_DATETIME IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DRUG_EXPOSURE_END_DATE of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'DRUG_EXPOSURE_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_drug_exposure_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.DRUG_EXPOSURE_END_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_END_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DRUG_EXPOSURE_END_DATETIME of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'DRUG_EXPOSURE_END_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_drug_exposure_end_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.DRUG_EXPOSURE_END_DATETIME' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_END_DATETIME IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VERBATIM_END_DATE of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'VERBATIM_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_verbatim_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.VERBATIM_END_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.VERBATIM_END_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DRUG_TYPE_CONCEPT_ID of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'DRUG_TYPE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_drug_type_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.DRUG_TYPE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DRUG_TYPE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the STOP_REASON of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'STOP_REASON' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_stop_reason' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.STOP_REASON' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.STOP_REASON IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the REFILLS of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'REFILLS' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_refills' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.REFILLS' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.REFILLS IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the QUANTITY of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'QUANTITY' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_quantity' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.QUANTITY' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.QUANTITY IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DAYS_SUPPLY of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'DAYS_SUPPLY' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_days_supply' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.DAYS_SUPPLY' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DAYS_SUPPLY IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the SIG of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'SIG' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_sig' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.SIG' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.SIG IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte
# MAGIC )
# MAGIC INSERT INTO ${results_catalog}.${results_schema}.dqdashboard_results
# MAGIC SELECT *
# MAGIC FROM cte_all;
# MAGIC WITH cte_all  AS (SELECT cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  , CAST('' as STRING) as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the ROUTE_CONCEPT_ID of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'ROUTE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_route_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.ROUTE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.ROUTE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the LOT_NUMBER of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'LOT_NUMBER' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_lot_number' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.LOT_NUMBER' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.LOT_NUMBER IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PROVIDER_ID of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'PROVIDER_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_provider_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.PROVIDER_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.PROVIDER_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'VISIT_OCCURRENCE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_visit_occurrence_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.VISIT_OCCURRENCE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'VISIT_DETAIL_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_visit_detail_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.VISIT_DETAIL_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.VISIT_DETAIL_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DRUG_SOURCE_VALUE of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'DRUG_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_drug_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.DRUG_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DRUG_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DRUG_SOURCE_CONCEPT_ID of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'DRUG_SOURCE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_drug_source_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.DRUG_SOURCE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DRUG_SOURCE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the ROUTE_SOURCE_VALUE of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'ROUTE_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_route_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.ROUTE_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.ROUTE_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DOSE_UNIT_SOURCE_VALUE of the DRUG_EXPOSURE.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'DOSE_UNIT_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_drug_exposure_dose_unit_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.DOSE_UNIT_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  WHERE cdmTable.DOSE_UNIT_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DOMAIN_CONCEPT_ID_1 of the FACT_RELATIONSHIP.' as check_description
# MAGIC  ,'FACT_RELATIONSHIP' as cdm_table_name
# MAGIC  ,'DOMAIN_CONCEPT_ID_1' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_fact_relationship_domain_concept_id_1' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_1' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.FACT_RELATIONSHIP cdmTable
# MAGIC  WHERE cdmTable.DOMAIN_CONCEPT_ID_1 IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.FACT_RELATIONSHIP cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the FACT_ID_1 of the FACT_RELATIONSHIP.' as check_description
# MAGIC  ,'FACT_RELATIONSHIP' as cdm_table_name
# MAGIC  ,'FACT_ID_1' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_fact_relationship_fact_id_1' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'FACT_RELATIONSHIP.FACT_ID_1' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.FACT_RELATIONSHIP cdmTable
# MAGIC  WHERE cdmTable.FACT_ID_1 IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.FACT_RELATIONSHIP cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DOMAIN_CONCEPT_ID_2 of the FACT_RELATIONSHIP.' as check_description
# MAGIC  ,'FACT_RELATIONSHIP' as cdm_table_name
# MAGIC  ,'DOMAIN_CONCEPT_ID_2' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_fact_relationship_domain_concept_id_2' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_2' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.FACT_RELATIONSHIP cdmTable
# MAGIC  WHERE cdmTable.DOMAIN_CONCEPT_ID_2 IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.FACT_RELATIONSHIP cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the FACT_ID_2 of the FACT_RELATIONSHIP.' as check_description
# MAGIC  ,'FACT_RELATIONSHIP' as cdm_table_name
# MAGIC  ,'FACT_ID_2' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_fact_relationship_fact_id_2' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'FACT_RELATIONSHIP.FACT_ID_2' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.FACT_RELATIONSHIP cdmTable
# MAGIC  WHERE cdmTable.FACT_ID_2 IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.FACT_RELATIONSHIP cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the RELATIONSHIP_CONCEPT_ID of the FACT_RELATIONSHIP.' as check_description
# MAGIC  ,'FACT_RELATIONSHIP' as cdm_table_name
# MAGIC  ,'RELATIONSHIP_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_fact_relationship_relationship_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'FACT_RELATIONSHIP.RELATIONSHIP_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.FACT_RELATIONSHIP cdmTable
# MAGIC  WHERE cdmTable.RELATIONSHIP_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.FACT_RELATIONSHIP cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the LOCATION_ID of the LOCATION.' as check_description
# MAGIC  ,'LOCATION' as cdm_table_name
# MAGIC  ,'LOCATION_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_location_location_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'LOCATION.LOCATION_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.LOCATION cdmTable
# MAGIC  WHERE cdmTable.LOCATION_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.LOCATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the ADDRESS_1 of the LOCATION.' as check_description
# MAGIC  ,'LOCATION' as cdm_table_name
# MAGIC  ,'ADDRESS_1' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_location_address_1' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'LOCATION.ADDRESS_1' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.LOCATION cdmTable
# MAGIC  WHERE cdmTable.ADDRESS_1 IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.LOCATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the ADDRESS_2 of the LOCATION.' as check_description
# MAGIC  ,'LOCATION' as cdm_table_name
# MAGIC  ,'ADDRESS_2' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_location_address_2' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'LOCATION.ADDRESS_2' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.LOCATION cdmTable
# MAGIC  WHERE cdmTable.ADDRESS_2 IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.LOCATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CITY of the LOCATION.' as check_description
# MAGIC  ,'LOCATION' as cdm_table_name
# MAGIC  ,'CITY' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_location_city' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'LOCATION.CITY' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.LOCATION cdmTable
# MAGIC  WHERE cdmTable.CITY IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.LOCATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the STATE of the LOCATION.' as check_description
# MAGIC  ,'LOCATION' as cdm_table_name
# MAGIC  ,'STATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_location_state' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'LOCATION.STATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.LOCATION cdmTable
# MAGIC  WHERE cdmTable.STATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.LOCATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the ZIP of the LOCATION.' as check_description
# MAGIC  ,'LOCATION' as cdm_table_name
# MAGIC  ,'ZIP' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_location_zip' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'LOCATION.ZIP' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.LOCATION cdmTable
# MAGIC  WHERE cdmTable.ZIP IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.LOCATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the COUNTY of the LOCATION.' as check_description
# MAGIC  ,'LOCATION' as cdm_table_name
# MAGIC  ,'COUNTY' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_location_county' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'LOCATION.COUNTY' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.LOCATION cdmTable
# MAGIC  WHERE cdmTable.COUNTY IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.LOCATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the LOCATION_SOURCE_VALUE of the LOCATION.' as check_description
# MAGIC  ,'LOCATION' as cdm_table_name
# MAGIC  ,'LOCATION_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_location_location_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'LOCATION.LOCATION_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.LOCATION cdmTable
# MAGIC  WHERE cdmTable.LOCATION_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.LOCATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the MEASUREMENT_ID of the MEASUREMENT.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_measurement_measurement_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.MEASUREMENT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.MEASUREMENT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PERSON_ID of the MEASUREMENT.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'PERSON_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_measurement_person_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.PERSON_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.PERSON_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the MEASUREMENT_CONCEPT_ID of the MEASUREMENT.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_measurement_measurement_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.MEASUREMENT_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.MEASUREMENT_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the MEASUREMENT_DATE of the MEASUREMENT.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_measurement_measurement_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.MEASUREMENT_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.MEASUREMENT_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the MEASUREMENT_DATETIME of the MEASUREMENT.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_measurement_measurement_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.MEASUREMENT_DATETIME' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.MEASUREMENT_DATETIME IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the MEASUREMENT_TIME of the MEASUREMENT.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_TIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_measurement_measurement_time' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.MEASUREMENT_TIME' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.MEASUREMENT_TIME IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the MEASUREMENT_TYPE_CONCEPT_ID of the MEASUREMENT.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_TYPE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_measurement_measurement_type_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.MEASUREMENT_TYPE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.MEASUREMENT_TYPE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the OPERATOR_CONCEPT_ID of the MEASUREMENT.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'OPERATOR_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_measurement_operator_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.OPERATOR_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.OPERATOR_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VALUE_AS_NUMBER of the MEASUREMENT.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'VALUE_AS_NUMBER' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_measurement_value_as_number' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.VALUE_AS_NUMBER' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.VALUE_AS_NUMBER IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VALUE_AS_CONCEPT_ID of the MEASUREMENT.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'VALUE_AS_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_measurement_value_as_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.VALUE_AS_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.VALUE_AS_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the UNIT_CONCEPT_ID of the MEASUREMENT.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'UNIT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_measurement_unit_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.UNIT_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.UNIT_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the RANGE_LOW of the MEASUREMENT.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'RANGE_LOW' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_measurement_range_low' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.RANGE_LOW' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.RANGE_LOW IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the RANGE_HIGH of the MEASUREMENT.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'RANGE_HIGH' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_measurement_range_high' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.RANGE_HIGH' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.RANGE_HIGH IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PROVIDER_ID of the MEASUREMENT.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'PROVIDER_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_measurement_provider_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.PROVIDER_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.PROVIDER_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the MEASUREMENT.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'VISIT_OCCURRENCE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_measurement_visit_occurrence_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.VISIT_OCCURRENCE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the MEASUREMENT.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'VISIT_DETAIL_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_measurement_visit_detail_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.VISIT_DETAIL_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.VISIT_DETAIL_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the MEASUREMENT_SOURCE_VALUE of the MEASUREMENT.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_measurement_measurement_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.MEASUREMENT_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.MEASUREMENT_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the MEASUREMENT_SOURCE_CONCEPT_ID of the MEASUREMENT.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_SOURCE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_measurement_measurement_source_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.MEASUREMENT_SOURCE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.MEASUREMENT_SOURCE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the UNIT_SOURCE_VALUE of the MEASUREMENT.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'UNIT_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_measurement_unit_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.UNIT_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.UNIT_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VALUE_SOURCE_VALUE of the MEASUREMENT.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'VALUE_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_measurement_value_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.VALUE_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  WHERE cdmTable.VALUE_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the NOTE_ID of the NOTE.' as check_description
# MAGIC  ,'NOTE' as cdm_table_name
# MAGIC  ,'NOTE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_note_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE.NOTE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  WHERE cdmTable.NOTE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PERSON_ID of the NOTE.' as check_description
# MAGIC  ,'NOTE' as cdm_table_name
# MAGIC  ,'PERSON_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_person_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE.PERSON_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  WHERE cdmTable.PERSON_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the NOTE_DATE of the NOTE.' as check_description
# MAGIC  ,'NOTE' as cdm_table_name
# MAGIC  ,'NOTE_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_note_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE.NOTE_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  WHERE cdmTable.NOTE_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the note_timestamp of the NOTE.' as check_description
# MAGIC  ,'NOTE' as cdm_table_name
# MAGIC  ,'note_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_note_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE.note_timestamp' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  WHERE cdmTable.note_timestamp IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the NOTE_TYPE_CONCEPT_ID of the NOTE.' as check_description
# MAGIC  ,'NOTE' as cdm_table_name
# MAGIC  ,'NOTE_TYPE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_note_type_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE.NOTE_TYPE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  WHERE cdmTable.NOTE_TYPE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the NOTE_CLASS_CONCEPT_ID of the NOTE.' as check_description
# MAGIC  ,'NOTE' as cdm_table_name
# MAGIC  ,'NOTE_CLASS_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_note_class_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE.NOTE_CLASS_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  WHERE cdmTable.NOTE_CLASS_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the NOTE_TITLE of the NOTE.' as check_description
# MAGIC  ,'NOTE' as cdm_table_name
# MAGIC  ,'NOTE_TITLE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_note_title' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE.NOTE_TITLE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  WHERE cdmTable.NOTE_TITLE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the NOTE_TEXT of the NOTE.' as check_description
# MAGIC  ,'NOTE' as cdm_table_name
# MAGIC  ,'NOTE_TEXT' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_note_text' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE.NOTE_TEXT' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  WHERE cdmTable.NOTE_TEXT IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the ENCODING_CONCEPT_ID of the NOTE.' as check_description
# MAGIC  ,'NOTE' as cdm_table_name
# MAGIC  ,'ENCODING_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_encoding_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE.ENCODING_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  WHERE cdmTable.ENCODING_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the LANGUAGE_CONCEPT_ID of the NOTE.' as check_description
# MAGIC  ,'NOTE' as cdm_table_name
# MAGIC  ,'LANGUAGE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_language_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE.LANGUAGE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  WHERE cdmTable.LANGUAGE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PROVIDER_ID of the NOTE.' as check_description
# MAGIC  ,'NOTE' as cdm_table_name
# MAGIC  ,'PROVIDER_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_provider_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE.PROVIDER_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  WHERE cdmTable.PROVIDER_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the NOTE.' as check_description
# MAGIC  ,'NOTE' as cdm_table_name
# MAGIC  ,'VISIT_OCCURRENCE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_visit_occurrence_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE.VISIT_OCCURRENCE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  WHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the NOTE.' as check_description
# MAGIC  ,'NOTE' as cdm_table_name
# MAGIC  ,'VISIT_DETAIL_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_visit_detail_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE.VISIT_DETAIL_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  WHERE cdmTable.VISIT_DETAIL_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the NOTE_SOURCE_VALUE of the NOTE.' as check_description
# MAGIC  ,'NOTE' as cdm_table_name
# MAGIC  ,'NOTE_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_note_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE.NOTE_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  WHERE cdmTable.NOTE_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the NOTE_NLP_ID of the NOTE_NLP.' as check_description
# MAGIC  ,'NOTE_NLP' as cdm_table_name
# MAGIC  ,'NOTE_NLP_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_nlp_note_nlp_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE_NLP.NOTE_NLP_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC  WHERE cdmTable.NOTE_NLP_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the NOTE_ID of the NOTE_NLP.' as check_description
# MAGIC  ,'NOTE_NLP' as cdm_table_name
# MAGIC  ,'NOTE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_nlp_note_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE_NLP.NOTE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC  WHERE cdmTable.NOTE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the SECTION_CONCEPT_ID of the NOTE_NLP.' as check_description
# MAGIC  ,'NOTE_NLP' as cdm_table_name
# MAGIC  ,'SECTION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_nlp_section_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE_NLP.SECTION_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC  WHERE cdmTable.SECTION_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the SNIPPET of the NOTE_NLP.' as check_description
# MAGIC  ,'NOTE_NLP' as cdm_table_name
# MAGIC  ,'SNIPPET' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_nlp_snippet' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE_NLP.SNIPPET' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC  WHERE cdmTable.SNIPPET IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the LEXICAL_VARIANT of the NOTE_NLP.' as check_description
# MAGIC  ,'NOTE_NLP' as cdm_table_name
# MAGIC  ,'LEXICAL_VARIANT' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_nlp_lexical_variant' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE_NLP.LEXICAL_VARIANT' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC  WHERE cdmTable.LEXICAL_VARIANT IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the NOTE_NLP_CONCEPT_ID of the NOTE_NLP.' as check_description
# MAGIC  ,'NOTE_NLP' as cdm_table_name
# MAGIC  ,'NOTE_NLP_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_nlp_note_nlp_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE_NLP.NOTE_NLP_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC  WHERE cdmTable.NOTE_NLP_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the NOTE_NLP_SOURCE_CONCEPT_ID of the NOTE_NLP.' as check_description
# MAGIC  ,'NOTE_NLP' as cdm_table_name
# MAGIC  ,'NOTE_NLP_SOURCE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_nlp_note_nlp_source_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE_NLP.NOTE_NLP_SOURCE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC  WHERE cdmTable.NOTE_NLP_SOURCE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the NLP_SYSTEM of the NOTE_NLP.' as check_description
# MAGIC  ,'NOTE_NLP' as cdm_table_name
# MAGIC  ,'NLP_SYSTEM' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_nlp_nlp_system' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE_NLP.NLP_SYSTEM' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC  WHERE cdmTable.NLP_SYSTEM IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the NLP_DATE of the NOTE_NLP.' as check_description
# MAGIC  ,'NOTE_NLP' as cdm_table_name
# MAGIC  ,'NLP_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_nlp_nlp_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE_NLP.NLP_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC  WHERE cdmTable.NLP_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the nlp_timestamp of the NOTE_NLP.' as check_description
# MAGIC  ,'NOTE_NLP' as cdm_table_name
# MAGIC  ,'nlp_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_nlp_nlp_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE_NLP.nlp_timestamp' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC  WHERE cdmTable.nlp_timestamp IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the TERM_EXISTS of the NOTE_NLP.' as check_description
# MAGIC  ,'NOTE_NLP' as cdm_table_name
# MAGIC  ,'TERM_EXISTS' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_nlp_term_exists' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE_NLP.TERM_EXISTS' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC  WHERE cdmTable.TERM_EXISTS IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the TERM_TEMPORAL of the NOTE_NLP.' as check_description
# MAGIC  ,'NOTE_NLP' as cdm_table_name
# MAGIC  ,'TERM_TEMPORAL' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_nlp_term_temporal' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE_NLP.TERM_TEMPORAL' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC  WHERE cdmTable.TERM_TEMPORAL IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the TERM_MODIFIERS of the NOTE_NLP.' as check_description
# MAGIC  ,'NOTE_NLP' as cdm_table_name
# MAGIC  ,'TERM_MODIFIERS' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_note_nlp_term_modifiers' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE_NLP.TERM_MODIFIERS' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC  WHERE cdmTable.TERM_MODIFIERS IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE_NLP cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the OBSERVATION_ID of the OBSERVATION.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'OBSERVATION_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_observation_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.OBSERVATION_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  WHERE cdmTable.OBSERVATION_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PERSON_ID of the OBSERVATION.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'PERSON_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_person_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.PERSON_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  WHERE cdmTable.PERSON_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the OBSERVATION_CONCEPT_ID of the OBSERVATION.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'OBSERVATION_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_observation_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.OBSERVATION_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  WHERE cdmTable.OBSERVATION_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the OBSERVATION_DATE of the OBSERVATION.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'OBSERVATION_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_observation_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.OBSERVATION_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  WHERE cdmTable.OBSERVATION_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the OBSERVATION_DATETIME of the OBSERVATION.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'OBSERVATION_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_observation_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.OBSERVATION_DATETIME' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  WHERE cdmTable.OBSERVATION_DATETIME IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the OBSERVATION_TYPE_CONCEPT_ID of the OBSERVATION.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'OBSERVATION_TYPE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_observation_type_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.OBSERVATION_TYPE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  WHERE cdmTable.OBSERVATION_TYPE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VALUE_AS_NUMBER of the OBSERVATION.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'VALUE_AS_NUMBER' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_value_as_number' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.VALUE_AS_NUMBER' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  WHERE cdmTable.VALUE_AS_NUMBER IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VALUE_AS_STRING of the OBSERVATION.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'VALUE_AS_STRING' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_value_as_string' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.VALUE_AS_STRING' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  WHERE cdmTable.VALUE_AS_STRING IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VALUE_AS_CONCEPT_ID of the OBSERVATION.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'VALUE_AS_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_value_as_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.VALUE_AS_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  WHERE cdmTable.VALUE_AS_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the QUALIFIER_CONCEPT_ID of the OBSERVATION.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'QUALIFIER_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_qualifier_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.QUALIFIER_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  WHERE cdmTable.QUALIFIER_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the UNIT_CONCEPT_ID of the OBSERVATION.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'UNIT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_unit_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.UNIT_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  WHERE cdmTable.UNIT_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PROVIDER_ID of the OBSERVATION.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'PROVIDER_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_provider_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.PROVIDER_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  WHERE cdmTable.PROVIDER_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the OBSERVATION.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'VISIT_OCCURRENCE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_visit_occurrence_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.VISIT_OCCURRENCE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  WHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the OBSERVATION.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'VISIT_DETAIL_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_visit_detail_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.VISIT_DETAIL_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  WHERE cdmTable.VISIT_DETAIL_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the OBSERVATION_SOURCE_VALUE of the OBSERVATION.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'OBSERVATION_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_observation_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.OBSERVATION_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  WHERE cdmTable.OBSERVATION_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the OBSERVATION_SOURCE_CONCEPT_ID of the OBSERVATION.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'OBSERVATION_SOURCE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_observation_source_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.OBSERVATION_SOURCE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  WHERE cdmTable.OBSERVATION_SOURCE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the UNIT_SOURCE_VALUE of the OBSERVATION.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'UNIT_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_unit_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.UNIT_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  WHERE cdmTable.UNIT_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the QUALIFIER_SOURCE_VALUE of the OBSERVATION.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'QUALIFIER_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_qualifier_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.QUALIFIER_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  WHERE cdmTable.QUALIFIER_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the OBSERVATION_PERIOD_ID of the OBSERVATION_PERIOD.' as check_description
# MAGIC  ,'OBSERVATION_PERIOD' as cdm_table_name
# MAGIC  ,'OBSERVATION_PERIOD_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_period_observation_period_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION_PERIOD.OBSERVATION_PERIOD_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION_PERIOD cdmTable
# MAGIC  WHERE cdmTable.OBSERVATION_PERIOD_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PERSON_ID of the OBSERVATION_PERIOD.' as check_description
# MAGIC  ,'OBSERVATION_PERIOD' as cdm_table_name
# MAGIC  ,'PERSON_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_period_person_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION_PERIOD.PERSON_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION_PERIOD cdmTable
# MAGIC  WHERE cdmTable.PERSON_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the OBSERVATION_PERIOD_START_DATE of the OBSERVATION_PERIOD.' as check_description
# MAGIC  ,'OBSERVATION_PERIOD' as cdm_table_name
# MAGIC  ,'OBSERVATION_PERIOD_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_period_observation_period_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION_PERIOD cdmTable
# MAGIC  WHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the OBSERVATION_PERIOD_END_DATE of the OBSERVATION_PERIOD.' as check_description
# MAGIC  ,'OBSERVATION_PERIOD' as cdm_table_name
# MAGIC  ,'OBSERVATION_PERIOD_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_period_observation_period_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION_PERIOD.OBSERVATION_PERIOD_END_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION_PERIOD cdmTable
# MAGIC  WHERE cdmTable.OBSERVATION_PERIOD_END_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PERIOD_TYPE_CONCEPT_ID of the OBSERVATION_PERIOD.' as check_description
# MAGIC  ,'OBSERVATION_PERIOD' as cdm_table_name
# MAGIC  ,'PERIOD_TYPE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_observation_period_period_type_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION_PERIOD.PERIOD_TYPE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION_PERIOD cdmTable
# MAGIC  WHERE cdmTable.PERIOD_TYPE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PAYER_PLAN_PERIOD_ID of the PAYER_PLAN_PERIOD.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'PAYER_PLAN_PERIOD_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_payer_plan_period_payer_plan_period_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  WHERE cdmTable.PAYER_PLAN_PERIOD_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PERSON_ID of the PAYER_PLAN_PERIOD.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'PERSON_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_payer_plan_period_person_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.PERSON_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  WHERE cdmTable.PERSON_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PAYER_PLAN_PERIOD_START_DATE of the PAYER_PLAN_PERIOD.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'PAYER_PLAN_PERIOD_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_payer_plan_period_payer_plan_period_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_START_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  WHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PAYER_PLAN_PERIOD_END_DATE of the PAYER_PLAN_PERIOD.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'PAYER_PLAN_PERIOD_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_payer_plan_period_payer_plan_period_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_END_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  WHERE cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PAYER_CONCEPT_ID of the PAYER_PLAN_PERIOD.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'PAYER_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_payer_plan_period_payer_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.PAYER_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  WHERE cdmTable.PAYER_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PAYER_SOURCE_VALUE of the PAYER_PLAN_PERIOD.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'PAYER_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_payer_plan_period_payer_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.PAYER_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  WHERE cdmTable.PAYER_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PAYER_SOURCE_CONCEPT_ID of the PAYER_PLAN_PERIOD.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'PAYER_SOURCE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_payer_plan_period_payer_source_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.PAYER_SOURCE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  WHERE cdmTable.PAYER_SOURCE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PLAN_CONCEPT_ID of the PAYER_PLAN_PERIOD.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'PLAN_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_payer_plan_period_plan_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.PLAN_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  WHERE cdmTable.PLAN_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte
# MAGIC )
# MAGIC INSERT INTO ${results_catalog}.${results_schema}.dqdashboard_results
# MAGIC SELECT *
# MAGIC FROM cte_all;
# MAGIC WITH cte_all  AS (SELECT cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  , CAST('' as STRING) as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PLAN_SOURCE_VALUE of the PAYER_PLAN_PERIOD.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'PLAN_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_payer_plan_period_plan_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.PLAN_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  WHERE cdmTable.PLAN_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PLAN_SOURCE_CONCEPT_ID of the PAYER_PLAN_PERIOD.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'PLAN_SOURCE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_payer_plan_period_plan_source_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.PLAN_SOURCE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  WHERE cdmTable.PLAN_SOURCE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the SPONSOR_CONCEPT_ID of the PAYER_PLAN_PERIOD.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'SPONSOR_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_payer_plan_period_sponsor_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.SPONSOR_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  WHERE cdmTable.SPONSOR_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the SPONSOR_SOURCE_VALUE of the PAYER_PLAN_PERIOD.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'SPONSOR_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_payer_plan_period_sponsor_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.SPONSOR_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  WHERE cdmTable.SPONSOR_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the SPONSOR_SOURCE_CONCEPT_ID of the PAYER_PLAN_PERIOD.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'SPONSOR_SOURCE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_payer_plan_period_sponsor_source_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.SPONSOR_SOURCE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  WHERE cdmTable.SPONSOR_SOURCE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the FAMILY_SOURCE_VALUE of the PAYER_PLAN_PERIOD.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'FAMILY_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_payer_plan_period_family_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.FAMILY_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  WHERE cdmTable.FAMILY_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the STOP_REASON_CONCEPT_ID of the PAYER_PLAN_PERIOD.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'STOP_REASON_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_payer_plan_period_stop_reason_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.STOP_REASON_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  WHERE cdmTable.STOP_REASON_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the STOP_REASON_SOURCE_VALUE of the PAYER_PLAN_PERIOD.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'STOP_REASON_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_payer_plan_period_stop_reason_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.STOP_REASON_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  WHERE cdmTable.STOP_REASON_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the STOP_REASON_SOURCE_CONCEPT_ID of the PAYER_PLAN_PERIOD.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'STOP_REASON_SOURCE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_payer_plan_period_stop_reason_source_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.STOP_REASON_SOURCE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  WHERE cdmTable.STOP_REASON_SOURCE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PERSON_ID of the PERSON.' as check_description
# MAGIC  ,'PERSON' as cdm_table_name
# MAGIC  ,'PERSON_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_person_person_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PERSON.PERSON_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC  WHERE cdmTable.PERSON_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the GENDER_CONCEPT_ID of the PERSON.' as check_description
# MAGIC  ,'PERSON' as cdm_table_name
# MAGIC  ,'GENDER_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_person_gender_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PERSON.GENDER_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC  WHERE cdmTable.GENDER_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the YEAR_OF_BIRTH of the PERSON.' as check_description
# MAGIC  ,'PERSON' as cdm_table_name
# MAGIC  ,'YEAR_OF_BIRTH' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_person_year_of_birth' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PERSON.YEAR_OF_BIRTH' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC  WHERE cdmTable.YEAR_OF_BIRTH IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the MONTH_OF_BIRTH of the PERSON.' as check_description
# MAGIC  ,'PERSON' as cdm_table_name
# MAGIC  ,'MONTH_OF_BIRTH' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_person_month_of_birth' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PERSON.MONTH_OF_BIRTH' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC  WHERE cdmTable.MONTH_OF_BIRTH IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DAY_OF_BIRTH of the PERSON.' as check_description
# MAGIC  ,'PERSON' as cdm_table_name
# MAGIC  ,'DAY_OF_BIRTH' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_person_day_of_birth' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PERSON.DAY_OF_BIRTH' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC  WHERE cdmTable.DAY_OF_BIRTH IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the birth_timestamp of the PERSON.' as check_description
# MAGIC  ,'PERSON' as cdm_table_name
# MAGIC  ,'birth_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_person_birth_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PERSON.birth_timestamp' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC  WHERE cdmTable.birth_timestamp IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the RACE_CONCEPT_ID of the PERSON.' as check_description
# MAGIC  ,'PERSON' as cdm_table_name
# MAGIC  ,'RACE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_person_race_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PERSON.RACE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC  WHERE cdmTable.RACE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the ETHNICITY_CONCEPT_ID of the PERSON.' as check_description
# MAGIC  ,'PERSON' as cdm_table_name
# MAGIC  ,'ETHNICITY_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_person_ethnicity_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PERSON.ETHNICITY_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC  WHERE cdmTable.ETHNICITY_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the LOCATION_ID of the PERSON.' as check_description
# MAGIC  ,'PERSON' as cdm_table_name
# MAGIC  ,'LOCATION_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_person_location_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PERSON.LOCATION_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC  WHERE cdmTable.LOCATION_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PROVIDER_ID of the PERSON.' as check_description
# MAGIC  ,'PERSON' as cdm_table_name
# MAGIC  ,'PROVIDER_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_person_provider_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PERSON.PROVIDER_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC  WHERE cdmTable.PROVIDER_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CARE_SITE_ID of the PERSON.' as check_description
# MAGIC  ,'PERSON' as cdm_table_name
# MAGIC  ,'CARE_SITE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_person_care_site_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PERSON.CARE_SITE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC  WHERE cdmTable.CARE_SITE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PERSON_SOURCE_VALUE of the PERSON.' as check_description
# MAGIC  ,'PERSON' as cdm_table_name
# MAGIC  ,'PERSON_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_person_person_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PERSON.PERSON_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC  WHERE cdmTable.PERSON_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the GENDER_SOURCE_VALUE of the PERSON.' as check_description
# MAGIC  ,'PERSON' as cdm_table_name
# MAGIC  ,'GENDER_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_person_gender_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PERSON.GENDER_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC  WHERE cdmTable.GENDER_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the GENDER_SOURCE_CONCEPT_ID of the PERSON.' as check_description
# MAGIC  ,'PERSON' as cdm_table_name
# MAGIC  ,'GENDER_SOURCE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_person_gender_source_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PERSON.GENDER_SOURCE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC  WHERE cdmTable.GENDER_SOURCE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the RACE_SOURCE_VALUE of the PERSON.' as check_description
# MAGIC  ,'PERSON' as cdm_table_name
# MAGIC  ,'RACE_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_person_race_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PERSON.RACE_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC  WHERE cdmTable.RACE_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the RACE_SOURCE_CONCEPT_ID of the PERSON.' as check_description
# MAGIC  ,'PERSON' as cdm_table_name
# MAGIC  ,'RACE_SOURCE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_person_race_source_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PERSON.RACE_SOURCE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC  WHERE cdmTable.RACE_SOURCE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the ETHNICITY_SOURCE_VALUE of the PERSON.' as check_description
# MAGIC  ,'PERSON' as cdm_table_name
# MAGIC  ,'ETHNICITY_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_person_ethnicity_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PERSON.ETHNICITY_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC  WHERE cdmTable.ETHNICITY_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the ETHNICITY_SOURCE_CONCEPT_ID of the PERSON.' as check_description
# MAGIC  ,'PERSON' as cdm_table_name
# MAGIC  ,'ETHNICITY_SOURCE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_person_ethnicity_source_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PERSON.ETHNICITY_SOURCE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC  WHERE cdmTable.ETHNICITY_SOURCE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PERSON cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PROCEDURE_OCCURRENCE_ID of the PROCEDURE_OCCURRENCE.' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_OCCURRENCE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_procedure_occurrence_procedure_occurrence_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROCEDURE_OCCURRENCE.PROCEDURE_OCCURRENCE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.PROCEDURE_OCCURRENCE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PERSON_ID of the PROCEDURE_OCCURRENCE.' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PERSON_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_procedure_occurrence_person_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROCEDURE_OCCURRENCE.PERSON_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.PERSON_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PROCEDURE_CONCEPT_ID of the PROCEDURE_OCCURRENCE.' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_procedure_occurrence_procedure_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.PROCEDURE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PROCEDURE_DATE of the PROCEDURE_OCCURRENCE.' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_procedure_occurrence_procedure_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROCEDURE_OCCURRENCE.PROCEDURE_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.PROCEDURE_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PROCEDURE_DATETIME of the PROCEDURE_OCCURRENCE.' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_procedure_occurrence_procedure_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROCEDURE_OCCURRENCE.PROCEDURE_DATETIME' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.PROCEDURE_DATETIME IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PROCEDURE_TYPE_CONCEPT_ID of the PROCEDURE_OCCURRENCE.' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_TYPE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_procedure_occurrence_procedure_type_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROCEDURE_OCCURRENCE.PROCEDURE_TYPE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.PROCEDURE_TYPE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the MODIFIER_CONCEPT_ID of the PROCEDURE_OCCURRENCE.' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'MODIFIER_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_procedure_occurrence_modifier_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROCEDURE_OCCURRENCE.MODIFIER_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.MODIFIER_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the QUANTITY of the PROCEDURE_OCCURRENCE.' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'QUANTITY' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_procedure_occurrence_quantity' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROCEDURE_OCCURRENCE.QUANTITY' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.QUANTITY IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PROVIDER_ID of the PROCEDURE_OCCURRENCE.' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROVIDER_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_procedure_occurrence_provider_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROCEDURE_OCCURRENCE.PROVIDER_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.PROVIDER_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the PROCEDURE_OCCURRENCE.' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'VISIT_OCCURRENCE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_procedure_occurrence_visit_occurrence_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROCEDURE_OCCURRENCE.VISIT_OCCURRENCE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the PROCEDURE_OCCURRENCE.' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'VISIT_DETAIL_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_procedure_occurrence_visit_detail_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROCEDURE_OCCURRENCE.VISIT_DETAIL_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.VISIT_DETAIL_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PROCEDURE_SOURCE_VALUE of the PROCEDURE_OCCURRENCE.' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_procedure_occurrence_procedure_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROCEDURE_OCCURRENCE.PROCEDURE_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.PROCEDURE_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PROCEDURE_SOURCE_CONCEPT_ID of the PROCEDURE_OCCURRENCE.' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_SOURCE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_procedure_occurrence_procedure_source_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROCEDURE_OCCURRENCE.PROCEDURE_SOURCE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.PROCEDURE_SOURCE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the MODIFIER_SOURCE_VALUE of the PROCEDURE_OCCURRENCE.' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'MODIFIER_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_procedure_occurrence_modifier_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROCEDURE_OCCURRENCE.MODIFIER_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.MODIFIER_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PROVIDER_ID of the PROVIDER.' as check_description
# MAGIC  ,'PROVIDER' as cdm_table_name
# MAGIC  ,'PROVIDER_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_provider_provider_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROVIDER.PROVIDER_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC  WHERE cdmTable.PROVIDER_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PROVIDER_NAME of the PROVIDER.' as check_description
# MAGIC  ,'PROVIDER' as cdm_table_name
# MAGIC  ,'PROVIDER_NAME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_provider_provider_name' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROVIDER.PROVIDER_NAME' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC  WHERE cdmTable.PROVIDER_NAME IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the NPI of the PROVIDER.' as check_description
# MAGIC  ,'PROVIDER' as cdm_table_name
# MAGIC  ,'NPI' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_provider_npi' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROVIDER.NPI' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC  WHERE cdmTable.NPI IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DEA of the PROVIDER.' as check_description
# MAGIC  ,'PROVIDER' as cdm_table_name
# MAGIC  ,'DEA' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_provider_dea' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROVIDER.DEA' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC  WHERE cdmTable.DEA IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the SPECIALTY_CONCEPT_ID of the PROVIDER.' as check_description
# MAGIC  ,'PROVIDER' as cdm_table_name
# MAGIC  ,'SPECIALTY_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_provider_specialty_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROVIDER.SPECIALTY_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC  WHERE cdmTable.SPECIALTY_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CARE_SITE_ID of the PROVIDER.' as check_description
# MAGIC  ,'PROVIDER' as cdm_table_name
# MAGIC  ,'CARE_SITE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_provider_care_site_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROVIDER.CARE_SITE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC  WHERE cdmTable.CARE_SITE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the YEAR_OF_BIRTH of the PROVIDER.' as check_description
# MAGIC  ,'PROVIDER' as cdm_table_name
# MAGIC  ,'YEAR_OF_BIRTH' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_provider_year_of_birth' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROVIDER.YEAR_OF_BIRTH' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC  WHERE cdmTable.YEAR_OF_BIRTH IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the GENDER_CONCEPT_ID of the PROVIDER.' as check_description
# MAGIC  ,'PROVIDER' as cdm_table_name
# MAGIC  ,'GENDER_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_provider_gender_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROVIDER.GENDER_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC  WHERE cdmTable.GENDER_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PROVIDER_SOURCE_VALUE of the PROVIDER.' as check_description
# MAGIC  ,'PROVIDER' as cdm_table_name
# MAGIC  ,'PROVIDER_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_provider_provider_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROVIDER.PROVIDER_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC  WHERE cdmTable.PROVIDER_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the SPECIALTY_SOURCE_VALUE of the PROVIDER.' as check_description
# MAGIC  ,'PROVIDER' as cdm_table_name
# MAGIC  ,'SPECIALTY_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_provider_specialty_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROVIDER.SPECIALTY_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC  WHERE cdmTable.SPECIALTY_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the SPECIALTY_SOURCE_CONCEPT_ID of the PROVIDER.' as check_description
# MAGIC  ,'PROVIDER' as cdm_table_name
# MAGIC  ,'SPECIALTY_SOURCE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_provider_specialty_source_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROVIDER.SPECIALTY_SOURCE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC  WHERE cdmTable.SPECIALTY_SOURCE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the GENDER_SOURCE_VALUE of the PROVIDER.' as check_description
# MAGIC  ,'PROVIDER' as cdm_table_name
# MAGIC  ,'GENDER_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_provider_gender_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROVIDER.GENDER_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC  WHERE cdmTable.GENDER_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the GENDER_SOURCE_CONCEPT_ID of the PROVIDER.' as check_description
# MAGIC  ,'PROVIDER' as cdm_table_name
# MAGIC  ,'GENDER_SOURCE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_provider_gender_source_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROVIDER.GENDER_SOURCE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC  WHERE cdmTable.GENDER_SOURCE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROVIDER cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the SPECIMEN_ID of the SPECIMEN.' as check_description
# MAGIC  ,'SPECIMEN' as cdm_table_name
# MAGIC  ,'SPECIMEN_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_specimen_specimen_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'SPECIMEN.SPECIMEN_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  WHERE cdmTable.SPECIMEN_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PERSON_ID of the SPECIMEN.' as check_description
# MAGIC  ,'SPECIMEN' as cdm_table_name
# MAGIC  ,'PERSON_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_specimen_person_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'SPECIMEN.PERSON_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  WHERE cdmTable.PERSON_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the SPECIMEN_CONCEPT_ID of the SPECIMEN.' as check_description
# MAGIC  ,'SPECIMEN' as cdm_table_name
# MAGIC  ,'SPECIMEN_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_specimen_specimen_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'SPECIMEN.SPECIMEN_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  WHERE cdmTable.SPECIMEN_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the SPECIMEN_TYPE_CONCEPT_ID of the SPECIMEN.' as check_description
# MAGIC  ,'SPECIMEN' as cdm_table_name
# MAGIC  ,'SPECIMEN_TYPE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_specimen_specimen_type_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'SPECIMEN.SPECIMEN_TYPE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  WHERE cdmTable.SPECIMEN_TYPE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the SPECIMEN_DATE of the SPECIMEN.' as check_description
# MAGIC  ,'SPECIMEN' as cdm_table_name
# MAGIC  ,'SPECIMEN_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_specimen_specimen_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'SPECIMEN.SPECIMEN_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  WHERE cdmTable.SPECIMEN_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the specimen_timestamp of the SPECIMEN.' as check_description
# MAGIC  ,'SPECIMEN' as cdm_table_name
# MAGIC  ,'specimen_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_specimen_specimen_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'SPECIMEN.specimen_timestamp' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  WHERE cdmTable.specimen_timestamp IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the QUANTITY of the SPECIMEN.' as check_description
# MAGIC  ,'SPECIMEN' as cdm_table_name
# MAGIC  ,'QUANTITY' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_specimen_quantity' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'SPECIMEN.QUANTITY' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  WHERE cdmTable.QUANTITY IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the UNIT_CONCEPT_ID of the SPECIMEN.' as check_description
# MAGIC  ,'SPECIMEN' as cdm_table_name
# MAGIC  ,'UNIT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_specimen_unit_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'SPECIMEN.UNIT_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  WHERE cdmTable.UNIT_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the ANATOMIC_SITE_CONCEPT_ID of the SPECIMEN.' as check_description
# MAGIC  ,'SPECIMEN' as cdm_table_name
# MAGIC  ,'ANATOMIC_SITE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_specimen_anatomic_site_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'SPECIMEN.ANATOMIC_SITE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  WHERE cdmTable.ANATOMIC_SITE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DISEASE_STATUS_CONCEPT_ID of the SPECIMEN.' as check_description
# MAGIC  ,'SPECIMEN' as cdm_table_name
# MAGIC  ,'DISEASE_STATUS_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_specimen_disease_status_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'SPECIMEN.DISEASE_STATUS_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  WHERE cdmTable.DISEASE_STATUS_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the SPECIMEN_SOURCE_ID of the SPECIMEN.' as check_description
# MAGIC  ,'SPECIMEN' as cdm_table_name
# MAGIC  ,'SPECIMEN_SOURCE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_specimen_specimen_source_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'SPECIMEN.SPECIMEN_SOURCE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  WHERE cdmTable.SPECIMEN_SOURCE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the SPECIMEN_SOURCE_VALUE of the SPECIMEN.' as check_description
# MAGIC  ,'SPECIMEN' as cdm_table_name
# MAGIC  ,'SPECIMEN_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_specimen_specimen_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'SPECIMEN.SPECIMEN_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  WHERE cdmTable.SPECIMEN_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the UNIT_SOURCE_VALUE of the SPECIMEN.' as check_description
# MAGIC  ,'SPECIMEN' as cdm_table_name
# MAGIC  ,'UNIT_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_specimen_unit_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'SPECIMEN.UNIT_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  WHERE cdmTable.UNIT_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the ANATOMIC_SITE_SOURCE_VALUE of the SPECIMEN.' as check_description
# MAGIC  ,'SPECIMEN' as cdm_table_name
# MAGIC  ,'ANATOMIC_SITE_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_specimen_anatomic_site_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'SPECIMEN.ANATOMIC_SITE_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  WHERE cdmTable.ANATOMIC_SITE_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the DISEASE_STATUS_SOURCE_VALUE of the SPECIMEN.' as check_description
# MAGIC  ,'SPECIMEN' as cdm_table_name
# MAGIC  ,'DISEASE_STATUS_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_specimen_disease_status_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'SPECIMEN.DISEASE_STATUS_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  WHERE cdmTable.DISEASE_STATUS_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the VISIT_DETAIL.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'VISIT_DETAIL_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_detail_visit_detail_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.VISIT_DETAIL_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.VISIT_DETAIL_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PERSON_ID of the VISIT_DETAIL.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'PERSON_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_detail_person_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.PERSON_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.PERSON_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_DETAIL_CONCEPT_ID of the VISIT_DETAIL.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'VISIT_DETAIL_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_detail_visit_detail_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.VISIT_DETAIL_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.VISIT_DETAIL_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_DETAIL_START_DATE of the VISIT_DETAIL.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'VISIT_DETAIL_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_detail_visit_detail_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.VISIT_DETAIL_START_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the visit_detail_start_timestamp of the VISIT_DETAIL.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'visit_detail_start_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_detail_visit_detail_start_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.visit_detail_start_timestamp' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.visit_detail_start_timestamp IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_DETAIL_END_DATE of the VISIT_DETAIL.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'VISIT_DETAIL_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_detail_visit_detail_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.VISIT_DETAIL_END_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.VISIT_DETAIL_END_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the visit_detail_end_timestamp of the VISIT_DETAIL.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'visit_detail_end_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_detail_visit_detail_end_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.visit_detail_end_timestamp' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.visit_detail_end_timestamp IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_DETAIL_TYPE_CONCEPT_ID of the VISIT_DETAIL.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'VISIT_DETAIL_TYPE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_detail_visit_detail_type_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.VISIT_DETAIL_TYPE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PROVIDER_ID of the VISIT_DETAIL.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'PROVIDER_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_detail_provider_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.PROVIDER_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.PROVIDER_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CARE_SITE_ID of the VISIT_DETAIL.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'CARE_SITE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_detail_care_site_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.CARE_SITE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.CARE_SITE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_DETAIL_SOURCE_VALUE of the VISIT_DETAIL.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'VISIT_DETAIL_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_detail_visit_detail_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.VISIT_DETAIL_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.VISIT_DETAIL_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_DETAIL_SOURCE_CONCEPT_ID of the VISIT_DETAIL.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'VISIT_DETAIL_SOURCE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_detail_visit_detail_source_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.VISIT_DETAIL_SOURCE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.VISIT_DETAIL_SOURCE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the admitted_from_source_value of the VISIT_DETAIL.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'admitted_from_source_value' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_detail_admitted_from_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.admitted_from_source_value' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.admitted_from_source_value IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the admitted_from_concept_id of the VISIT_DETAIL.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'admitted_from_concept_id' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_detail_admitted_from_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.admitted_from_concept_id' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.admitted_from_concept_id IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the discharged_to_SOURCE_VALUE of the VISIT_DETAIL.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'discharged_to_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_detail_discharged_to_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.discharged_to_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.discharged_to_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the discharged_to_CONCEPT_ID of the VISIT_DETAIL.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'discharged_to_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_detail_discharged_to_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.discharged_to_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.discharged_to_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PRECEDING_VISIT_DETAIL_ID of the VISIT_DETAIL.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'PRECEDING_VISIT_DETAIL_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_detail_preceding_visit_detail_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.PRECEDING_VISIT_DETAIL_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.PRECEDING_VISIT_DETAIL_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the parent_visit_detail_id of the VISIT_DETAIL.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'parent_visit_detail_id' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_detail_parent_visit_detail_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.parent_visit_detail_id' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.parent_visit_detail_id IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the VISIT_DETAIL.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'VISIT_OCCURRENCE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_detail_visit_occurrence_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.VISIT_OCCURRENCE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  WHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the VISIT_OCCURRENCE.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'VISIT_OCCURRENCE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_occurrence_visit_occurrence_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PERSON_ID of the VISIT_OCCURRENCE.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PERSON_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_occurrence_person_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.PERSON_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.PERSON_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_CONCEPT_ID of the VISIT_OCCURRENCE.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'VISIT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_occurrence_visit_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.VISIT_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.VISIT_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_START_DATE of the VISIT_OCCURRENCE.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'VISIT_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_occurrence_visit_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.VISIT_START_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the visit_start_timestamp of the VISIT_OCCURRENCE.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'visit_start_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_occurrence_visit_start_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.visit_start_timestamp' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.visit_start_timestamp IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_END_DATE of the VISIT_OCCURRENCE.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'VISIT_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_occurrence_visit_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.VISIT_END_DATE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.VISIT_END_DATE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the visit_end_timestamp of the VISIT_OCCURRENCE.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'visit_end_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_occurrence_visit_end_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.visit_end_timestamp' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.visit_end_timestamp IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_TYPE_CONCEPT_ID of the VISIT_OCCURRENCE.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'VISIT_TYPE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_occurrence_visit_type_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 0 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 0 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,0 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.VISIT_TYPE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.VISIT_TYPE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PROVIDER_ID of the VISIT_OCCURRENCE.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROVIDER_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_occurrence_provider_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.PROVIDER_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.PROVIDER_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the CARE_SITE_ID of the VISIT_OCCURRENCE.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CARE_SITE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_occurrence_care_site_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.CARE_SITE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.CARE_SITE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_SOURCE_VALUE of the VISIT_OCCURRENCE.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'VISIT_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_occurrence_visit_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.VISIT_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.VISIT_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the VISIT_SOURCE_CONCEPT_ID of the VISIT_OCCURRENCE.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'VISIT_SOURCE_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_occurrence_visit_source_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.VISIT_SOURCE_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.VISIT_SOURCE_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte
# MAGIC )
# MAGIC INSERT INTO ${results_catalog}.${results_schema}.dqdashboard_results
# MAGIC SELECT *
# MAGIC FROM cte_all;
# MAGIC WITH cte_all  AS (SELECT cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  , CAST('' as STRING) as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the admitted_from_concept_id of the VISIT_OCCURRENCE.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'admitted_from_concept_id' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_occurrence_admitted_from_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.admitted_from_concept_id' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.admitted_from_concept_id IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the admitted_from_source_value of the VISIT_OCCURRENCE.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'admitted_from_source_value' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_occurrence_admitted_from_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.admitted_from_source_value' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.admitted_from_source_value IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the discharged_to_CONCEPT_ID of the VISIT_OCCURRENCE.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'discharged_to_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_occurrence_discharged_to_concept_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.discharged_to_CONCEPT_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.discharged_to_CONCEPT_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the discharged_to_SOURCE_VALUE of the VISIT_OCCURRENCE.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'discharged_to_SOURCE_VALUE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_occurrence_discharged_to_source_value' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.discharged_to_SOURCE_VALUE' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.discharged_to_SOURCE_VALUE IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'measureValueCompleteness' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a NULL value in the PRECEDING_VISIT_OCCURRENCE_ID of the VISIT_OCCURRENCE.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PRECEDING_VISIT_OCCURRENCE_ID' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_measure_value_completeness.sql' as sql_file
# MAGIC  ,'Completeness' as category
# MAGIC  ,'NA' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_measurevaluecompleteness_visit_occurrence_preceding_visit_occurrence_id' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 100 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 100 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,100 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.PRECEDING_VISIT_OCCURRENCE_ID' AS violating_field, 
# MAGIC  cdmTable.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  WHERE cdmTable.PRECEDING_VISIT_OCCURRENCE_ID IS NULL
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC ) denominator
# MAGIC ) cte
# MAGIC )
# MAGIC INSERT INTO ${results_catalog}.${results_schema}.dqdashboard_results
# MAGIC SELECT *
# MAGIC FROM cte_all;
# MAGIC

# COMMAND ----------

# MAGIC %sql
# MAGIC -- conscept plausible unit concept ids
# MAGIC
# MAGIC WITH cte_all  AS (SELECT cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  , CAST('' as STRING) as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3006315 (BASOPHILS [#/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8784,8848,8961,9444)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3006315' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3006315' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3006315
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3006315
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3004410 (HEMOGLOBIN A1C/HEMOGLOBIN.TOTAL IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554,8737,9225,9579)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3004410' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3004410' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3004410
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554,8737,9225,9579) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3004410
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 40487382 (TOTAL LYMPHOCYTE COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8784,8848,8961)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'40487382' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_40487382' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 40487382
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8848,8961) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 40487382
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3013721 (ASPARTATE AMINOTRANSFERASE [ENZYMATIC ACTIVITY/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8645,8923)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3013721' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3013721' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3013721
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8645,8923) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3013721
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3019198 (LYMPHOCYTES [#/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8784,8848,8961,9444)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3019198' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3019198' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3019198
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3019198
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3034426 (PROTHROMBIN TIME (PT)) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8555)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3034426' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3034426' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3034426
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8555) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3034426
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3043688 (HEMOGLOBIN [MASS/VOLUME] IN BODY FLUID) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8713)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3043688' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3043688' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3043688
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8713) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3043688
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3046485 (UREA NITROGEN/CREATININE [MASS RATIO] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8523,8554,8596,-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3046485' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3046485' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3046485
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8523,8554,8596,-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3046485
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4216098 (EOSINOPHIL COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8784,8848,8961,9444)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4216098' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4216098' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4216098
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4216098
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4245152 (POTASSIUM MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8736,8753,9557)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4245152' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4245152' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4245152
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8736,8753,9557) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4245152
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 43055141 (PAIN SEVERITY - 0-10 VERBAL NUMERIC RATING [SCORE] - REPORTED) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'43055141' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_43055141' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 43055141
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 43055141
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3006923 (ALANINE AMINOTRANSFERASE [ENZYMATIC ACTIVITY/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8645,8923)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3006923' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3006923' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3006923
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8645,8923) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3006923
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3021044 (IRON BINDING CAPACITY [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8837)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3021044' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3021044' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3021044
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8837) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3021044
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3024171 (RESPIRATORY RATE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8483,8541)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3024171' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3024171' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3024171
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8483,8541) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3024171
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3027114 (CHOLESTEROL [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3027114' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3027114' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3027114
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3027114
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 40762499 (OXYGEN SATURATION IN ARTERIAL BLOOD BY PULSE OXIMETRY) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554,-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'40762499' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_40762499' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 40762499
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554,-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 40762499
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3000963 (HEMOGLOBIN [MASS/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8636,8713)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3000963' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3000963' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3000963
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8636,8713) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3000963
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3001604 (MONOCYTES [#/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8848,8961,9444)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3001604' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3001604' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3001604
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3001604
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3019069 (MONOCYTES/100 LEUKOCYTES IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3019069' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3019069' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3019069
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3019069
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3022509 (HYALINE CASTS [#/AREA] IN URINE SEDIMENT BY MICROSCOPY LOW POWER FIELD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8765)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3022509' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3022509' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3022509
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8765) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3022509
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3028288 (CHOLESTEROL IN LDL [MASS/VOLUME] IN SERUM OR PLASMA BY CALCULATION) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8840,9028)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3028288' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3028288' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3028288
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8840,9028) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3028288
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4148615 (NEUTROPHIL COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8784,8848,8961)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4148615' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4148615' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4148615
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8848,8961) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4148615
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 44806420 (ESTIMATION OF GLOMERULAR FILTRATION RATE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (720870,8795)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'44806420' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_44806420' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 44806420
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (720870,8795) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 44806420
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3028437 (CHOLESTEROL IN LDL [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8840,9028)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3028437' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3028437' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3028437
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8840,9028) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3028437
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3016991 (THYROXINE (T4) [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8837)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3016991' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3016991' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3016991
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8837) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3016991
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3026925 (TRIIODOTHYRONINE (T3) FREE [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8820,8845)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3026925' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3026925' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3026925
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8820,8845) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3026925
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3028615 (EOSINOPHILS [#/VOLUME] IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8784,8816,8848,8961,9436,9444)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3028615' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3028615' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3028615
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8816,8848,8961,9436,9444) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3028615
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3051205 (CRYSTALS [#/AREA] IN URINE SEDIMENT BY MICROSCOPY HIGH POWER FIELD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8786)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3051205' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3051205' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3051205
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8786) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3051205
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4098046 (PULSE OXIMETRY) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4098046' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4098046' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4098046
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4098046
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3005131 (GLUCOSE MEAN VALUE [MASS/VOLUME] IN BLOOD ESTIMATED FROM GLYCATED HEMOGLOBIN) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8840,9028)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3005131' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3005131' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3005131
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8840,9028) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3005131
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3011163 (CHOLESTEROL.TOTAL/CHOLESTEROL IN HDL [MASS RATIO] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8523,8529,8554,8596,8606,-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3011163' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3011163' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3011163
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8523,8529,8554,8596,8606,-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3011163
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3044491 (CHOLESTEROL NON HDL [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8576,8840,9028)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3044491' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3044491' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3044491
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8576,8840,9028) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3044491
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4017361 (BLOOD UREA NITROGEN MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8753,8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4017361' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4017361' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4017361
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8753,8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4017361
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3006504 (EOSINOPHILS/100 LEUKOCYTES IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3006504' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3006504' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3006504
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3006504
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3000483 (GLUCOSE [MASS/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3000483' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3000483' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3000483
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3000483
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3033543 (SPECIFIC GRAVITY OF URINE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8523,-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3033543' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3033543' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3033543
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8523,-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3033543
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3045716 (ANION GAP IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8753,9557)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3045716' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3045716' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3045716
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8753,9557) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3045716
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4101713 (HIGH DENSITY LIPOPROTEIN CHOLESTEROL MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8636,8736,8753,8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4101713' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4101713' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4101713
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8636,8736,8753,8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4101713
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4103762 (ANION GAP MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8753,9557)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4103762' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4103762' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4103762
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8753,9557) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4103762
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3001008 (EPITHELIAL CELLS.SQUAMOUS [#/AREA] IN URINE SEDIMENT BY MICROSCOPY HIGH POWER FIELD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8765,8786,8889)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3001008' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3001008' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3001008
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8765,8786,8889) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3001008
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3009744 (MCHC [MASS/VOLUME] BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8564,8636,8713)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3009744' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3009744' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3009744
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8564,8636,8713) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3009744
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3013115 (EOSINOPHILS [#/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8848,8961,9444)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3013115' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3013115' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3013115
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3013115
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3019550 (SODIUM [MOLES/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8753,9557)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3019550' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3019550' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3019550
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8753,9557) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3019550
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3020416 (ERYTHROCYTES [#/VOLUME] IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (44777575,8734,8815)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3020416' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3020416' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3020416
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (44777575,8734,8815) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3020416
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3035583 (LEUKOCYTES [#/AREA] IN URINE SEDIMENT BY MICROSCOPY HIGH POWER FIELD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8786,8889)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3035583' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3035583' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3035583
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8786,8889) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3035583
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3035995 (ALKALINE PHOSPHATASE [ENZYMATIC ACTIVITY/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8645,8923)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3035995' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3035995' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3035995
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8645,8923) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3035995
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3038553 (BODY MASS INDEX (BMI) [RATIO]) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (9531)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3038553' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3038553' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3038553
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (9531) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3038553
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 35610320 (DIASTOLIC ARTERIAL PRESSURE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8876)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'35610320' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_35610320' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 35610320
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8876) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 35610320
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3001490 (NUCLEATED ERYTHROCYTES [#/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8784,8848,8961,9444)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3001490' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3001490' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3001490
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3001490
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4195214 (CHOLESTEROL/HDL RATIO MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8523,8554,8596,-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4195214' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4195214' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4195214
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8523,8554,8596,-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4195214
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 36306178 (GLOMERULAR FILTRATION RATE/1.73 SQ M.PREDICTED AMONG BLACKS [VOLUME RATE/AREA] IN SERUM, PLASMA OR BLOOD BY CREATININE-BASED FORMULA (CKD-EPI)) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (720870,8795)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'36306178' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_36306178' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 36306178
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (720870,8795) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 36306178
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 37393850 (MCHC - MEAN CORPUSCULAR HAEMOGLOBIN CONCENTRATION) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8636,8713)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'37393850' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_37393850' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 37393850
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8636,8713) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 37393850
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3004501 (GLUCOSE [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3004501' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3004501' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3004501
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3004501
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3008598 (THYROXINE (T4) FREE [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8817)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3008598' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3008598' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3008598
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8817) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3008598
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3018010 (NEUTROPHILS/100 LEUKOCYTES IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554,-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3018010' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3018010' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3018010
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554,-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3018010
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3022192 (TRIGLYCERIDE [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3022192' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3022192' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3022192
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3022192
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4151768 (PACK YEARS) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (9448,-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4151768' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4151768' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4151768
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (9448,-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4151768
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4197602 (SERUM TSH MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8719,9040,9093)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4197602' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4197602' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4197602
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8719,9040,9093) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4197602
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 46236952 (GLOMERULAR FILTRATION RATE/1.73 SQ M.PREDICTED [VOLUME RATE/AREA] IN SERUM, PLASMA OR BLOOD BY CREATININE-BASED FORMULA (MDRD)) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (720870,8795)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'46236952' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_46236952' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 46236952
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (720870,8795) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 46236952
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3006906 (CALCIUM [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3006906' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3006906' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3006906
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3006906
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3007070 (CHOLESTEROL IN HDL [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3007070' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3007070' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3007070
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3007070
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3020460 (C REACTIVE PROTEIN [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8751,8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3020460' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3020460' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3020460
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8751,8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3020460
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3023314 (HEMATOCRIT [VOLUME FRACTION] OF BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (44777604,8554)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3023314' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3023314' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3023314
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (44777604,8554) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3023314
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3035941 (MCH [ENTITIC MASS]) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8564,9655)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3035941' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3035941' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3035941
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8564,9655) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3035941
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3037072 (UROBILINOGEN [MASS/VOLUME] IN URINE BY TEST STRIP) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3037072' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3037072' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3037072
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3037072
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4151358 (HEMATOCRIT DETERMINATION) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (44777604,8554)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4151358' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4151358' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4151358
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (44777604,8554) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4151358
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4194332 (MONOCYTE COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8784,8848,8961,9444)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4194332' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4194332' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4194332
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4194332
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3001123 (PLATELET MEAN VOLUME [ENTITIC VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8583)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3001123' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3001123' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3001123
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8583) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3001123
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3012888 (DIASTOLIC BLOOD PRESSURE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8876)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3012888' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3012888' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3012888
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8876) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3012888
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3013707 (ERYTHROCYTE SEDIMENTATION RATE BY WESTERGREN METHOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8752)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3013707' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3013707' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3013707
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8752) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3013707
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3037511 (LYMPHOCYTES/100 LEUKOCYTES IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3037511' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3037511' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3037511
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3037511
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3040168 (IMMATURE GRANULOCYTES [#/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8848,8961,9444)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3040168' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3040168' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3040168
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3040168
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4097430 (SODIUM MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8753,9557)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4097430' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4097430' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4097430
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8753,9557) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4097430
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3005424 (BODY SURFACE AREA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8617)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3005424' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3005424' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3005424
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8617) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3005424
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3013603 (PROSTATE SPECIFIC AG [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8748,8842)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3013603' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3013603' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3013603
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8748,8842) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3013603
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3020509 (ALBUMIN/GLOBULIN [MASS RATIO] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8523,8554,8596,-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3020509' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3020509' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3020509
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8523,8554,8596,-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3020509
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3036277 (BODY HEIGHT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8582,9327,9330,9546)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3036277' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3036277' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3036277
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8582,9327,9330,9546) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3036277
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4301868 (PULSE RATE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8483,8541,8581)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4301868' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4301868' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4301868
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8483,8541,8581) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4301868
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 40762636 (BODY MASS INDEX (BMI) [PERCENTILE]) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'40762636' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_40762636' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 40762636
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 40762636
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 40765040 (25-HYDROXYVITAMIN D3+25-HYDROXYVITAMIN D2 [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8842,8845)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'40765040' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_40765040' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 40765040
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8842,8845) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 40765040
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3024386 (PLATELET MEAN VOLUME [ENTITIC VOLUME] IN BLOOD BY REES-ECKER) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8583)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3024386' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3024386' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3024386
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8583) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3024386
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3009201 (THYROTROPIN [UNITS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (44777578,8719,9040,9093)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3009201' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3009201' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3009201
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (44777578,8719,9040,9093) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3009201
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3024731 (MCV [ENTITIC VOLUME]) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8583)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3024731' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3024731' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3024731
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8583) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3024731
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3050479 (IMMATURE GRANULOCYTES/100 LEUKOCYTES IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554,-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3050479' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3050479' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3050479
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554,-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3050479
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4012479 (LOW DENSITY LIPOPROTEIN CHOLESTEROL MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8636,8753,8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4012479' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4012479' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4012479
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8636,8753,8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4012479
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4152194 (SYSTOLIC BLOOD PRESSURE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8876)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4152194' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4152194' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4152194
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8876) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4152194
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 37393840 (HAEMATOCRIT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (44777604,8523,8554,-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'37393840' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_37393840' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 37393840
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (44777604,8523,8554,-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 37393840
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3000593 (COBALAMIN (VITAMIN B12) [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8845)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3000593' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3000593' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3000593
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8845) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3000593
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3002888 (ERYTHROCYTE DISTRIBUTION WIDTH [ENTITIC VOLUME]) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8583)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3002888' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3002888' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3002888
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8583) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3002888
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3010910 (ERYTHROCYTES [#/VOLUME] IN BODY FLUID) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8647,8785,8815,8931)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3010910' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3010910' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3010910
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8647,8785,8815,8931) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3010910
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3013290 (CARBON DIOXIDE [PARTIAL PRESSURE] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8876)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3013290' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3013290' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3013290
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8876) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3013290
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3027970 (GLOBULIN [MASS/VOLUME] IN SERUM BY CALCULATION) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8636,8713,8950)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3027970' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3027970' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3027970
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8636,8713,8950) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3027970
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4239408 (HEART RATE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8483,8541,8581)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4239408' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4239408' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4239408
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8483,8541,8581) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4239408
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3010813 (LEUKOCYTES [#/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (44777588,8848,8961,9444)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3010813' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3010813' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3010813
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (44777588,8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3010813
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3023103 (POTASSIUM [MOLES/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8753,9557)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3023103' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3023103' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3023103
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8753,9557) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3023103
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4030871 (RED BLOOD CELL COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8734,8815,8931,9444)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4030871' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4030871' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4030871
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8734,8815,8931,9444) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4030871
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4154790 (DIASTOLIC BLOOD PRESSURE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8876)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4154790' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4154790' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4154790
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8876) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4154790
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4217013 (SYSTOLIC ARTERIAL PRESSURE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8876)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4217013' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4217013' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4217013
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8876) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4217013
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3001318 (CHOLESTEROL.TOTAL/CHOLESTEROL IN HDL [PERCENTILE]) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554,8596,-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3001318' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3001318' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3001318
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554,8596,-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3001318
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3004249 (SYSTOLIC BLOOD PRESSURE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8876)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3004249' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3004249' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3004249
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8876) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3004249
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte
# MAGIC )
# MAGIC INSERT INTO ${results_catalog}.${results_schema}.dqdashboard_results
# MAGIC SELECT *
# MAGIC FROM cte_all;
# MAGIC WITH cte_all  AS (SELECT cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  , CAST('' as STRING) as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3009596 (CHOLESTEROL IN VLDL [MASS/VOLUME] IN SERUM OR PLASMA BY CALCULATION) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8576,8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3009596' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3009596' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3009596
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8576,8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3009596
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3025315 (BODY WEIGHT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8739,9346,9373,9529)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3025315' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3025315' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3025315
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8739,9346,9373,9529) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3025315
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3053283 (GLOMERULAR FILTRATION RATE/1.73 SQ M.PREDICTED AMONG BLACKS [VOLUME RATE/AREA] IN SERUM, PLASMA OR BLOOD BY CREATININE-BASED FORMULA (MDRD)) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (720870,8795)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3053283' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3053283' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3053283
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (720870,8795) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3053283
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4008265 (TOTAL CHOLESTEROL MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8736,8753,8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4008265' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4008265' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4008265
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8736,8753,8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4008265
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 36303797 (GLOMERULAR FILTRATION RATE/1.73 SQ M.PREDICTED AMONG NON-BLACKS [VOLUME RATE/AREA] IN SERUM, PLASMA OR BLOOD BY CREATININE-BASED FORMULA (CKD-EPI)) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (720870,8795)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'36303797' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_36303797' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 36303797
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (720870,8795) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 36303797
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 37398460 (SERUM ALKALINE PHOSPHATASE LEVEL) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (32995,8645,8923)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'37398460' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_37398460' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 37398460
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (32995,8645,8923) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 37398460
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3013682 (UREA NITROGEN [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3013682' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3013682' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3013682
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3013682
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3026361 (ERYTHROCYTES [#/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (32706,8785,8815,8931)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3026361' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3026361' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3026361
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (32706,8785,8815,8931) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3026361
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3027018 (HEART RATE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8483,8541,-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3027018' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3027018' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3027018
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8483,8541,-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3027018
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4013965 (OXYGEN SATURATION MEASUREMENT, ARTERIAL) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4013965' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4013965' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4013965
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4013965
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3013429 (BASOPHILS [#/VOLUME] IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8784,8816,8848,8961,9436,9444)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3013429' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3013429' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3013429
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8816,8848,8961,9436,9444) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3013429
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3023599 (MCV [ENTITIC VOLUME] BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8583)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3023599' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3023599' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3023599
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8583) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3023599
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3036588 (NEUTROPHIL CYTOPLASMIC AB.PERINUCLEAR [PRESENCE] IN SERUM) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8525,-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3036588' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3036588' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3036588
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8525,-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3036588
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4298431 (WHITE BLOOD CELL COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8848,8961)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4298431' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4298431' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4298431
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8848,8961) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4298431
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3017732 (NEUTROPHILS [#/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8848,8961,9444)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3017732' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3017732' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3017732
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3017732
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3024561 (ALBUMIN [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8636,8713)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3024561' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3024561' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3024561
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8636,8713) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3024561
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3034639 (HEMOGLOBIN A1C [MASS/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8713,8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3034639' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3034639' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3034639
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8713,8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3034639
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3013650 (NEUTROPHILS [#/VOLUME] IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8784,8848,8961,9444)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3013650' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3013650' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3013650
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3013650
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3021886 (GLOBULIN [MASS/VOLUME] IN SERUM) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8636,8713,8950)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3021886' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3021886' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3021886
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8636,8713,8950) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3021886
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4254663 (LYMPHOCYTE COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8848)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4254663' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4254663' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4254663
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8848) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4254663
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3001420 (MAGNESIUM [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3001420' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3001420' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3001420
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3001420
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3007461 (PLATELETS [#/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8848,8961,9444)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3007461' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3007461' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3007461
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3007461
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3012030 (MCH [ENTITIC MASS] BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8564)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3012030' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3012030' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3012030
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8564) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3012030
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 40764999 (GLOMERULAR FILTRATION RATE/1.73 SQ M.PREDICTED [VOLUME RATE/AREA] IN SERUM, PLASMA OR BLOOD BY CREATININE-BASED FORMULA (CKD-EPI)) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (720870,8795)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'40764999' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_40764999' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 40764999
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (720870,8795) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 40764999
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3008893 (TESTOSTERONE [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8817)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3008893' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3008893' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3008893
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8817) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3008893
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3016723 (CREATININE [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3016723' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3016723' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3016723
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3016723
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3026910 (GAMMA GLUTAMYL TRANSFERASE [ENZYMATIC ACTIVITY/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8645,8923)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3026910' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3026910' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3026910
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8645,8923) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3026910
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3033575 (MONOCYTES [#/VOLUME] IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8784,8816,8848,8961,9436,9444)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3033575' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3033575' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3033575
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8816,8848,8961,9436,9444) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3033575
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3041084 (IMMATURE GRANULOCYTES [#/VOLUME] IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8848,8961,9444)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3041084' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3041084' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3041084
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3041084
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4184637 (HEMOGLOBIN A1C MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554,8632,8737)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4184637' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4184637' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4184637
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554,8632,8737) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4184637
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4313591 (RESPIRATORY RATE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8483,8541)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4313591' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4313591' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4313591
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8483,8541) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4313591
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 37393851 (MCV - MEAN CORPUSCULAR VOLUME) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8583)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'37393851' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_37393851' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 37393851
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8583) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 37393851
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 1619025 (GLOMERULAR FILTRATION RATE/1.73 SQ M.PREDICTED [VOLUME RATE/AREA] IN SERUM, PLASMA OR BLOOD BY CREATININE-BASED FORMULA (CKD-EPI 2021)) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (720870,8795)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'1619025' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_1619025' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 1619025
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (720870,8795) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 1619025
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3013869 (BASOPHILS/100 LEUKOCYTES IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3013869' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3013869' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3013869
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3013869
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3035472 (ALBUMIN/PROTEIN.TOTAL IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554,-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3035472' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3035472' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3035472
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554,-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3035472
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3039000 (ANION GAP IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8753,9557)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3039000' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3039000' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3039000
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8753,9557) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3039000
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3000905 (LEUKOCYTES [#/VOLUME] IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8816,8848,8961,9436,9444)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3000905' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3000905' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3000905
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8816,8848,8961,9436,9444) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3000905
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3015632 (CARBON DIOXIDE, TOTAL [MOLES/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8753,9557)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3015632' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3015632' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3015632
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8753,9557) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3015632
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3032710 (CALCIUM.IONIZED/CALCIUM.TOTAL CORRECTED FOR ALBUMIN IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554,-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3032710' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3032710' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3032710
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554,-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3032710
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4197971 (HBA1C MEASUREMENT (DCCT ALIGNED)) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554,8632,8737)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4197971' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4197971' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4197971
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554,8632,8737) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4197971
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 42869452 (IMMATURE GRANULOCYTES/100 LEUKOCYTES IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554,-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'42869452' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_42869452' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 42869452
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554,-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 42869452
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3002109 (CHOLESTEROL IN LDL/CHOLESTEROL IN HDL [MASS RATIO] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8523,8596,8606,-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3002109' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3002109' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3002109
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8523,8596,8606,-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3002109
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3004327 (LYMPHOCYTES [#/VOLUME] IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8784,8816,8848,8961,9436,9444)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3004327' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3004327' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3004327
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8816,8848,8961,9436,9444) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3004327
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3006322 (ORAL TEMPERATURE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (586323)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3006322' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3006322' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3006322
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (586323) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3006322
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3008342 (NEUTROPHILS/100 LEUKOCYTES IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3008342' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3008342' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3008342
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3008342
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3020630 (PROTEIN [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8636,8713)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3020630' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3020630' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3020630
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8636,8713) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3020630
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3001122 (FERRITIN [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8748,8842)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3001122' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3001122' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3001122
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8748,8842) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3001122
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3009542 (HEMATOCRIT [VOLUME FRACTION] OF BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3009542' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3009542' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3009542
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3009542
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3010189 (EPITHELIAL CELLS [#/AREA] IN URINE SEDIMENT BY MICROSCOPY HIGH POWER FIELD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8765,8786)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3010189' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3010189' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3010189
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8765,8786) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3010189
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3010457 (EOSINOPHILS/100 LEUKOCYTES IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3010457' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3010457' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3010457
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3010457
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4192368 (PLATELET MEAN VOLUME DETERMINATION) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8583)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4192368' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4192368' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4192368
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8583) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4192368
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3014576 (CHLORIDE [MOLES/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8753,9557)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3014576' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3014576' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3014576
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8753,9557) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3014576
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3024128 (BILIRUBIN.TOTAL [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3024128' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3024128' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3024128
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3024128
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3018311 (UREA NITROGEN/CREATININE [MASS RATIO] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8523,8554,8596,-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3018311' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3018311' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3018311
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8523,8554,8596,-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3018311
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3020891 (BODY TEMPERATURE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (586323,9289)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3020891' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3020891' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3020891
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (586323,9289) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3020891
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3037556 (URATE [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3037556' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3037556' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3037556
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3037556
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 37399332 (SERUM TSH (THYROID STIMULATING HORMONE) LEVEL) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (44777578,9040)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'37399332' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_37399332' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 37399332
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (44777578,9040) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 37399332
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3011904 (PHOSPHATE [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3011904' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3011904' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3011904
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3011904
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3019897 (ERYTHROCYTE DISTRIBUTION WIDTH [RATIO] BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554,-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3019897' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3019897' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3019897
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554,-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3019897
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3025255 (BACTERIA [#/AREA] IN URINE SEDIMENT BY MICROSCOPY HIGH POWER FIELD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8786)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3025255' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3025255' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3025255
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8786) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3025255
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4076704 (HIGH DENSITY LIPOPROTEIN MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8753,8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4076704' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4076704' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4076704
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8753,8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4076704
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4172647 (BASOPHIL COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8848,8961,9444)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4172647' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4172647' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4172647
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4172647
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 37393531 (SERUM ALANINE AMINOTRANSFERASE LEVEL) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (32995,8645,8923)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'37393531' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_37393531' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 37393531
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (32995,8645,8923) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 37393531
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 40771529 (IMMATURE GRANULOCYTES/100 LEUKOCYTES IN BODY FLUID) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554,-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'40771529' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_40771529' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 40771529
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554,-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 40771529
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3000034 (MICROALBUMIN [MASS/VOLUME] IN URINE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8576,8723,8751,8840,8859)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3000034' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3000034' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3000034
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8576,8723,8751,8840,8859) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3000034
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3035124 (ERYTHROCYTES [#/AREA] IN URINE SEDIMENT BY MICROSCOPY HIGH POWER FIELD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8786,8889)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3035124' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3035124' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3035124
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8786,8889) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3035124
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3002030 (LYMPHOCYTES/100 LEUKOCYTES IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554,8848)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3002030' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3002030' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3002030
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554,8848) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3002030
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3019170 (THYROTROPIN [UNITS/VOLUME] IN SERUM OR PLASMA BY DETECTION LIMIT <= 0.005 MIU/L) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (44777578,8719,8860,9040,9093,9550)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3019170' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3019170' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3019170
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (44777578,8719,8860,9040,9093,9550) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3019170
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3020149 (25-HYDROXYVITAMIN D3 [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8842)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3020149' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3020149' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3020149
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8842) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3020149
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3022174 (LEUKOCYTES [#/VOLUME] IN BODY FLUID) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8647,8784,8785,8848,8961)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3022174' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3022174' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3022174
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8647,8784,8785,8848,8961) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3022174
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3024929 (PLATELETS [#/VOLUME] IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8816,8848,8961,9436,9444)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3024929' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3024929' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3024929
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8816,8848,8961,9436,9444) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3024929
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3049187 (GLOMERULAR FILTRATION RATE/1.73 SQ M.PREDICTED AMONG NON-BLACKS [VOLUME RATE/AREA] IN SERUM, PLASMA OR BLOOD BY CREATININE-BASED FORMULA (MDRD)) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (720870,8795)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3049187' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3049187' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3049187
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (720870,8795) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3049187
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 37398676 (BASOPHIL COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8848)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'37398676' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_37398676' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 37398676
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8848) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 37398676
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4112223 (BUN/CREATININE RATIO) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8523,8596,-1)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4112223' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4112223' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4112223
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8523,8596,-1) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4112223
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3017250 (CREATININE [MASS/VOLUME] IN URINE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8576,8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3017250' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3017250' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3017250
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8576,8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3017250
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 4191837 (CALCULATED LDL CHOLESTEROL LEVEL) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8840)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'4191837' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_4191837' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4191837
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 4191837
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3022096 (BASOPHILS/100 LEUKOCYTES IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8554)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3022096' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3022096' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3022096
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3022096
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3034485 (ALBUMIN/CREATININE [MASS RATIO] IN URINE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8523,8723,8838,9017,9072)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3034485' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3034485' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3034485
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8523,8723,8838,9017,9072) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3034485
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 44790183 (GLOMERULAR FILTRATION RATE TESTING) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (720870,8795)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'44790183' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_44790183' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 44790183
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (720870,8795) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 44790183
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3002400 (IRON [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8749,8837)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3002400' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3002400' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3002400
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8749,8837) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3002400
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleUnitConceptIds' as check_name
# MAGIC  ,'CONCEPT' as check_level
# MAGIC  ,'The number and percent of records for a given CONCEPT_ID 3003338 (MCHC [MASS/VOLUME]) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN (8713)).' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_CONCEPT_ID' as cdm_field_name
# MAGIC  ,'3003338' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'concept_plausible_unit_concept_ids.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Atemporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'concept_plausibleunitconceptids_measurement_measurement_concept_id_3003338' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 5 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 5 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,5 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(*) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  m.* 
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3003338
# MAGIC  AND COALESCE (m.unit_concept_id, -1) NOT IN (8713) -- '-1' stands for the cases when unit_concept_id is null
# MAGIC  AND m.value_as_number IS NOT NULL 
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT m
# MAGIC  WHERE m.MEASUREMENT_CONCEPT_ID = 3003338
# MAGIC  AND value_as_number IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte
# MAGIC )
# MAGIC INSERT INTO ${results_catalog}.${results_schema}.dqdashboard_results
# MAGIC SELECT *
# MAGIC FROM cte_all;
# MAGIC

# COMMAND ----------

# MAGIC %sql
# MAGIC -- field plausible before death
# MAGIC
# MAGIC WITH cte_all  AS (SELECT cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  , CAST('' as STRING) as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the CONDITION_ERA_START_DATE field of the CONDITION_ERA table that occurs after death.' as check_description
# MAGIC  ,'CONDITION_ERA' as cdm_table_name
# MAGIC  ,'CONDITION_ERA_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_condition_era_condition_era_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_ERA.CONDITION_ERA_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.CONDITION_ERA_START_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.CONDITION_ERA_START_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.CONDITION_ERA_START_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the CONDITION_ERA_END_DATE field of the CONDITION_ERA table that occurs after death.' as check_description
# MAGIC  ,'CONDITION_ERA' as cdm_table_name
# MAGIC  ,'CONDITION_ERA_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_condition_era_condition_era_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_ERA.CONDITION_ERA_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.CONDITION_ERA_END_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.CONDITION_ERA_END_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_ERA cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.CONDITION_ERA_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the CONDITION_START_DATE field of the CONDITION_OCCURRENCE table that occurs after death.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_condition_occurrence_condition_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.CONDITION_START_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.CONDITION_START_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.CONDITION_START_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the CONDITION_START_DATETIME field of the CONDITION_OCCURRENCE table that occurs after death.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_START_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_condition_occurrence_condition_start_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.CONDITION_START_DATETIME' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.CONDITION_START_DATETIME IS NOT NULL 
# MAGIC  AND CAST(cdmTable.CONDITION_START_DATETIME AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.CONDITION_START_DATETIME IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the CONDITION_END_DATE field of the CONDITION_OCCURRENCE table that occurs after death.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_condition_occurrence_condition_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.CONDITION_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.CONDITION_END_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.CONDITION_END_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.CONDITION_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the CONDITION_END_DATETIME field of the CONDITION_OCCURRENCE table that occurs after death.' as check_description
# MAGIC  ,'CONDITION_OCCURRENCE' as cdm_table_name
# MAGIC  ,'CONDITION_END_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_condition_occurrence_condition_end_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'CONDITION_OCCURRENCE.CONDITION_END_DATETIME' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.CONDITION_END_DATETIME IS NOT NULL 
# MAGIC  AND CAST(cdmTable.CONDITION_END_DATETIME AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.CONDITION_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.CONDITION_END_DATETIME IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DEVICE_EXPOSURE_START_DATE field of the DEVICE_EXPOSURE table that occurs after death.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'DEVICE_EXPOSURE_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_device_exposure_device_exposure_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.DEVICE_EXPOSURE_START_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DEVICE_EXPOSURE_START_DATETIME field of the DEVICE_EXPOSURE table that occurs after death.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'DEVICE_EXPOSURE_START_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_device_exposure_device_exposure_start_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_START_DATETIME IS NOT NULL 
# MAGIC  AND CAST(cdmTable.DEVICE_EXPOSURE_START_DATETIME AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_START_DATETIME IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DEVICE_EXPOSURE_END_DATE field of the DEVICE_EXPOSURE table that occurs after death.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'DEVICE_EXPOSURE_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_device_exposure_device_exposure_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_END_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.DEVICE_EXPOSURE_END_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DEVICE_EXPOSURE_END_DATETIME field of the DEVICE_EXPOSURE table that occurs after death.' as check_description
# MAGIC  ,'DEVICE_EXPOSURE' as cdm_table_name
# MAGIC  ,'DEVICE_EXPOSURE_END_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_device_exposure_device_exposure_end_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_END_DATETIME IS NOT NULL 
# MAGIC  AND CAST(cdmTable.DEVICE_EXPOSURE_END_DATETIME AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DEVICE_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.DEVICE_EXPOSURE_END_DATETIME IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DOSE_ERA_START_DATE field of the DOSE_ERA table that occurs after death.' as check_description
# MAGIC  ,'DOSE_ERA' as cdm_table_name
# MAGIC  ,'DOSE_ERA_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_dose_era_dose_era_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.DOSE_ERA_START_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.DOSE_ERA_START_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.DOSE_ERA_START_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DOSE_ERA_END_DATE field of the DOSE_ERA table that occurs after death.' as check_description
# MAGIC  ,'DOSE_ERA' as cdm_table_name
# MAGIC  ,'DOSE_ERA_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_dose_era_dose_era_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DOSE_ERA.DOSE_ERA_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.DOSE_ERA_END_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.DOSE_ERA_END_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DOSE_ERA cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.DOSE_ERA_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DRUG_ERA_START_DATE field of the DRUG_ERA table that occurs after death.' as check_description
# MAGIC  ,'DRUG_ERA' as cdm_table_name
# MAGIC  ,'DRUG_ERA_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_drug_era_drug_era_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_ERA.DRUG_ERA_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.DRUG_ERA_START_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.DRUG_ERA_START_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.DRUG_ERA_START_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DRUG_ERA_END_DATE field of the DRUG_ERA table that occurs after death.' as check_description
# MAGIC  ,'DRUG_ERA' as cdm_table_name
# MAGIC  ,'DRUG_ERA_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_drug_era_drug_era_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_ERA.DRUG_ERA_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.DRUG_ERA_END_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.DRUG_ERA_END_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_ERA cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.DRUG_ERA_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DRUG_EXPOSURE_START_DATE field of the DRUG_EXPOSURE table that occurs after death.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'DRUG_EXPOSURE_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_drug_exposure_drug_exposure_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_START_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.DRUG_EXPOSURE_START_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_START_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DRUG_EXPOSURE_START_DATETIME field of the DRUG_EXPOSURE table that occurs after death.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'DRUG_EXPOSURE_START_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_drug_exposure_drug_exposure_start_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATETIME' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_START_DATETIME IS NOT NULL 
# MAGIC  AND CAST(cdmTable.DRUG_EXPOSURE_START_DATETIME AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_START_DATETIME IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DRUG_EXPOSURE_END_DATE field of the DRUG_EXPOSURE table that occurs after death.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'DRUG_EXPOSURE_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_drug_exposure_drug_exposure_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.DRUG_EXPOSURE_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_END_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.DRUG_EXPOSURE_END_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the DRUG_EXPOSURE_END_DATETIME field of the DRUG_EXPOSURE table that occurs after death.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'DRUG_EXPOSURE_END_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_drug_exposure_drug_exposure_end_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.DRUG_EXPOSURE_END_DATETIME' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_END_DATETIME IS NOT NULL 
# MAGIC  AND CAST(cdmTable.DRUG_EXPOSURE_END_DATETIME AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.DRUG_EXPOSURE_END_DATETIME IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the VERBATIM_END_DATE field of the DRUG_EXPOSURE table that occurs after death.' as check_description
# MAGIC  ,'DRUG_EXPOSURE' as cdm_table_name
# MAGIC  ,'VERBATIM_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_drug_exposure_verbatim_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'DRUG_EXPOSURE.VERBATIM_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.VERBATIM_END_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.VERBATIM_END_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.DRUG_EXPOSURE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.VERBATIM_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the MEASUREMENT_DATE field of the MEASUREMENT table that occurs after death.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_measurement_measurement_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.MEASUREMENT_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.MEASUREMENT_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.MEASUREMENT_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.MEASUREMENT_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the MEASUREMENT_DATETIME field of the MEASUREMENT table that occurs after death.' as check_description
# MAGIC  ,'MEASUREMENT' as cdm_table_name
# MAGIC  ,'MEASUREMENT_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_measurement_measurement_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'MEASUREMENT.MEASUREMENT_DATETIME' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.MEASUREMENT_DATETIME IS NOT NULL 
# MAGIC  AND CAST(cdmTable.MEASUREMENT_DATETIME AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.MEASUREMENT cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.MEASUREMENT_DATETIME IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the NOTE_DATE field of the NOTE table that occurs after death.' as check_description
# MAGIC  ,'NOTE' as cdm_table_name
# MAGIC  ,'NOTE_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_note_note_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE.NOTE_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.NOTE_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.NOTE_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.NOTE_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the note_timestamp field of the NOTE table that occurs after death.' as check_description
# MAGIC  ,'NOTE' as cdm_table_name
# MAGIC  ,'note_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_note_note_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'NOTE.note_timestamp' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.note_timestamp IS NOT NULL 
# MAGIC  AND CAST(cdmTable.note_timestamp AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.NOTE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.note_timestamp IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the OBSERVATION_DATE field of the OBSERVATION table that occurs after death.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'OBSERVATION_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_observation_observation_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.OBSERVATION_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.OBSERVATION_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.OBSERVATION_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.OBSERVATION_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the OBSERVATION_DATETIME field of the OBSERVATION table that occurs after death.' as check_description
# MAGIC  ,'OBSERVATION' as cdm_table_name
# MAGIC  ,'OBSERVATION_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_observation_observation_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION.OBSERVATION_DATETIME' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.OBSERVATION_DATETIME IS NOT NULL 
# MAGIC  AND CAST(cdmTable.OBSERVATION_DATETIME AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.OBSERVATION_DATETIME IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the OBSERVATION_PERIOD_START_DATE field of the OBSERVATION_PERIOD table that occurs after death.' as check_description
# MAGIC  ,'OBSERVATION_PERIOD' as cdm_table_name
# MAGIC  ,'OBSERVATION_PERIOD_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_observation_period_observation_period_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION_PERIOD cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.OBSERVATION_PERIOD_START_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION_PERIOD cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the OBSERVATION_PERIOD_END_DATE field of the OBSERVATION_PERIOD table that occurs after death.' as check_description
# MAGIC  ,'OBSERVATION_PERIOD' as cdm_table_name
# MAGIC  ,'OBSERVATION_PERIOD_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_observation_period_observation_period_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'OBSERVATION_PERIOD.OBSERVATION_PERIOD_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION_PERIOD cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.OBSERVATION_PERIOD_END_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.OBSERVATION_PERIOD_END_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.OBSERVATION_PERIOD cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.OBSERVATION_PERIOD_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the PAYER_PLAN_PERIOD_START_DATE field of the PAYER_PLAN_PERIOD table that occurs after death.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'PAYER_PLAN_PERIOD_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_payer_plan_period_payer_plan_period_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.PAYER_PLAN_PERIOD_START_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the PAYER_PLAN_PERIOD_END_DATE field of the PAYER_PLAN_PERIOD table that occurs after death.' as check_description
# MAGIC  ,'PAYER_PLAN_PERIOD' as cdm_table_name
# MAGIC  ,'PAYER_PLAN_PERIOD_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_payer_plan_period_payer_plan_period_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.PAYER_PLAN_PERIOD_END_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PAYER_PLAN_PERIOD cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the PROCEDURE_DATE field of the PROCEDURE_OCCURRENCE table that occurs after death.' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_procedure_occurrence_procedure_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROCEDURE_OCCURRENCE.PROCEDURE_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.PROCEDURE_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the PROCEDURE_DATETIME field of the PROCEDURE_OCCURRENCE table that occurs after death.' as check_description
# MAGIC  ,'PROCEDURE_OCCURRENCE' as cdm_table_name
# MAGIC  ,'PROCEDURE_DATETIME' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_procedure_occurrence_procedure_datetime' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'PROCEDURE_OCCURRENCE.PROCEDURE_DATETIME' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_DATETIME IS NOT NULL 
# MAGIC  AND CAST(cdmTable.PROCEDURE_DATETIME AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.PROCEDURE_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.PROCEDURE_DATETIME IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the SPECIMEN_DATE field of the SPECIMEN table that occurs after death.' as check_description
# MAGIC  ,'SPECIMEN' as cdm_table_name
# MAGIC  ,'SPECIMEN_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_specimen_specimen_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'SPECIMEN.SPECIMEN_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.SPECIMEN_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.SPECIMEN_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.SPECIMEN_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the specimen_timestamp field of the SPECIMEN table that occurs after death.' as check_description
# MAGIC  ,'SPECIMEN' as cdm_table_name
# MAGIC  ,'specimen_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_specimen_specimen_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'SPECIMEN.specimen_timestamp' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.specimen_timestamp IS NOT NULL 
# MAGIC  AND CAST(cdmTable.specimen_timestamp AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.SPECIMEN cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.specimen_timestamp IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the VISIT_DETAIL_START_DATE field of the VISIT_DETAIL table that occurs after death.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'VISIT_DETAIL_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_visit_detail_visit_detail_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.VISIT_DETAIL_START_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.VISIT_DETAIL_START_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.VISIT_DETAIL_START_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the visit_detail_start_timestamp field of the VISIT_DETAIL table that occurs after death.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'visit_detail_start_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_visit_detail_visit_detail_start_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.visit_detail_start_timestamp' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.visit_detail_start_timestamp IS NOT NULL 
# MAGIC  AND CAST(cdmTable.visit_detail_start_timestamp AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.visit_detail_start_timestamp IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the VISIT_DETAIL_END_DATE field of the VISIT_DETAIL table that occurs after death.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'VISIT_DETAIL_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_visit_detail_visit_detail_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.VISIT_DETAIL_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.VISIT_DETAIL_END_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.VISIT_DETAIL_END_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.VISIT_DETAIL_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the visit_detail_end_timestamp field of the VISIT_DETAIL table that occurs after death.' as check_description
# MAGIC  ,'VISIT_DETAIL' as cdm_table_name
# MAGIC  ,'visit_detail_end_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_visit_detail_visit_detail_end_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_DETAIL.visit_detail_end_timestamp' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.visit_detail_end_timestamp IS NOT NULL 
# MAGIC  AND CAST(cdmTable.visit_detail_end_timestamp AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_DETAIL cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.visit_detail_end_timestamp IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the VISIT_START_DATE field of the VISIT_OCCURRENCE table that occurs after death.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'VISIT_START_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_visit_occurrence_visit_start_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.VISIT_START_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.VISIT_START_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.VISIT_START_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the visit_start_timestamp field of the VISIT_OCCURRENCE table that occurs after death.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'visit_start_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_visit_occurrence_visit_start_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.visit_start_timestamp' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.visit_start_timestamp IS NOT NULL 
# MAGIC  AND CAST(cdmTable.visit_start_timestamp AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.visit_start_timestamp IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the VISIT_END_DATE field of the VISIT_OCCURRENCE table that occurs after death.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'VISIT_END_DATE' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_visit_occurrence_visit_end_date' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.VISIT_END_DATE' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.VISIT_END_DATE IS NOT NULL 
# MAGIC  AND CAST(cdmTable.VISIT_END_DATE AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.VISIT_END_DATE IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte UNION ALL SELECT 
# MAGIC  cte.num_violated_rows
# MAGIC  ,cte.pct_violated_rows
# MAGIC  ,cte.num_denominator_rows
# MAGIC  ,'' as execution_time
# MAGIC  ,'' as query_text
# MAGIC  ,'plausibleBeforeDeath' as check_name
# MAGIC  ,'FIELD' as check_level
# MAGIC  ,'The number and percent of records with a date value in the visit_end_timestamp field of the VISIT_OCCURRENCE table that occurs after death.' as check_description
# MAGIC  ,'VISIT_OCCURRENCE' as cdm_table_name
# MAGIC  ,'visit_end_timestamp' as cdm_field_name
# MAGIC  ,'NA' as concept_id
# MAGIC  ,'NA' as unit_concept_id
# MAGIC  ,'field_plausible_before_death.sql' as sql_file
# MAGIC  ,'Plausibility' as category
# MAGIC  ,'Temporal' as subcategory
# MAGIC  ,'Verification' as context
# MAGIC  ,'' as warning
# MAGIC  ,'' as error
# MAGIC  ,'field_plausiblebeforedeath_visit_occurrence_visit_end_timestamp' as checkid
# MAGIC  ,0 as is_error
# MAGIC  ,0 as not_applicable
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) > 1 THEN 1 ELSE 0 END as failed
# MAGIC  ,CASE WHEN (cte.pct_violated_rows * 100) <= 1 THEN 1 ELSE 0 END as passed
# MAGIC  ,NULL as not_applicable_reason
# MAGIC  ,1 as threshold_value
# MAGIC  ,NULL as notes_value
# MAGIC FROM (
# MAGIC  SELECT num_violated_rows, 
# MAGIC  CASE 
# MAGIC  WHEN denominator.num_rows = 0 THEN 0 
# MAGIC  ELSE 1.0*num_violated_rows/denominator.num_rows 
# MAGIC  END AS pct_violated_rows, 
# MAGIC  denominator.num_rows AS num_denominator_rows
# MAGIC  FROM (SELECT 
# MAGIC  COUNT(violated_rows.violating_field) AS num_violated_rows
# MAGIC  FROM
# MAGIC  (
# MAGIC  /*violatedRowsBegin*/
# MAGIC  SELECT 
# MAGIC  'VISIT_OCCURRENCE.visit_end_timestamp' AS violating_field, 
# MAGIC  cdmTable.*
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death de 
# MAGIC  ON cdmTable.person_id = de.person_id
# MAGIC  WHERE cdmTable.visit_end_timestamp IS NOT NULL 
# MAGIC  AND CAST(cdmTable.visit_end_timestamp AS DATE) > DATE_ADD(day,60,de.death_date)
# MAGIC  /*violatedRowsEnd*/
# MAGIC  ) violated_rows
# MAGIC ) violated_row_count cross join (SELECT 
# MAGIC  COUNT(*) AS num_rows
# MAGIC  FROM ${omop_catalog}.${omop_schema}.VISIT_OCCURRENCE cdmTable
# MAGIC  JOIN ${omop_catalog}.${omop_schema}.death
# MAGIC  ON death.person_id = cdmTable.person_id
# MAGIC  WHERE cdmTable.visit_end_timestamp IS NOT NULL
# MAGIC ) denominator
# MAGIC ) cte
# MAGIC )
# MAGIC INSERT INTO ${results_catalog}.${results_schema}.dqdashboard_results
# MAGIC SELECT *
# MAGIC FROM cte_all;
# MAGIC
# MAGIC

# COMMAND ----------


